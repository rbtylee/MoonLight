group { "elm/panel/left/default";
	images.image: "menu_arrow_normal.png"   COMP;
	images.image: "menu_arrow_l_normal.png" COMP;
	images.image: "menu_arrow_u_normal.png" COMP;
	images.image: "menu_arrow_d_normal.png" COMP;
	data.item: "focus_highlight" "on";

	parts {
		spacer { "all";
			desc { "default"; }
		}
		part { "base";
			desc { "default"; color_class: "dialog_base";
				rel1.to_x: "all";
				rel2.to_x: "elm.swallow.event";
				rel2.relative: 0.0 1.0;
				rel2.offset: -4 -1;
				image.normal: "dia_bg.png";
				image.border: 15 15 2 2;
				fill.smooth: 0;
			}
		}
		swallow { "elm.swallow.content";
			desc { "default";
				rel1.offset: 4 4; rel1.to: "base";
				rel2.offset: -5 -5; rel2.to: "base";
			}
		}
		swallow { "elm.swallow.event";
			desc { "default"; min: 20 20; max: 20 20; color: "#00000000";
				fixed: 1 1;
				align: 1.0 0.5;
				rel1.relative: 1.0 0.0; rel2.relative: 1.0 1.0;

			}
			desc { "hidden"; inherit;
				align: 0.0 0.5;
				rel1.relative: 0.0 0.0; rel2.relative: 0.0 1.0;
			}
		}
		rect { "btn";
			desc { "default"; color: "#00000000";
				rel1.to: "elm.swallow.event"; rel2.to: "elm.swallow.event";
			}
		}
		part { "icn"; nomouse; scale;
			desc { "default"; FIXED_SIZE(9,12)
				STAY_ON("btn")
				image.normal: "menu_arrow_l_normal.png";
			}
			desc { "hidden"; inherit;
				image.normal: "menu_arrow_normal.png";
			}
		}
	}

	programs {
		program {
			signal: "mouse,clicked,1"; source: "btn";
			action: SIGNAL_EMIT "elm,action,panel,toggle" "elm";
		}
		program {
			signal: "elm,action,show"; source: "elm";
			action: STATE_SET "default" 0.0;
			transition: DECELERATE 0.3;
			target: "elm.swallow.event";
			target: "base";
			target: "icn";
		}
		program {
			signal: "elm,action,hide"; source: "elm";
			action: STATE_SET "hidden" 0.0;
			transition: ACCELERATE 0.3;
			target: "elm.swallow.event";
			target: "icn";
		}
		program { "hide1";
			signal: "elm,action,hide"; source: "elm";
			script {
				new x, y, w, h;

				custom_state(PART:"base", "default", 0.0);
				set_state_val(PART:"base", STATE_REL1, -1.0, 0.0);
				get_geometry(PART:"elm.swallow.event", x, y, w, h);
				set_state_val(PART:"base", STATE_REL1_OFFSET, w, 0);
			}
			after: "hide2";
		}
		program { "hide2";
			action: STATE_SET "custom" 0.0;
			transition: ACCELERATE 0.3;
			target: "base";
		}
	}
}

group { "elm/panel/right/default";
	inherit: "elm/panel/left/default";

	parts {
		part { "base";
			desc { "default";
				rel1.relative: 1.0 0.0;
				rel1.to_x: "elm.swallow.event";
				rel1.offset: 3 0;
				rel2.relative: 1.0 1.0;
				rel2.to_x: "all";
				rel2.offset: -1 -1;
			}
		}
		part { "elm.swallow.event";
			desc { "default";
				align: 0.0 0.5;
				rel1.relative: 0.0 0.0; rel2.relative: 0.0 1.0;
			}
			desc { "hidden";
				align: 1.0 0.5;
				rel1.relative: 1.0 0.0; rel2.relative: 1.0 1.0;
			}
		}
		part { "icn";
			desc { "default";
				image.normal: "menu_arrow_normal.png";
			}
			desc { "hidden";
				image.normal: "menu_arrow_l_normal.png";
			}
		}
	}

	programs {
		program { "hide1";
			script {
				new x, y, w, h;

				custom_state(PART:"base", "default", 0.0);
				set_state_val(PART:"base", STATE_REL1, 1.0, 0.0);
				set_state_val(PART:"base", STATE_REL2, 2.0, 1.0);
				get_geometry(PART:"elm.swallow.event", x, y, w, h);
				set_state_val(PART:"base", STATE_REL2_OFFSET, -w, 0);
			}
		}
	}
}

group { "elm/panel/top/default";
	inherit: "elm/panel/left/default";

	parts {
		part { "base";
			desc { "default";
				rel1.relative: 0.0 0.0;
				rel1.to_x: "all";
				rel1.to_y: "all";
				rel1.offset: 0 0;
				rel2.relative: 1.0 0.0;
				rel2.to_x: "all";
				rel2.to_y: "elm.swallow.event";
				rel2.offset: -1 -4;
			}
		}
		part { "elm.swallow.event";
			desc { "default";
				align: 0.5 1.0;
				rel1.relative: 0.0 1.0; rel2.relative: 1.0 1.0;
			}
			desc { "hidden";
				align: 0.5 0.0;
				rel1.relative: 0.0 0.0; rel2.relative: 1.0 0.0;
			}
		}
		part { "icn";
			desc { "default"; FIXED_SIZE(12,9)
				image.normal: "menu_arrow_u_normal.png";
			}
			desc { "hidden"; FIXED_SIZE(12,9)
				image.normal: "menu_arrow_d_normal.png";
			}
		}
	}

	programs {
		program { "hide1";
			script {
				new x, y, w, h;

				custom_state(PART:"base", "default", 0.0);
				set_state_val(PART:"base", STATE_REL1, 0.0, -1.0);
				set_state_val(PART:"base", STATE_REL2, 1.0, 0.0);
				get_geometry(PART:"elm.swallow.event", x, y, w, h);
				set_state_val(PART:"base", STATE_REL1_OFFSET, 0, h);
			}
		}
	}
}

group { "elm/panel/bottom/default";
	inherit: "elm/panel/left/default";

	parts {
		part { "base";
			desc { "default";
				rel1.relative: 0.0 1.0;
				rel1.to_x: "all";
				rel1.to_y: "elm.swallow.event";
				rel1.offset: 0 3;
				rel2.relative: 1.0 1.0;
				rel2.to_x: "all";
				rel2.to_y: "all";
				rel2.offset: -1 -1;
			}
		}
		part { "elm.swallow.event";
			desc { "default";
				align: 0.5 0.0;
				rel1.relative: 0.0 0.0; rel2.relative: 1.0 0.0;
			}
			desc { "hidden";
				align: 0.5 1.0;
				rel1.relative: 0.0 1.0; rel2.relative: 1.0 1.0;
			}
		}
		part { "icn";
			desc { "default"; FIXED_SIZE(12,9)
				image.normal: "menu_arrow_d_normal.png";
			}
			desc { "hidden"; FIXED_SIZE(12,9)
				image.normal: "menu_arrow_u_normal.png";
			}
		}
	}

	programs {
		program { "hide1";
			script {
				new x, y, w, h;

				custom_state(PART:"base", "default", 0.0);
				set_state_val(PART:"base", STATE_REL1, 0.0, 1.0);
				set_state_val(PART:"base", STATE_REL2, 1.0, 2.0);
				get_geometry(PART:"elm.swallow.event", x, y, w, h);
				set_state_val(PART:"base", STATE_REL2_OFFSET, 0, -h);
			}
		}
	}
}
