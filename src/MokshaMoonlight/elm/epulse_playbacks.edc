#define ADD_SPACER(_name, _min_x, _min_y, _max_x, _max_y, _align_x,         \
                   _align_y, _rel1_to_x, _rel1_to_y, _rel1_x, _rel1_y,      \
                   _rel2_to_x, _rel2_to_y, _rel2_x, _rel2_y)                \
	part { _name; scale;																											\
		type: SPACER;																														\
		desc { "default";																												\
			min: _min_x _min_y; max: _max_x _max_y;																\
			fixed: 1 1;																														\
			align: _align_x _align_y;																							\
			rel1.to_x: _rel1_to_x;																								\
			rel1.to_y: _rel1_to_y;																								\
			rel1.relative: _rel1_x _rel1_y;																				\
			rel2.to_x: _rel2_to_x;																								\
			rel2.to_y: _rel2_to_y;																								\
			rel2.relative: _rel2_x _rel2_y;																				\
		}																																				\
	}

group { "elm/layout/playbacks/default";
	alias: "elm/layout/sinks/default";
	alias: "elm/layout/sources/default";

	parts {
		rect { "bg"; mouse;
			desc { "default"; color: "#00000000"; }
		}
		swallow { "list";
			desc { "default"; }
		}
	}
}

group { "elm/genlist/item/playbacks/default";
	alias: "elm/genlist/item/sinks/default";
	alias: "elm/genlist/item/sources/default";
	data.item: "texts" "name";
	data.item: "contents" "slider mute icon hover";

	color_classes {
		color_class { "playback_name";
			color: "#000000";
		}
	}
	parts {
		rect { "base"; mouse; scale;
			desc {"default"; min: 0 75; max: -1 75;
				color_class: "ilist_item_base";
			}
			desc { "odd"; min: 0 75; max: -1 75;
				color_class: "ilist_item_base_odd";
			}
		}
		swallow { "mute"; scale;
			desc { "default";
				align: 1.0 0.0;
				fixed: 1 1;
				rel1.relative: 1.0 0.0;
				rel1.offset: 0 4;
				rel2.relative: 1.0 0.0;
			}
		}
		swallow { "hover"; scale;
			desc { "default";
				align: 1.0 0.0;
				fixed: 1 1;
				rel1.relative: 0.0 0.0;
				rel1.to_x: "mute";
				rel2.relative: 0.0 0.0;
				rel2.to_x: "mute";
			}
		}
		swallow { "icon"; scale;
			desc { "default";
				align: 0.0 0.0;
				FIXED_SIZE(40, 40)
				rel1.relative: 0.0 0.0;
				rel1.offset: 4 4;
				rel2.relative: 0.0 0.0;
			}
		}
		ADD_SPACER("spacer.icon", 20, 20, 20, 20, 0.0, 0.5, "icon", "icon",
                 1.0, 0.0, "icon", "icon", 1.0, 1.0)
		text { "name"; nomouse; scale;
			desc { "default"; color_class: "label_text";
				align: 0.0 0.5;
				fixed: 0 1;
				rel1.to: "spacer.icon";
				rel1.relative: 1.0 0.0;
				rel2.to_x: "hover";
				rel2.to_y: "spacer.icon";
				rel2.relative: 0.0 1.0;
				text.size: 10;
				text.align: 0.0 0.5;
				text.min: 0 1;
			}
			ADD_SPACER("spacer.mute", 0, 20, 0, 20, 0.0, 0.0, "base", "mute",
                 0.0, 1.0, "base", "mute", 0.0, 1.0)
			part { "slider"; scale;
				type: SWALLOW;
				desc { "default";
					fixed: 1 1;
					align: 0.5 0.0;
					rel1.to_y: "spacer.mute";
					rel1.relative: 0.0 1.0;
					rel2.to: "base";
					rel2.relative: 1.0 1.0;
				}
			}
		}

		programs {
			program {
				signal: "elm,state,odd"; source: "elm";
				action: STATE_SET "odd" 0.0;
				target: "base";
			}
			program {
				signal: "elm,state,even"; source: "elm";
				action: STATE_SET "default" 0.0;
				target: "base";
			}
		}
	}
}
