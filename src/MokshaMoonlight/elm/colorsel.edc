group { "elm/colorselector/palette/default";
	data.item: "horizontal_pad" 0;
	data.item: "vertical_pad" 0;

	parts {
		swallow { "elm.picker";
			desc { "default";
				fixed: 0 1;
				align: 0.5 0.0;
				rel2.relative: 1.0 0.0;
			}
		}
		rect { "sep1";
			desc { "default"; min: 1 1; max: 99999 1; color: "#00000014";
				fixed: 1 1;
				rel1.to_y: "elm.picker";
				rel1.offset: 4 4;
				rel1.relative: 0.0 1.0;
				rel2.to_y: "elm.picker";
				rel2.offset: -5 5;
			}
			desc { "off"; inherit; hid;
				rel1.offset: 4 -2;
				rel2.offset: -5 -1;
			}
		}
		swallow { "elm.palette";
			desc { "default";
				align: 0.5 0.0;
				rel1.to_y: "sep1";
				rel1.relative: 0.0 1.0;
				rel1.offset: 0 4;
				rel2.to_y: "sep2";
				rel2.relative: 1.0 0.0;
				rel2.offset: -1 -5;
			}
			desc { "off"; inherit;
				rel1.offset: 0 0;
				rel2.offset: -1 -1;
			}
		}
		rect { "sep2";
			desc { "default"; min: 1 1; max: 99999 1; color: "#00000014";
				fixed: 1 1;
				rel1.to_y: "elm.selector";
				rel1.offset: 4 -6;
				rel2.to_y: "elm.selector";
				rel2.offset: -5 -5;
				rel2.relative: 1.0 0.0;
			}
			desc { "off"; inherit; hid;
				rel1.offset: 4 0;
				rel2.offset: -5 1;
			}
		}
		swallow { "elm.selector";
			desc { "default";
				fixed: 0 1;
				align: 0.0 1.0;
				rel1.relative: 0.0 1.0;
			}
		}
	}

	programs {
		program {
			source: "elm"; signal: "elm,state,palette";
			action: STATE_SET "off" 0.0;
			target: "sep1";
			target: "sep2";
		}
		program {
			source: "elm"; signal: "elm,state,palette";
			action: STATE_SET "default" 0.0;
			target: "elm.palette";
		}
		program {
			source: "elm"; signal: "elm,state,components";
			action: STATE_SET "off" 0.0;
			target: "sep1";
			target: "sep2";
			target: "elm.palette";
		}
		program {
			source: "elm"; signal: "elm,state,both";
			action: STATE_SET "off" 0.0;
			target: "sep1";
		}
		program {
			source: "elm"; signal: "elm,state,both";
			action: STATE_SET "default" 0.0;
			target: "elm.palette";
			target: "sep2";
		}
		program {
			source: "elm"; signal: "elm,state,picker";
			action: STATE_SET "off" 0.0;
			target: "sep1";
			target: "sep2";
			target: "elm.palette";
		}
		program {
			source: "elm"; signal: "elm,state,all";
			action: STATE_SET "default" 0.0;
			target: "sep1";
			target: "sep2";
			target: "elm.palette";
		}
	}
}

group { "elm/colorselector/picker/default";
	images.image: "inset_sunk.png" COMP;

	parts {
		rect { "clipper";
			desc { "default";
				rel1.to: "elm.picker";
				rel2.to: "elm.picker";
			}
		}
		swallow { "elm.picker"; clip: "clipper";
			desc { "default";
				rel1.offset: 3 3;
				rel2.offset: -4 -4;
			}
		}
		part { "bg"; nomouse; scale;
			desc { "default"; min: 18 18;
				rel1.offset: -1 -1;
				rel2.offset: 0 0;
				rel1.to: "elm.picker";
				rel2.to: "elm.picker";
				image.normal: "inset_sunk.png";
				image.border: 6 6 6 6;
				image.middle: 0;
			}
		}
	}
}

group { "elm/colorselector/bg/default";
	parts {
		swallow { "elm.colorbar_0";
			desc { "default";
				rel2.relative: 1.0 0.0;
				align: 0.5 0.0;
				fixed: 0 1;
			}
		}
		swallow { "elm.colorbar_1";
			desc { "default";
				rel1.to_y: "elm.colorbar_0";
				rel1.relative: 0.0 1.0;
				rel2.to_y: "elm.colorbar_0";
				rel2.relative: 1.0 1.0;
				align: 0.5 0.0;
				fixed: 0 1;
			}
		}
		swallow { "elm.colorbar_2";
			desc { "default";
				rel1.to_y: "elm.colorbar_1";
				rel1.relative: 0.0 1.0;
				rel2.to_y: "elm.colorbar_1";
				rel2.relative: 1.0 1.0;
				align: 0.5 0.0;
				fixed: 0 1;
			}
		}
		swallow { "elm.colorbar_3";
			desc { "default";
				rel1.to_y: "elm.colorbar_2";
				rel1.relative: 0.0 1.0;
				align: 0.5 0.0;
			}
		}
	}
}


group { "elm/colorselector/base/default";
	images.image: "inset_sunk.png" COMP;
	images.image: "ring_shadow.png" COMP;
	images.image: "ring_white_blue_glow.png" COMP;

	parts {
		swallow { "elm.bar_bg"; nomouse;
			desc { "default"; min: 32 15;
				rel1.offset: 0 10;
				rel1.to_x: "elm.arrow_bg";
				rel2.offset: -1 -11;
				rel2.to_x: "elm.arrow_bg";
			}
		}
		swallow { "elm.bar"; nomouse;
			desc { "default";
				rel1.to: "elm.bar_bg";
				rel2.to: "elm.bar_bg";
			}
		}
		part { "shadow"; nomouse;
			desc { "default";
				image.normal: "inset_sunk.png";
				image.border: 6 6 6 6;
				image.middle: 0;
				rel1.to: "elm.bar_bg";
				rel1.offset: -1 -1;
				rel2.to: "elm.bar_bg";
				rel2.offset: 0 0;
				fill.smooth: 0;
			}
		}
		swallow { "elm.arrow_bg";
			desc { "default";
				rel1.relative: 1.0 0.0;
				rel1.offset: 6 0;
				rel1.to_x: "elm.l_button";
				rel2.relative: 0.0 1.0;
				rel2.offset: -6 0;
				rel2.to_x: "elm.r_button";
			}
		}
		rect { "elm.arrow";
			desc { "default"; min: 1 1; hid;
				fixed: 1 1;
				rel1.to_x: "elm.arrow_bg";
				rel2.to_x: "elm.arrow_bg";
			}
			dragable.confine: "elm.arrow_bg";
			dragable.x: 1 1 0;
			dragable.y: 0 0 0;
		}
		rect { "event";
			desc { "default"; color: "#00000000";
				rel1.to: "elm.arrow_icon";
				rel2.to_x: "elm.arrow_icon";
				rel2.to_y: "elm.arrow_bg";
			}
			dragable.events: "elm.arrow";
		}
		part { "arrow_under"; nomouse;
			desc { "default";
				image.normal: "ring_shadow.png";
				rel1.to: "elm.arrow_icon";
				rel1.offset: -2 -3;
				rel2.to: "elm.arrow_icon";
				rel2.offset: 1 1;
			}
		}
		swallow { "elm.arrow_icon"; nomouse; scale;
			desc { "default"; min: 16 16; max: 16 16;
				fixed: 1 1;
				align: 0.5 (28/32);
				rel1.to_x: "elm.arrow";
				rel1.to_y: "shadow";
				rel2.relative: 1.0 0.0;
				rel2.to_x: "elm.arrow";
				rel2.to_y: "shadow";
			}
		}
		part { "arrow_over"; nomouse;
			desc { "default";
				image.normal: "ring_white_blue_glow.png";
				rel1.to: "elm.arrow_icon";
				rel2.to: "elm.arrow_icon";
			}
		}
		rect { "cursor";
			desc { "default"; min: 1 1; color: "#FFFFFF96";
				fixed: 1 1;
				rel1.to_x: "elm.arrow_icon";
				rel1.to_y: "shadow";
				rel1.relative: 0.5 0.0;
				rel2.to_x: "elm.arrow_icon";
				rel2.to_y: "shadow";
				rel2.relative: 0.5 1.0;
				rel2.offset: 0 -1;
			}
			dragable.events: "elm.arrow";
		}
		rect { "elm.arrow_bg_access"; repeat;
			desc { "default"; color: "#00000000";
				rel1.to: "elm.arrow_bg";
				rel2.to: "elm.arrow_bg";
			}
		}
		swallow { "elm.l_button"; scale;
			desc { "default"; min: 20 20;
				fixed: 1 1;
				rel1.relative: 0.0 0.0;
				rel1.to_y: "elm.bar_bg";
				rel2.relative: 0.0 1.0;
				rel2.to_y: "elm.bar_bg";
				align: 0.0 0.5;
			}
		}
		swallow { "elm.r_button"; scale;
			desc { "default"; min: 20 20;
				fixed: 1 1;
				rel1.relative: 1.0 0.0;
				rel1.to_y: "elm.bar_bg";
				rel2.relative: 1.0 1.0;
				rel2.to_y: "elm.bar_bg";
				align: 1.0 0.5;
			}
		}
	}
}

group { "elm/colorselector/arrow/default";
	images.image: "ring_white_middle.png" COMP;

	parts {
		part { "base";
			desc { "default";
				aspect: 1.0 1.0; aspect_preference: BOTH;
				image.normal: "ring_white_middle.png";
			}
		}
	}
}

group{ "elm/colorselector/image/colorbar_0/default";
	images.image: "color_picker_color.png" COMP;

	parts {
		image { "colorbar_0_image";
			desc { "default";
				rel2.offset: -1 -1;
				image.normal: "color_picker_color.png";
			}
		}
	}
}

group { "elm/colorselector/image/colorbar_1/default";
	images.image: "color_picker_opacity.png" COMP;

	parts {
		part { "colorbar_1_image";
			desc { "default";
				image.normal: "color_picker_opacity.png";
			}
		}
	}
}

group { "elm/colorselector/image/colorbar_2/default";
	images.image: "color_picker_brightness.png" COMP;
	parts {
		part { "colorbar_2_image";
			desc { "default";
				image.normal: "color_picker_brightness.png";
			}
		}
	}
}

group { "elm/colorselector/image/colorbar_3/default";
	images.image: "color_picker_alpha.png" COMP;

	parts {
		part { "colorbar_3_image";
			desc { "default";
				image.normal: "color_picker_alpha.png";
			}
		}
	}
}

group { "elm/colorselector/bg_image/colorbar_3/default";
	parts {
		rect { "bg";
			desc { "default";
				color: TRANSPARENT;
			}
		}
	}
}

group { "elm/colorselector/item/default";
	images.image: "inset_sunk.png" COMP;

	parts {
		rect { "clipper";
			desc { "default";
				rel1.to: "color_obj";
				rel2.to: "color_obj";
			}
			desc { "disabled"; inherit; color: "#FFFFFF40"; }
		}
		swallow { "color_obj"; clip: "clipper";
			desc { "default";
				rel1.offset: 3 3;
				rel2.offset: -4 -4;
			}
		}
		part { "bg"; nomouse; scale;
			desc { "default"; min: 20 20;
				rel1.to: "color_obj";
				rel1.offset: -1 -1;
				rel2.to: "color_obj";
				rel2.offset: 0 0;
				image.normal: "inset_sunk.png";
				image.border: 6 6 6 6;
				image.middle: 0;
			}
		}
	}
}

group { "elm/colorselector/item/color/default";
	parts {
		rect { "color_rect";
			desc{ "default"; }
		}
	}
}
