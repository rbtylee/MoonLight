group { "elm/scroller/entry/default";
	inherit: "elm/scroller/base/default";
	parts {
		part { "bg"; nomouse;
			desc { state: "default" 0.0;
				color: VISIBLE;
				color_class: "none";
			}
		}
		part { "clipper"; type: RECT; nomouse;
			desc { state: "default" 0.0;
				STAY_ON("bg")
			}
		}
		part { "elm.swallow.content";
			desc { state: "default" 0.0;
				rel1.to: "elm.swallow.icon";
				rel1.relative: 1.0 0.0;
				rel1.offset: 0 0;
				//rel2.to: "elm.swallow.end";
				//rel2.relative: 0.0 1.0;
				//rel2.offset: -1 -1;
			}
		}
		part { "elm.swallow.icon"; type: SWALLOW;
			clip: "clipper";
			desc { state: "default" 0.0;
				fixed: 1 1;
				rel1.to: "clipper";
				rel1.offset: 1 1;
				rel2.to: "clipper";
				rel2.offset: 1 -2;
				rel2.relative: 0.0 1.0;
				visible: 0;
				align: 1.0 0.0;
			}
			desc { state: "visible" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				align: 0.0 0.0;
			}
		}
		
		part { "elm.swallow.end"; type: SWALLOW;
			clip: "clipper";
			desc { state: "default" 0.0;
				fixed: 1 1;
				rel1.to: "clipper";
				rel1.offset: -2 1;
				rel1.relative: 1.0 0.0;
				rel2.to: "clipper";
				rel2.offset: -2 -2;
				visible: 0;
				align: 0.0 0.0;
			}
			desc { state: "visible" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				align: 1.0 0.0;
			}
		}
		program {
			signal: "elm,action,show,end"; source: "elm";
			action: STATE_SET "visible" 0.0;
			target: "elm.swallow.end";
		}
		program {
			signal: "elm,action,hide,end"; source: "elm";
			action: STATE_SET "default" 0.0;
			target: "elm.swallow.end";
		}
	}
	programs {
	  program {
			signal: "elm,action,show,icon"; source: "elm";
			action: STATE_SET "visible" 0.0;
			target: "elm.swallow.icon";
		}
		program {
			signal: "elm,action,hide,icon"; source: "elm";
			action: STATE_SET "default" 0.0;
			target: "elm.swallow.icon";
		}
	}
}

group { "elm/scroller/entry_single/default";
	//~ images.image: "entry0.png" COMP;
	//~ images.image: "entry1.png" COMP;
	//~ images.image: "entry2.png" COMP;
	images.image: "entry.png" COMP;
	
	data.item: "focus_highlight" "on";
	
	parts {
		part { "sb_vbar_base"; type: RECT;
			desc { state: "default" 0.0;
				fixed: 1 1;
				rel2.relative: 1.0 0.0;
				visible: 0;
			}
		}
		part { "elm.dragable.vbar"; type: RECT;
			dragable.x: 0 0 0;
			dragable.y: 1 1 0;
			dragable.confine: "sb_vbar_base";
			desc { state: "default" 0.0;
				fixed: 1 1;
				rel1.relative: 0.5  0.5;
				rel1.to: "sb_vbar_base";
				rel2.relative: 0.5  0.5;
				rel2.to: "sb_vbar_base";
				visible: 0;
			}
		}
		part { "sb_hbar_base"; type: RECT;
			desc { state: "default" 0.0;
				fixed: 1 1;
				rel1.relative: 1.0 0.0;
				visible: 0;
			}
		}
		part { "elm.dragable.hbar"; type: RECT;
			dragable.x: 1 1 0;
			dragable.y: 0 0 0;
			dragable.confine: "sb_hbar_base";
			desc { state: "default" 0.0;
				fixed: 1 1;
				rel1.relative: 0.5  0.5;
				rel1.to: "sb_hbar_base";
				rel2.relative: 0.5  0.5;
				rel2.to: "sb_hbar_base";
				visible: 0;
			}
		}
		part { "bg";
			desc { state: "default" 0.0;
				image.normal: "entry.png";
				image.border: 6 6 6 6;
			}
			desc { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 150;
			}
		}
		part { "clipper"; type: RECT;
			desc { state: "default" 0.0;
				rel1.to: "elm.swallow.background";
				rel2.to: "elm.swallow.background";
			}
		}
		part { "elm.swallow.background"; type: SWALLOW;
			clip: "clipper";
			desc { state: "default" 0.0;
				rel1.offset: 1 1;
				rel2.offset: -2 -2;
			}
		}
		part { "elm.swallow.content"; type: SWALLOW;
			clip: "clipper";
			desc { state: "default" 0.0;
				rel1.to: "elm.swallow.icon";
				rel1.relative: 1.0 0.0;
				rel1.offset: 4 1;
				rel2.to: "elm.swallow.end";
				rel2.relative: 0.0 1.0;
				rel2.offset: 0 -2;
			}
		}
		part { "elm.swallow.icon"; type: SWALLOW;
			clip: "clipper";
			desc { state: "default" 0.0;
				fixed: 1 1;
				rel1.offset: 1 3;
				rel2.offset: 1 -5;
				rel2.relative: 0.0 1.0;
				visible: 0;
				align: 1.0 0.5;
			}
			desc { state: "visible" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				align: 0.0 0.5;
			}
		}
		program {
			signal: "elm,action,show,icon"; source: "elm";
			action: STATE_SET "visible" 0.0;
			target: "elm.swallow.icon";
		}
		program {
			signal: "elm,action,hide,icon"; source: "elm";
			action: STATE_SET "default" 0.0;
			target: "elm.swallow.icon";
		}
		part { "elm.swallow.end"; type: SWALLOW;
			clip: "clipper";
			desc { state: "default" 0.0;
				fixed: 1 1;
				rel1.offset: -2 3;
				rel1.relative: 1.0 0.0;
				rel2.offset: -2 -5;
				visible: 0;
				align: 0.0 0.5;
			}
			desc { state: "visible" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				align: 1.0 0.5;
			}
		}
		program {
			signal: "elm,action,show,end"; source: "elm";
			action: STATE_SET "visible" 0.0;
			target: "elm.swallow.end";
		}
		program {
			signal: "elm,action,hide,end"; source: "elm";
			action: STATE_SET "default" 0.0;
			target: "elm.swallow.end";
		}
		/*part { "inset"; nomouse; repeat_events: 1;
			desc { state: "default" 0.0;
				image.normal: "entry1.png";
				image.border: 6 6 6 6;
				STAY_ON("bg")
				max: 9999 42;
			 }
			desc { state: "focused" 0.0;
			inherit: "default" 0.0;
			image.normal: "entry2.png";
			color_class: "focus";
		  }
		 desc { state: "disabled" 0.0;
			inherit: "default" 0.0;
			image.normal: "entry0.png";
		 }
		}*/
		part { "elm.swallow.overlay"; type: SWALLOW;
			clip: "clipper";
			desc { state: "default" 0.0;
				rel1.offset: 1 1;
				rel2.offset: -2 -2;
			}
		}
	}
	programs {
		program { "disable";
		signal: "elm,state,disabled"; source: "elm";
		action: STATE_SET "disabled" 0.0;
		//target: "inset";
		target: "bg";
	}
	program { "enable";
		signal: "elm,state,enabled"; source: "elm";
		action: STATE_SET "default" 0.0;
		//target: "inset";
		target: "bg";
	}
		/*program {
			signal: "elm,action,focus_highlight,show"; source: "elm";
			action: STATE_SET "focused" 0.0;
			target: "inset";
		}
		program {
			signal: "elm,action,focus_highlight,hide"; source: "elm";
			action: STATE_SET "default" 0.0;
			target: "inset";
		}*/
	}
}

group { "elm/entry/cursor/default";
	min: 1 0;
	parts {
		part { "cursor"; nomouse; type: RECT;
			desc { state: "default" 0.0;
			align: 0.5 1.0;
			rel1.offset: 0 2;
			rel2.offset: -1 0;
				color: 255 255 255 0;
				color_class: "entry_text";
				FIXED_SIZE(1,16)
			}
			desc { state: "visible" 0.0;
				inherit: "default" 0.0;
				color: VISIBLE;
			}
		}
	}
	programs {
		program {
			signal: "elm,action,focus"; source: "elm";
			action: ACTION_STOP;
			target: "cursor_show";
			target: "cursor_hide";
			target: "cursor_show_timer";
			target: "cursor_hide_timer";
			after: "cursor_show";
		}
		program {
			signal: "elm,action,unfocus"; source: "elm";
			action: ACTION_STOP;
			target: "cursor_show";
			target: "cursor_hide";
			target: "cursor_show_timer";
			target: "cursor_hide_timer";
			after: "cursor_hide_stop";
		}
		program {
			signal: "elm,action,show,cursor"; source: "elm";
			action: ACTION_STOP;
			target: "cursor_show";
			target: "cursor_hide";
			target: "cursor_show_timer";
			target: "cursor_hide_timer";
			after: "cursor_show";
		}
		program { "cursor_hide_stop";
			action: STATE_SET "default" 0.0;
			target: "cursor";
		}
		program { "cursor_show";
			action: STATE_SET "visible" 0.0;
			target: "cursor";
			after: "cursor_show_timer";
		}
		program { "cursor_hide";
			action: STATE_SET "default" 0.0;
			target: "cursor";
			transition: SINUSOIDAL 0.2;
			after: "cursor_hide_timer";
		}
		program { "cursor_show_timer";
			in: 0.5 0.0;
			after: "cursor_hide";
		}
		program { "cursor_hide_timer";
			in: 0.2 0.0;
			after: "cursor_show";
		}
	}
}

group { "elm/entry/selection/default";
	parts {
		part { "base"; type: RECT;
			desc { state: "default" 0.0;
				color_class: "focus";
			}
		}
	}
}

group { "elm/entry/anchor/default";
	images.image: "bot_shine.png" COMP;
	parts {
		part { "bar";  nomouse;
			desc { state: "default" 0.0;
				image.normal: "bot_shine.png";
				image.border: 4 4 4 10;
				fill.smooth: 1;
				rel1.relative: 0.0 0.0;
				rel1.offset: -3 -5;
				rel2.offset: 2 4;
				color_class: "focus";
				color: 255 255 255 125;
			}
			desc { state: "over" 0.0;
			inherit: "default" 0.0;
			color: VISIBLE;
		 }
		}
		part { "event"; type: RECT;
			desc { state: "default" 0.0;
				color: TRANSPARENT;
				STAY_ON("bar")
			}
		}
	}
  programs {
	  OVER_P("bar", "event", "default", "over")
  }
}

group { "elm/entry/base/default";
  
	styles {
		style { "entry_style";
			base: "font=""Sans"" font_size=10 color=#ffffff wrap=word text_class=entry color_class=entry_trext left_margin=2 right_margin=2";
			tag:  "em" "+ font_style=Oblique";
			tag:  "link" "+ color=#bacada underline=on underline_color=#bacada";
			tag:  "hilight" "+ font_weight=Bold";
			tag:  "preedit" "+ underline=on underline_color=#bacada";
			tag:  "preedit_sel" "+ backing=on backing_color=#000000 color=#ffffff";
		}
		
		style { "entry_nowrap_style";
			base: "font=""Sans"" font_size=10 color=#ffffff text_class=entry color_class=entry left_margin=2 right_margin=2";
			tag:  "em" "+ font_style=Oblique";
			tag:  "link" "+ color=#bacada underline=on underline_color=#bacada";
			tag:  "hilight" "+ font_weight=Bold";
			tag:  "preedit" "+ underline=on underline_color=#bacada";
			tag:  "preedit_sel" "+ backing=on backing_color=#000000 color=#ffffff";
		}
		
		style { "entry_disabled_style";
			base: "font=""Sans"" font_size=10 color=#ffffff wrap=word text_class=entry color_class=entry_text_disabled left_margin=2 right_margin=2";
			tag:  "em" "+ font_style=Oblique";
			tag:  "link" "+ color=#bacada88 underline=on underline_color=#bacada88";
			tag:  "hilight" "+ font_weight=Bold";
			tag:  "preedit" "+ underline=on underline_color=#bacada88";
			tag:  "preedit_sel" "+ backing=on backing_color=#000 color=#888888";
		}
		
		style { "entry_nowrap_disabled_style";
			base: "font=""Sans"" font_size=10 color=#ffffff text_class=entry color_class=entry_disabled left_margin=2 right_margin=2";
			tag:  "em" "+ font_style=Oblique";
			tag:  "link" "+ color=#bacada88 underline=on underline_color=#bacada88";
			tag:  "hilight" "+ font_weight=Bold";
			tag:  "preedit" "+ underline=on underline_color=#bacada88";
			tag:  "preedit_sel" "+ backing=on backing_color=#000 color=#888888";
		}
		style { "entry_guide_style";
			base: "font=""Sans"" font_size=10 color=#ffffff80 wrap=word text_class=entry color_class=entry_guide left_margin=2 right_margin=2 ellipsis=0.0";
			tag:  "em" "+ font_style=Oblique";
			tag:  "hilight" "+ font_weight=Bold";
		}
	}
//   data.item: "context_menu_orientation" "horizontal";
	parts {
		part { "elm.guide"; type: TEXTBLOCK; nomouse;
			scale;
			desc { state: "default" 0.0;
				rel1.to: "elm.text";
				rel2.to: "elm.text";
				color_class: "entry_text";
				text { style: "entry_guide_style";
					min: 0 1;
					align: 0.0 0.0;
				}
			}
			desc { state: "hidden" 0.0;
				inherit: "default" 0.0;
				visible: 0;
			}
		}
		part { "elm.text"; type: TEXTBLOCK;
			scale;
			entry_mode: EDITABLE;
			select_mode: DEFAULT;
//         select_mode: EXPLICIT;
			cursor_mode: BEFORE;
			multiline: 1;
			source: "elm/entry/selection/default"; // selection under
//         source2: "X"; // selection over
//         source3: "X"; // cursor under
			source4: "elm/entry/cursor/default"; // cursorover
//         source5: "elm/entry/anchor/default"; // anchor under
			source6: "elm/entry/anchor/default"; // anchor over
			desc { state: "default" 0.0;
				/* we gotta use 0 0 here, because of scrolled entries */
				fixed: 0 0;
				align: 0.0 0.5;
				color_class: "entry_text";
				text { style: "entry_style";
					min: 0 1;
					align: 0.0 0.0;
				}
			}
			desc { state: "disabled" 0.0;
				inherit: "default" 0.0;            
				color_class: "entry_text_disabled";
				text { style: "entry_disabled_style";
					min: 0 1;
				}
			}
		}
	}
	programs {
		program {
			signal: "load"; source: "";
			action: FOCUS_SET;
			target: "elm.text";
		}
		program {
			signal: "elm,state,disabled"; source: "elm";
			action: STATE_SET "disabled" 0.0;
			target: "elm.text";
		}
		program {
			signal: "elm,state,enabled"; source: "elm";
			action: STATE_SET "default" 0.0;
			target: "elm.text";
		}
		program {
			signal: "elm,guide,disabled"; source: "elm";
			action: STATE_SET "hidden" 0.0;
			target: "elm.guide";
		}
		program {
			signal: "elm,guide,enabled"; source: "elm";
			action: STATE_SET "default" 0.0;
			target: "elm.guide";
		}
	}
}

group { "elm/entry/base-mixedwrap/default";
	inherit: "elm/entry/base/default";
	styles {
		style { "entry_style_mixedwrap";
			base: "font=""Sans"" font_size=10 color=#ffffff wrap=mixed text_class=entry color_class=entry left_margin=2 right_margin=2";
			tag:  "em" "+ font_style=Oblique";
			tag:  "link" "+ color=#bacada underline=on underline_color=#bacada";
			tag:  "hilight" "+ font_weight=Bold";
			tag:  "preedit" "+ underline=on underline_color=#bacada";
			tag:  "preedit_sel" "+ backing=on backing_color=#000000 color=#ffffff";
		}
		style { "entry_disabled_style_mixedwrap";
			base: "font=""Sans"" font_size=10 color=#151515 wrap=mixed text_class=entry color_class=entry_disabled left_margin=2 right_margin=2";
			tag:  "em" "+ font_style=Oblique";
			tag:  "link" "+ color=#bacada88 underline=on underline_color=#bacada88";
			tag:  "hilight" "+ font_weight=Bold";
			tag:  "preedit" "+ underline=on underline_color=#bacada88";
			tag:  "preedit_sel" "+ backing=on backing_color=#000 color=#888888";
		}
		style { "entry_guide_style_mixedwrap";
			base: "font=""Sans"" font_size=10 color=#ffffff80 wrap=mixed text_class=entry color_class=entry_guide left_margin=2 right_margin=2 ellipsis=0.0";
			tag:  "em" "+ font_style=Oblique";
			tag:  "hilight" "+ font_weight=Bold";
		}
	}
	parts {
		part { "elm.guide"; type: TEXTBLOCK; nomouse;
			scale;
			desc { state: "default" 0.0;
				rel1.to: "elm.text";
				rel2.to: "elm.text";
				color_class: "entry_text";
				text { style: "entry_guide_style_mixedwrap";
					min: 0 1;
					align: 0.0 0.0;
				}
			}
			desc { state: "hidden" 0.0;
				inherit: "default" 0.0;
				visible: 0;
			}
		}
		part { "elm.text";
			desc { state: "default" 0.0;
				fixed: 1 0;
				color_class: "entry_text";
				text { style: "entry_style_mixedwrap";
					min: 0 1;
					align: 0.0 0.0;
				}
			}
			desc { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color_class: "entry_text_disabled";
				text { style: "entry_disabled_style_mixedwrap";
					min: 0 1;
				}
			}
		}
	}
}

group { "elm/entry/base-charwrap/default";
	inherit: "elm/entry/base/default";
	styles {
		style { "entry_style_charwrap";
			base: "font=""Sans"" font_size=10 color=#ffffff wrap=char text_class=entry color_class=entry left_margin=2 right_margin=2";
			tag:  "em" "+ font_style=Oblique";
			tag:  "link" "+ color=#bacada underline=on underline_color=#bacada";
			tag:  "hilight" "+ font_weight=Bold";
			tag:  "preedit" "+ underline=on underline_color=#bacada";
			tag:  "preedit_sel" "+ backing=on backing_color=#000000 color=#ffffff";
		}
		style { "entry_disabled_style_charwrap";
			base: "font=""Sans"" font_size=10 color=#151515 wrap=char text_class=entry color_class=entry_disabled left_margin=2 right_margin=2";
			tag:  "em" "+ font_style=Oblique";
			tag:  "link" "+ color=#bacada88 underline=on underline_color=#bacada88";
			tag:  "hilight" "+ font_weight=Bold";
			tag:  "preedit" "+ underline=on underline_color=#bacada88";
			tag:  "preedit_sel" "+ backing=on backing_color=#000 color=#888888";
		}
		style { "entry_guide_style_charwrap";
			base: "font=""Sans"" font_size=10 color=#ffffff80 wrap=char text_class=entry color_class=entry_guide left_margin=2 right_margin=2 ellipsis=0.0";
			tag:  "em" "+ font_style=Oblique";
			tag:  "hilight" "+ font_weight=Bold";
		}
	}
	parts {
		part { "elm.guide"; type: TEXTBLOCK; nomouse;
			scale;
			desc { state: "default" 0.0;
				rel1.to: "elm.text";
				rel2.to: "elm.text";
				color_class: "entry_text";
				text { style: "entry_guide_style_charwrap";
					min: 0 1;
					align: 0.0 0.0;
				}
			}
			desc { state: "hidden" 0.0;
				inherit: "default" 0.0;
				visible: 0;
			}
		}
		part { "elm.text";
			desc { state: "default" 0.0;
				fixed: 1 0;
				color_class: "entry_text";
				text { style: "entry_style_charwrap";
					min: 0 1;
					align: 0.0 0.0;
				}
			}
			desc { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color_class: "entry_text_disabled";
				text { style: "entry_disabled_style_charwrap";
					min: 0 1;
				}
			}
		}
	}
}

group { "elm/entry/base-nowrap/default";
	inherit: "elm/entry/base/default";
	parts {
		part { "elm.guide"; type: TEXTBLOCK; nomouse;
			scale;
			desc { state: "default" 0.0;
				rel1.to: "elm.text";
				rel2.to: "elm.text";
				color_class: "entry_text";
				text { style: "entry_guide_style";
					min: 0 1;
					align: 0.0 0.0;
				}
			}
			desc { state: "hidden" 0.0;
				inherit: "default" 0.0;
				visible: 0;
			}
		}
		part { "elm.text";
			desc { state: "default" 0.0;
				color_class: "entry_text";
				text { style: "entry_nowrap_style";
					min: 1 1;
					align: 0.0 0.0;
					ellipsis: -1;
				}
			}
			desc { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color_class: "entry_text_disabled";
				text { style: "entry_nowrap_disabled_style";
					min: 0 1;
				}
			}
		}
	}
}

group { "elm/entry/base-single/default";
	inherit: "elm/entry/base/default";
	styles {
		style { "entry_single_style";
			base: "font=""Sans"" font_size=10 color=#ffffff wrap=none text_class=entry color_class=entry_text left_margin=2 right_margin=2";
			tag:  "em" "+ font_style=Oblique";
			tag:  "link" "+ color=#bacada underline=on underline_color=#bacada";
			tag:  "hilight" "+ font_weight=Bold";
			tag:  "preedit" "+ underline=on underline_color=#bacada";
			tag:  "preedit_sel" "+ backing=on backing_color=#000000 color=#ffffff";
		}
		style { "entry_single_disabled_style";
			base: "font=""Sans"" font_size=10 color=#ffffff  wrap=none text_class=entry color_class=entry_text_disabled left_margin=2 right_margin=2";
			tag:  "em" "+ font_style=Oblique";
			tag:  "link" "+ color=#bacada88 underline=on underline_color=#bacada88";
			tag:  "hilight" "+ font_weight=Bold";
			tag:  "preedit" "+ underline=on underline_color=#bacada88";
			tag:  "preedit_sel" "+ backing=on backing_color=#000 color=#888888";
		}
		style { "entry_single_guide_style";
			base: "font=""Sans"" font_size=10 color=#ffffff80 wrap=none text_class=entry color_class=entry_guide left_margin=2 right_margin=2 ellipsis=0.0";
			tag:  "em" "+ font_style=Oblique";
			tag:  "hilight" "+ font_weight=Bold";
		}
	}
	parts {
		part { "elm.guide"; type: TEXTBLOCK; nomouse;
			scale;
			desc { state: "default" 0.0;
				rel1.to: "elm.text";
				rel2.to: "elm.text";
				color_class: "entry_text";
				text { style: "entry_single_guide_style";
					min: 0 1;
					align: 0.0 0.5;
				}
			}
			desc { state: "hidden" 0.0;
				inherit: "default" 0.0;
				visible: 0;
			}
		}
		part { "elm.text";
			multiline: 0;
			desc { state: "default" 0.0;
				color_class: "entry_text";
				text { style: "entry_single_style";
					min: 1 1;
					ellipsis: -1;
					max: 0 0;
					align: 0.0 0.5;
				}
			}
			desc { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color_class: "entry_text_disabled";
				text { style: "entry_single_disabled_style";
				}
			}
		}
	}
}

group { "elm/entry/base-single-noedit/default";
	inherit: "elm/entry/base/default";
	parts {
		part { "elm.text";
			entry_mode: PLAIN;
			multiline: 0;
			source: "elm/entry/selection/default"; // selection under
			source4: ""; // cursorover
			source6: "elm/entry/anchor/default"; // anchor over
			desc { state: "default" 0.0;
				color_class: "entry_text";
				text { style: "entry_single_style";
					min: 1 1;
					ellipsis: -1;
					max: 0 0;
					align: 0.0 0.5;
				}
			}
			desc { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color_class: "entry_text_disabled";
				text { style: "entry_single_disabled_style";
				}
			}
		}
	}
}

group { "elm/entry/base-noedit/default";
	inherit: "elm/entry/base/default";
	parts {
		part { "elm.text";
			entry_mode: PLAIN;
			source: "elm/entry/selection/default"; // selection under
			source4: ""; // cursorover
			source6: "elm/entry/anchor/default"; // anchor over
			desc { state: "default" 0.0;
				fixed: 1 0;
				color_class: "entry_text";
				text { style: "entry_style";
					min: 0 1;
					align: 0.0 0.0;
				}
			}
			desc { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color_class: "entry_text_disabled";
				text { style: "entry_disabled_style";
				}
			}
		}
	}
}

group { "elm/entry/base-noedit-mixedwrap/default";
	inherit: "elm/entry/base/default";
	parts {
		part { "elm.text";
			entry_mode: PLAIN;
			source: "elm/entry/selection/default"; // selection under
			source4: ""; // cursorover
			source6: "elm/entry/anchor/default"; // anchor over
			desc { state: "default" 0.0;
				fixed: 1 0;
				color_class: "entry_text";
				text { style: "entry_style_mixedwrap";
					min: 0 1;
					align: 0.0 0.0;
				}
			}
			desc { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color_class: "entry_text_disabled";
				text { style: "entry_disabled_style_mixedwrap";
				}
			}
		}
	}
}

group { "elm/entry/base-noedit-charwrap/default";
	inherit: "elm/entry/base/default";
	parts {
		part { "elm.text";
			entry_mode: PLAIN;
			source: "elm/entry/selection/default"; // selection under
			source4: ""; // cursorover
			source6: "elm/entry/anchor/default"; // anchor under
			desc { state: "default" 0.0;
				fixed: 1 0;
				color_class: "entry_text";
				text { style: "entry_style_charwrap";
					min: 0 1;
					align: 0.0 0.0;
				}
			}
			desc { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color_class: "entry_text_disabled";
				text { style: "entry_disabled_style_charwrap";
				}
			}
		}
	}
}

group { "elm/entry/base-nowrap-noedit/default";
	inherit: "elm/entry/base/default";
	parts {
		part { "elm.text";
			entry_mode: PLAIN;
			source: "elm/entry/selection/default"; // selection under
			source4: ""; // cursorover
			source6: "elm/entry/anchor/default"; // anchor under
			desc { state: "default" 0.0;
				color_class: "entry_text";
				text { style: "entry_style";
					min: 1 1;
					ellipsis: -1;
					align: 0.0 0.0;
				}
			}
			desc { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color_class: "entry_text_disabled";
				text { style: "entry_disabled_style";
				}
			}
		}
	}
}

group { "elm/entry/base-password/default";
	inherit: "elm/entry/base/default";
	parts {
		part { "elm.guide"; type: TEXTBLOCK; nomouse;
			scale;
			desc { state: "default" 0.0;
				rel1.to: "elm.text";
				rel2.to: "elm.text";
				text { style: "entry_single_guide_style";
					min: 0 1;
					align: 0.0 0.5;
				}
			}
			desc { state: "hidden" 0.0;
				inherit: "default" 0.0;
				visible: 0;
			}
		}
		part { "elm.text";
			entry_mode: PASSWORD;
			multiline: 0;
			source: "elm/entry/selection/default"; // selection under
			source4: "elm/entry/cursor/default"; // cursorover
			source6: "elm/entry/anchor/default"; // anchor under
			desc { state: "default" 0.0;
				color_class: "entry_text";
				text { style: "entry_single_style";
					repch: "*";
					min: 1 1;
					ellipsis: -1;
					max: 0 0;
					align: 0.0 0.5;
				}
			}
			desc { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color_class: "entry_text_disabled";
				text { style: "entry_single_disabled_style";
				}
			}
		}
	}
}

group { "elm/entry/magnifier/default";
	images.image: "frame_rounded.png" COMP;
	parts {
		part { "bg"; type: RECT; nomouse;
			desc { state: "default" 0.0;
				rel1.offset: 10 10;
				rel1.to: "over";
				rel2.offset: -11 -11;
				rel2.to: "over";
				color: 48 48 48 255;
			}
			desc { state: "hidden" 0.0;
				inherit: "default" 0.0;
				visible: 0;
			}
		}
		part { "elm.swallow.content"; type: SWALLOW; nomouse;
			desc { state: "default" 0.0;
				rel1.offset: 10 10;
				rel1.to: "over";
				rel2.offset: -11 -11;
				rel2.to: "over";
			}
			desc { state: "hidden" 0.0;
				inherit: "default" 0.0;
				visible: 0;
			}
		}
		part { "over"; nomouse;
			scale;
			desc { state: "default" 0.0;
				min: 128 64;
				align: 0 0;
				image.normal: "frame_rounded.png";
				image.border: 14 14 14 14;
				image.middle: 0;
				fill.smooth: 0;
			}
			desc { state: "hidden" 0.0;
				inherit: "default" 0.0;
				visible: 0;
			}
		}
	}
	programs {
		program { "magnifier_show";
			signal: "elm,action,show,magnifier"; source: "elm";
			action: STATE_SET "default" 0.0;
			target: "elm.swallow.content";
			target: "bg";
			target: "over";
		}
		program { "magnifier_hide";
			signal: "elm,action,hide,magnifier"; source: "elm";
			action: STATE_SET "hidden" 0.0;
			target: "elm.swallow.content";
			target: "bg";
			target: "over";
		}
	}
}

group { "elm/entry/handler/start/default";
	images.image: "handle_pick_up_left.png" COMP;
	parts {
		part { "base"; nomouse;
			scale;
			desc { state: "default" 0.0;
				min: 21 27; // 42 54
				image.normal: "handle_pick_up_left.png";
				align: (29/42) (11/54);
				visible: 0;
			}
			desc { state: "visible" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}
		part { "event"; type: RECT;
			scale;
			desc { state: "default" 0.0;
				color: "#00000000";
				rel1.to: "base";
				rel2.to: "base";
				min: 32 32;
				visible: 0;
			}
			desc { state: "visible" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}
	}
	programs {
		program {
			signal: "elm,handler,show"; source: "elm";
			action: STATE_SET "visible" 0.0;
			target: "base";
			target: "event";
		}
		program {
			signal: "elm,handler,hide"; source: "elm";
			action: STATE_SET "default" 0.0;
			target: "base";
			target: "event";
		}
	}
}

group { "elm/entry/handler/end/default";
	images.image: "handle_pick_up_right.png" COMP;
	parts {
		part { "base"; nomouse;
			scale;
			desc { state: "default" 0.0;
				min: 21 27; // 42 54
				image.normal: "handle_pick_up_right.png";
				align: (12/42) (11/54);
				visible: 0;
			}
			desc { state: "visible" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}
		part { "event"; type: RECT;
			scale;
			desc { state: "default" 0.0;
				color: "#00000000";
				rel1.to: "base";
				rel2.to: "base";
				min: 32 32;
				visible: 0;
			}
			desc { state: "visible" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}
	}
	programs {
		program {
			signal: "elm,handler,show"; source: "elm";
			action: STATE_SET "visible" 0.0;
			target: "base";
			target: "event";
		}
		program {
			signal: "elm,handler,hide"; source: "elm";
			action: STATE_SET "default" 0.0;
			target: "base";
			target: "event";
		}
	}
}

///////////////////////////////////////////////////////////////////////////////
// emoticon images from:
// Tanya - Latvia
// http://lazycrazy.deviantart.com/
// http://lazycrazy.deviantart.com/art/Very-Emotional-Emoticons-144461621
group { "elm/entry/emoticon/angry/default"; images.image:
	"emo-angry.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-angry.png"; } } } }
group { "elm/entry/emoticon/angry-shout/default"; images.image:
	"emo-angry-shout.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-angry-shout.png"; } } } }
group { "elm/entry/emoticon/crazy-laugh/default"; images.image:
	"emo-crazy-laugh.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-crazy-laugh.png"; } } } }
group { "elm/entry/emoticon/evil-laugh/default"; images.image:
	"emo-evil-laugh.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-evil-laugh.png"; } } } }
group { "elm/entry/emoticon/evil/default"; images.image:
	"emo-evil.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-evil.png"; } } } }
group { "elm/entry/emoticon/goggle-smile/default"; images.image:
	"emo-goggle-smile.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-goggle-smile.png"; } } } }
group { "elm/entry/emoticon/grumpy/default"; images.image:
	"emo-grumpy.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-grumpy.png"; } } } }
group { "elm/entry/emoticon/grumpy-smile/default"; images.image:
	"emo-grumpy-smile.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-grumpy-smile.png"; } } } }
group { "elm/entry/emoticon/guilty/default"; images.image:
	"emo-guilty.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-guilty.png"; } } } }
group { "elm/entry/emoticon/guilty-smile/default"; images.image:
	"emo-guilty-smile.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-guilty-smile.png"; } } } }
group { "elm/entry/emoticon/haha/default"; images.image:
	"emo-haha.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-haha.png"; } } } }
group { "elm/entry/emoticon/half-smile/default"; images.image:
	"emo-half-smile.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-half-smile.png"; } } } }
group { "elm/entry/emoticon/happy-panting/default"; images.image:
	"emo-happy-panting.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-happy-panting.png"; } } } }
group { "elm/entry/emoticon/happy/default"; images.image:
	"emo-happy.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-happy.png"; } } } }
group { "elm/entry/emoticon/indifferent/default"; images.image:
	"emo-indifferent.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-indifferent.png"; } } } }
group { "elm/entry/emoticon/kiss/default"; images.image:
	"emo-kiss.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-kiss.png"; } } } }
group { "elm/entry/emoticon/knowing-grin/default"; images.image:
	"emo-knowing-grin.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-knowing-grin.png"; } } } }
group { "elm/entry/emoticon/laugh/default"; images.image:
	"emo-laugh.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-laugh.png"; } } } }
group { "elm/entry/emoticon/little-bit-sorry/default"; images.image:
	"emo-little-bit-sorry.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-little-bit-sorry.png"; } } } }
group { "elm/entry/emoticon/love-lots/default"; images.image:
	"emo-love-lots.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-love-lots.png"; } } } }
group { "elm/entry/emoticon/love/default"; images.image:
	"emo-love.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-love.png"; } } } }
group { "elm/entry/emoticon/minimal-smile/default"; images.image:
	"emo-minimal-smile.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-minimal-smile.png"; } } } }
group { "elm/entry/emoticon/not-happy/default"; images.image:
	"emo-not-happy.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-not-happy.png"; } } } }
group { "elm/entry/emoticon/not-impressed/default"; images.image:
	"emo-not-impressed.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-not-impressed.png"; } } } }
group { "elm/entry/emoticon/omg/default"; images.image:
	"emo-omg.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-omg.png"; } } } }
group { "elm/entry/emoticon/opensmile/default"; images.image:
	"emo-opensmile.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-opensmile.png"; } } } }
group { "elm/entry/emoticon/smile/default"; images.image:
	"emo-smile.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-smile.png"; } } } }
group { "elm/entry/emoticon/sorry/default"; images.image:
	"emo-sorry.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-sorry.png"; } } } }
group { "elm/entry/emoticon/squint-laugh/default"; images.image:
	"emo-squint-laugh.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-squint-laugh.png"; } } } }
group { "elm/entry/emoticon/surprised/default"; images.image:
	"emo-surprised.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-surprised.png"; } } } }
group { "elm/entry/emoticon/suspicious/default"; images.image:
	"emo-suspicious.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-suspicious.png"; } } } }
group { "elm/entry/emoticon/tongue-dangling/default"; images.image:
	"emo-tongue-dangling.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-tongue-dangling.png"; } } } }
group { "elm/entry/emoticon/tongue-poke/default"; images.image:
	"emo-tongue-poke.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-tongue-poke.png"; } } } }
group { "elm/entry/emoticon/uh/default"; images.image:
	"emo-uh.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-uh.png"; } } } }
group { "elm/entry/emoticon/unhappy/default"; images.image:
	"emo-unhappy.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-unhappy.png"; } } } }
group { "elm/entry/emoticon/very-sorry/default"; images.image:
	"emo-very-sorry.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-very-sorry.png"; } } } }
group { "elm/entry/emoticon/what/default"; images.image:
	"emo-what.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-what.png"; } } } }
group { "elm/entry/emoticon/wink/default"; images.image:
	"emo-wink.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-wink.png"; } } } }
group { "elm/entry/emoticon/worried/default"; images.image:
	"emo-worried.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-worried.png"; } } } }
group { "elm/entry/emoticon/wtf/default"; images.image:
	"emo-wtf.png" COMP; parts { part { "icon"; nomouse; desc { state: "default" 0.0; max: 64 64; image.normal:
				"emo-wtf.png"; } } } }
//------------------------------------------------------------
