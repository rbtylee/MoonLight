#define ODD(_NAME, _SRC) \
	group { _NAME; \
		inherit: _SRC; \
		parts { \
			part { "base"; \
				desc { "default"; \
					color_class: "ilist_item_odd_base"; \
				} \
			} \
		} \
	}
#define COMPRESS(_NAME, _SRC) \
	group { _NAME; \
		inherit: _SRC; \
		parts { \
			part { "elm.text"; \
				desc { "default"; \
					text.min: 0 1; \
				} \
				desc { "selected"; \
					text.min: 0 1; \
				} \
				desc { "disabled"; \
					text.min: 0 1; \
				} \
			} \
			part { "label2"; \
				desc { "default"; \
					text.min: 0 1; \
				} \
				desc { "selected"; \
					text.min: 0 1; \
				} \
				desc { "disabled"; \
					text.min: 0 1; \
				} \
			} \
			part { "label3"; \
				desc { "default"; \
					text.min: 0 1; \
				} \
				desc { "selected"; \
					text.min: 0 1; \
				} \
				desc { "disabled"; \
					text.min: 0 1; \
				} \
			} \
		} \
	}
#define COMPRESS_ODD(_NAME, _SRC) \
	group { _NAME; \
		inherit: _SRC; \
		parts { \
			part { "elm.text"; \
				desc { "default"; \
					text.min: 0 1; \
				} \
				desc { "selected"; \
					text.min: 0 1; \
				} \
				desc { "disabled"; \
					text.min: 0 1; \
				} \
			} \
			part { "label2"; \
				desc { "default"; \
					text.min: 0 1; \
				} \
				desc { "selected"; \
					text.min: 0 1; \
				} \
				desc { "disabled"; \
					text.min: 0 1; \
				} \
			} \
			part { "label3"; \
				desc { "default"; \
					text.min: 0 1; \
				} \
				desc { "selected"; \
					text.min: 0 1; \
				} \
				desc { "disabled"; \
					text.min: 0 1; \
				} \
			} \
			part { "base"; \
				desc { "default"; \
					color_class: "ilist_item_odd_base"; \
				} \
			} \
		} \
	}

group { "elm/list/item/default";
	data.item: "selectraise" "on";
	data.item: "focusraise" "on";

	parts {
		rect { "event";
			desc { "default"; color: "#00000000"; }
			desc { "disabled"; inherit; hid; }
		}
		CLIP_SWITCH("base","base","base","default","selected")
		rect { "base";  clip: "base_clip_default"; nomouse;
			desc { "default"; color_class: "ilist_item_base"; }
			desc { "odd"; color_class: "ilist_item_base_odd"; }
		}
		part { "base_sel"; clip: "base_clip_selected"; nomouse;
			desc { "default";
				STAY_ON("base")
				image.normal: "selected.png";
				image.border: 2 2 2 2;
			}
		}

		text { "elm.text"; effect: SHADOW BOTTOM; nomouse; scale;
			desc { "default"; color: VISIBLE; color_class: "ilist_item";
				color3: VISIBLE;
				rel1.offset: 2 3;
				rel1.relative: 1.0 0.0;
				rel1.to_x: "elm.swallow.icon";
				rel2.offset: -3 -3;
				rel2.relative: 0.0 1.0;
				rel2.to_x: "elm.swallow.end";
				text.font: "Sans"; text.size: 10;
				text.min: 1 1;
				text.ellipsis: -1;
				text.align: 0.0 0.5;
				text.text_class: "list_item";
			}
			desc { "selected"; inherit; hid; }
			desc { "disabled"; inherit; hid; }
		}
		text { "label2"; effect: SHADOW BOTTOM; nomouse; scale;
			desc { "default"; color: "#FFFFFF7D"; color_class: "ilist_item"; hid;
				color3: "#FFFFFF7D";
				STAY_ON("elm.text")
				text.font: "Sans"; text.size: 10;
				text.text_source: "elm.text";
				text.align: 0.0 0.5;
				text.text_class: "list_item";
			}
			desc { "selected"; inherit; hid; }
			desc { "disabled"; inherit; vis; }
		}
		text { "label3"; effect: SHADOW BOTTOM; nomouse; scale;
			desc { "default"; color: VISIBLE; color_class: "ilist_item_selected"; hid;
				color3: VISIBLE;
				STAY_ON("elm.text")
				text.font: "Sans"; text.size: 10;
				text.text_source: "elm.text";
				text.align: 0.0 0.5;
				text.text_class: "list_item";
			}
			desc { "selected"; inherit; vis; }
			desc { "disabled"; inherit; hid; }
		}
		swallow { "elm.swallow.icon";
			desc { "default";
				fixed: 1 0;
				align: 0.0 0.5;
				aspect: 1.0 1.0;
				rel1.offset: 2 2;
				rel2.relative: 0.0 1.0;
				rel2.offset: 2 -3;
			}
		}
		swallow { "elm.swallow.end";
			desc { "default";
				fixed: 1 0;
				align: 1.0 0.5;
				aspect: 1.0 1.0;
				rel1.offset: -3 2;
				rel1.relative: 1.0 0.0;
				rel2.offset: -3 -3;
			}
		}
		rect { "event_block";
			desc { "default"; color: "#00000000"; hid; }
			desc { "disabled"; inherit; vis; }
		}

		programs {
			program {
				signal: "elm,state,odd"; source: "elm";
				action: STATE_SET "odd" 0.0;
				target: "base";
			}
			program {
				signal: "elm,state,even"; source: "elm";
				action: STATE_SET "default" 0.0;
				target: "base";
			}
			program {
				signal: "elm,state,selected"; source: "elm";
				action: STATE_SET "selected" 0.0;
				target: "base_clip_selected";
				target: "base_clip_default";
			}
			program {
				signal: "elm,state,unselected"; source: "elm";
				action: STATE_SET "default" 0.0;
				target: "base_clip_selected";
				target: "base_clip_default";
			}
			program {
				signal: "elm,state,disabled"; source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "event";
			}
			program {
				signal: "elm,state,enabled"; source: "elm";
				action: STATE_SET "default" 0.0;
				target: "event";
			}
			program {
				signal: "elm,state,selected"; source: "elm";
				action: STATE_SET "selected" 0.0;
				target: "elm.text";
				target: "label2";
				target: "label3";
			}
			program {
				signal: "elm,state,unselected"; source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.text";
				target: "label2";
				target: "label3";
			}
			program {
				signal: "elm,state,disabled"; source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "elm.text";
				target: "label2";
				target: "label3";
			}
			program {
				signal: "elm,state,enabled"; source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.text";
				target: "label2";
				target: "label3";
			}
			program {
				signal: "elm,state,disabled"; source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "event_block";
			}
			program {
				signal: "elm,state,enabled"; source: "elm";
				action: STATE_SET "default" 0.0;
				target: "event_block";
			}
		}
	}
}
ODD("elm/list/item_odd/default", "elm/list/item/default")
COMPRESS("elm/list/item_compress/default", "elm/list/item/default")
COMPRESS_ODD("elm/list/item_compress_odd/default", "elm/list/item/default")

// XXX: DO:
// elm/list/h_item/default
// elm/list/h_item_odd/default
// elm/list/h_item_compress/default
// elm/list/h_item_compress_odd/default

group { "elm/list/h_item/default";
	data.item: "selectraise" "on";
	data.item: "focusraise" "on";

	parts {
		rect { "event";
			desc { "default"; color: "#00000000"; }
			desc { "disabled"; inherit; hid; }
		}
		CLIP_SWITCH("base","base","base","default","selected")
		rect { "base";   clip: "base_clip_default"; nomouse;
			desc { "default"; color_class: "ilist_item_base"; }
			desc { "odd"; color_class: "ilist_item_base_odd"; }
		}
		part { "base_sel"; clip: "base_clip_selected"; nomouse;
			desc { "default";
				STAY_ON("base")
				image.normal: "selected.png";
				image.border: 2 2 2 2;
			}
		}
		text { "elm.text"; effect: SHADOW BOTTOM; nomouse; scale;
			desc { "default"; color: VISIBLE; color_class: "ilist_item";
				color3: VISIBLE;
				rel1.offset: 2 2;
				rel1.relative: 0.0 1.0;
				rel1.to_y: "elm.swallow.icon";
				rel2.offset: -3 -3;
				rel2.relative: 1.0 0.0;
				rel2.to_y: "elm.swallow.end";
				text.font: "Sans"; text.size: 10;
				text.min: 1 1;
				text.ellipsis: -1;
				text.align: 0.5 0.5;
				text.text_class: "list_item";
			}
			desc { "selected"; inherit; hid; }
			desc { "disabled"; inherit; hid; }
		}
		text { "label2"; effect: SHADOW BOTTOM; nomouse; scale;
			desc { "default"; color: "#FFFFFF7D"; color_class: "ilist_item"; hid;
				color3: "#FFFFFF7D";
				STAY_ON("elm.text")
				text.font: "Sans"; text.size: 10;
				text.text_source: "elm.text";
				text.align: 0.5 0.5;
				text.text_class: "list_item";
			}
			desc { "selected"; inherit; hid; }
			desc { "disabled"; inherit; vis; }
		}
		text { "label3"; effect: SHADOW BOTTOM; nomouse; scale;
			desc { "default"; color: VISIBLE; color_class: "ilist_item_selected"; hid;
				STAY_ON("elm.text")
				color3: VISIBLE;
				text.font: "Sans"; text.size: 10;
				text.text_source: "elm.text";
				text.align: 0.5 0.5;
				text.text_class: "list_item";
			}
			desc { "selected"; inherit; vis; }
			desc { "disabled"; inherit; hid; }
		}
		swallow { "elm.swallow.icon";
			desc { "default";
				fixed: 0 1;
				aspect: 1.0 1.0;
				align: 0.5 0.0;
				rel1.offset: 2 2;
				rel2.relative: 1.0 0.0;
				rel2.offset: -3 2;
			}
		}
		swallow { "elm.swallow.end";
			desc { "default";
				fixed: 0 1;
				aspect: 1.0 1.0;
				align: 0.5 1.0;
				rel1.offset: 2 -3;
				rel1.relative: 0.0 1.0;
				rel2.offset: -3 -3;
			}
		}
		rect { "event_block";
			desc { "default"; color: "#00000000"; hid; }
			desc { "disabled"; inherit; vis; }
		}

		programs {
			program {
				signal: "elm,state,odd"; source: "elm";
				action: STATE_SET "odd" 0.0;
				target: "base";
			}
			program {
				signal: "elm,state,even"; source: "elm";
				action: STATE_SET "default" 0.0;
				target: "base";
			}
			program {
				signal: "elm,state,selected"; source: "elm";
				action: STATE_SET "selected" 0.0;
				target: "base_clip_selected";
				target: "base_clip_default";
			}
			program {
				signal: "elm,state,unselected"; source: "elm";
				action: STATE_SET "default" 0.0;
				target: "base_clip_selected";
				target: "base_clip_default";
			}
			program {
				signal: "elm,state,disabled"; source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "event";
			}
			program {
				signal: "elm,state,enabled"; source: "elm";
				action: STATE_SET "default" 0.0;
				target: "event";
			}
			program {
				signal: "elm,state,selected"; source: "elm";
				action: STATE_SET "selected" 0.0;
				target: "elm.text";
				target: "label2";
				target: "label3";
			}
			program {
				signal: "elm,state,unselected"; source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.text";
				target: "label2";
				target: "label3";
			}
			program {
				signal: "elm,state,disabled"; source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "elm.text";
				target: "label2";
				target: "label3";
			}
			program {
				signal: "elm,state,enabled"; source: "elm";
				action: STATE_SET "default" 0.0;
				target: "elm.text";
				target: "label2";
				target: "label3";
			}
			program {
				signal: "elm,state,disabled"; source: "elm";
				action: STATE_SET "disabled" 0.0;
				target: "event_block";
			}
			program {
				signal: "elm,state,enabled"; source: "elm";
				action: STATE_SET "default" 0.0;
				target: "event_block";
			}
		}
	}
}
ODD("elm/list/h_item_odd/default", "elm/list/h_item/default")
COMPRESS("elm/list/h_item_compress/default", "elm/list/h_item/default")
COMPRESS_ODD("elm/list/h_item_compress_odd/default", "elm/list/h_item/default")

#undef ODD
#undef COMPRESS
#undef COMPRESS_ODD
