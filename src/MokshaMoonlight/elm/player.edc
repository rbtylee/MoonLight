#define BSZ 20
group { "elm/player/base/default";
	images.image: "shadow_square_tiny.png" COMP;
	images.image: "vgrad_shadow_bi.png" COMP;
	images.image: "dia_bg.png" COMP;

	script {
		public in_control;
		public in_volume;
		public inside;

		public eval_in() {
			new v1 = get_int(in_control);
			new v2 = get_int(in_volume);
			new isin = get_int(inside);

			if (isin) {
				if ((!v1) && (!v2)) {
					emit("conhide", "");
					set_int(inside, 0);
				}
			} else {
				if ((v1) || (v2)) {
					emit("conshow", "");
					set_int(inside, 1);
				}
			}
		}
	}

	parts {
		part { "bg"; type: RECT;
			desc { "default"; color: "#000000";
				rel1.offset: 1 1; rel2.offset: -2 -2;
			}
		}
		part { "clipper"; type: RECT;
			desc { "default";
				rel1.to: "bg"; rel2.to: "bg";
			}
		}
		// video (elm_video) content here
		part { "elm.swallow.content"; type: SWALLOW;
			clip: "clipper";
			desc { "default";
				rel1.offset: 1 1; rel2.offset: -2 -2;
			}
		}
		part { "barshad";
			clip: "clipper";
			desc { "default"; color: TRANSPARENT; hid;
				image.normal: "vgrad_shadow_bi.png";
				rel1.to: "bar";
				rel1.relative: 0.0 -0.5;
				rel2.to: "bar";
				rel2.relative: 1.0 0.5;
			}
			desc { "visible"; inherit; color: "#FFFFFF80"; vis; }
		}
		part { "volpop_shadow"; nomouse;
			clip: "volclip";
			desc { "default";
				rel1.offset: -3 -2;
				rel1.to: "volpop";
				rel2.offset: 3 4;
				rel2.to: "volpop";
				image.normal: "shadow_square_tiny.png";
				image.border: 6 6 6 6;
				fill.smooth: 0;
			}
		}
		part { "bar"; type: RECT;
			clip: "clipper";
			desc { "default"; color_class: "dialog_base";
				rel1.to_y: "elm.swallow.media_player.prev";
				rel1.offset: 1 -1;
				rel2.to_y: "elm.swallow.media_player.positionslider";
				rel2.offset: -2 -1;
			}
		}
		part { "volclip"; type: RECT;
			desc { "default"; color: TRANSPARENT; hid;
				rel1.to: "bg";
				rel2.to: "bg";
			}
			desc { "visible"; inherit; color: VISIBLE; vis; }
		}
		part { "volpop"; type: RECT;
			clip: "volclip";
			desc { "default";
				color_class: "dialog_base";
				rel1.to: "elm.swallow.media_player.volumeslider";
				rel1.offset: -1 -1;
				rel2.to: "elm.swallow.media_player.volumeslider";
				rel2.offset: 0 0;
			}
		}
		part { "volpopclip"; type: RECT;
			clip: "volclip";
			desc { "default"; color: VISIBLE;
				rel1.to: "volpop";
				rel1.offset: 0 -5;
				rel2.to: "volpop";
			}
		}
		part { "volpopbev"; clip: "volpopclip";
			desc { "default";
				STAY_ON("volpop")
				image.normal: "dia_bg.png";
				image.border: 15 15 2 2;
				color_class: "dialog_base";
				fill.smooth: 0;
			}
		}
		part { "elm.swallow.media_player.prev"; type: SWALLOW;
			clip: "clipper";
			scale;
			desc { "default";
				fixed: 1 1;
				min: BSZ BSZ;
				align: 0.0 0.0;
				rel1.relative: 0.0 1.0;
				rel1.offset: 1 7;
				rel2.relative: 0.0 1.0;
				rel2.offset: 1 7;
			}
			desc { "visible"; inherit;
				rel1.offset: 1 -2;
				rel2.offset: 1 -2;
				align: 0.0 1.0;
			}
		}
		part { "elm.swallow.media_player.rewind"; type: SWALLOW;
			clip: "clipper";
			scale;
			desc { "default"; min: BSZ BSZ;
				fixed: 1 1;
				align: 0.0 1.0;
				rel1.to: "elm.swallow.media_player.prev";
				rel1.relative: 1.0 0.0;
				rel1.offset: 0 0;
				rel2.to: "elm.swallow.media_player.prev";
				rel2.relative: 1.0 1.0;
				rel2.offset: 0 -1;
			}
		}
		part { "elm.swallow.media_player.play"; type: SWALLOW;
			clip: "clipper";
			scale;
			desc { "default"; min: BSZ BSZ;
				fixed: 1 1;
				align: 0.0 1.0;
				rel1.to: "elm.swallow.media_player.rewind";
				rel1.relative: 1.0 0.0;
				rel1.offset: 0 0;
				rel2.to: "elm.swallow.media_player.rewind";
				rel2.relative: 1.0 1.0;
				rel2.offset: 0 -1;
			}
			desc { "hidden"; inherit; hid; }
		}
		part { "elm.swallow.media_player.pause"; type: SWALLOW;
			clip: "clipper";
			scale;
			desc { "default"; min: BSZ BSZ;
				fixed: 1 1;
				rel1.to: "elm.swallow.media_player.play";
				rel2.to: "elm.swallow.media_player.play";
			}
			desc { "hidden"; inherit; hid; }
		}
		part { "elm.swallow.media_player.forward"; type: SWALLOW;
			clip: "clipper";
			scale;
			desc { "default";
				fixed: 1 1;
				min: BSZ BSZ;
				align: 0.0 1.0;
				rel1.to: "elm.swallow.media_player.play";
				rel1.relative: 1.0 0.0;
				rel1.offset: 0 0;
				rel2.to: "elm.swallow.media_player.play";
				rel2.relative: 1.0 1.0;
				rel2.offset: 0 -1;
			}
		}
		part { "elm.swallow.media_player.next"; type: SWALLOW;
			clip: "clipper";
			scale;
			desc { "default";
				fixed: 1 1;
				min: BSZ BSZ;
				align: 0.0 1.0;
				rel1.to: "elm.swallow.media_player.forward";
				rel1.relative: 1.0 0.0;
				rel1.offset: 0 0;
				rel2.to: "elm.swallow.media_player.forward";
				rel2.relative: 1.0 1.0;
				rel2.offset: 0 -1;
			}
		}
		part { "elm.swallow.media_player.stop"; type: SWALLOW;
			clip: "clipper";
			scale;
			desc { "default";
				fixed: 1 1;
				min: BSZ BSZ;
				align: 0.0 1.0;
				rel1.to: "elm.swallow.media_player.next";
				rel1.relative: 1.0 0.0;
				rel1.offset: 0 0;
				rel2.to: "elm.swallow.media_player.next";
				rel2.relative: 1.0 1.0;
				rel2.offset: 0 -1;
			}
		}
		part { "elm.swallow.media_player.eject"; type: SWALLOW;
			clip: "clipper";
			scale;
			desc { "default";
				fixed: 1 1;
				min: BSZ BSZ;
				align: 0.0 1.0;
				rel1.to: "elm.swallow.media_player.stop";
				rel1.relative: 1.0 0.0;
				rel1.offset: 0 0;
				rel2.to: "elm.swallow.media_player.stop";
				rel2.relative: 1.0 1.0;
				rel2.offset: 0 -1;
			}
		}
		part { "elm.swallow.media_player.volume"; type: SWALLOW;
			clip: "clipper";
			scale;
			desc { "default";
				fixed: 1 1;
				min: BSZ BSZ;
				align: 0.0 1.0;
				rel1.to: "elm.swallow.media_player.eject";
				rel1.relative: 1.0 0.0;
				rel1.offset: 0 0;
				rel2.to: "elm.swallow.media_player.eject";
				rel2.relative: 1.0 1.0;
				rel2.offset: 0 -1;
			}
			desc { "hidden"; inherit; hid; }
		}
		part { "elm.swallow.media_player.mute"; type: SWALLOW;
			clip: "clipper";
			scale;
			desc { "default";
				fixed: 1 1;
				min: BSZ BSZ;
				rel1.to: "elm.swallow.media_player.volume";
				rel2.to: "elm.swallow.media_player.volume";
			}
			desc { "hidden"; inherit; hid; }
		}
		part { "elm.swallow.media_player.info"; type: SWALLOW;
			clip: "clipper";
			scale;
			desc { "default";
				fixed: 1 1;
				min: BSZ BSZ;
				align: 0.0 1.0;
				rel1.to: "elm.swallow.media_player.volume";
				rel1.relative: 1.0 0.0;
				rel1.offset: 0 0;
				rel2.to: "elm.swallow.media_player.volume";
				rel2.relative: 1.0 1.0;
				rel2.offset: 0 -1;
			}
		}
		part { "elm.swallow.media_player.positionslider"; type: SWALLOW;
			clip: "clipper";
			desc { "default";
				fixed: 0 1;
				rel1.relative: 1.0 0.0;
				rel1.to: "elm.swallow.media_player.info";
				rel2.to_y: "elm.swallow.media_player.info";
				rel2.offset: -2 -1;
			}
		}
		part { "elm.swallow.media_player.volumeslider"; type: SWALLOW;
			clip: "volclip";
			scale;
			desc { "default"; max: 99999 100;
				fixed: 1 1;
				rel1.to_x: "elm.swallow.media_player.volume";
				rel1.offset: 0 1;
				rel2.to: "elm.swallow.media_player.volume";
				rel2.offset: -1 -3;
				rel2.relative: 1.0 0.0;
				align: 0.5 1.0;
			}
		}
		part { "controls"; type: RECT; repeat;
			clip: "clipper";
			scale;
			desc { "default"; min: BSZ BSZ; color: "#00000000";
				align: 0.5 1.0;
				rel1.relative: 0.0 0.8;
			}
		}
		spacer { "volumetop";
			desc { "default";
				fixed: 1 1;
				rel1.to_y: "elm.swallow.media_player.volumeslider";
				rel1.relative: 0.0 0.0;
				rel2.to_y: "controls";
				rel2.relative: 1.0 0.0;
				align: 0.5 0.0;
			}
		}
		part { "volume"; type: RECT; repeat;
			clip: "clipper";
			desc { "default"; color: "#00000000"; hid;
				fixed: 1 1;
				rel1.to_y: "volumetop";
				rel1.to_x: "elm.swallow.media_player.volume";
				rel1.relative: -1.0 0.0;
				rel1.offset: 0 -20;
				rel2.to: "elm.swallow.media_player.volume";
				rel2.relative: 2.0 1.0;
				align: 0.5 1.0;
			}
			desc { "visible"; inherit; vis; }
		}
	}

	programs {
		program { "ci";
			signal: "mouse,in"; source: "controls";
			script {
				set_int(in_control, 1);
				eval_in();
			}
		}
		program { "co";
			signal: "mouse,out"; source: "controls";
			script {
				set_int(in_control, 0);
				eval_in();
			}
		}
		program { "vi";
			signal: "mouse,in"; source: "volume";
			script {
				set_int(in_volume, 1);
				eval_in();
			}
		}
		program { "vo";
			signal: "mouse,out"; source: "volume";
			script {
				set_int(in_volume, 0);
				eval_in();
			}
		}
		program {
			signal: "conshow"; source: "";
			action: STATE_SET "visible" 0.0;
			transition: DECELERATE 0.2;
			target: "elm.swallow.media_player.prev";
			target: "barshad";
			target: "volume";
		}
		program {
			signal: "conhide"; source: "";
			action: STATE_SET "default" 0.0;
			transition: DECELERATE 0.5;
			target: "elm.swallow.media_player.prev";
			target: "barshad";
			target: "volume";
		}
		program {
			signal: "mouse,in"; source: "volume";
			action: STATE_SET "visible" 0.0;
			transition: DECELERATE 0.5;
			target: "volclip";
		}
		program {
			signal: "mouse,out"; source: "volume";
			action: STATE_SET "default" 0.0;
			transition: DECELERATE 0.5;
			target: "volclip";
		}
		program {
			signal: "load"; source: "";
			after: "pause/0";
		}
		program {
			signal: "elm,player,play"; source: "elm";
			after: "play/0";
		}
		program {
			signal: "elm,player,pause"; source: "elm";
			after: "pause/0";
		}
		program { "play/0";
			action: STATE_SET "hidden" 0.0;
			target: "elm.swallow.media_player.play";
			after: "play/1";
		}
		program { "play/1";
			action: STATE_SET "default" 0.0;
			target: "elm.swallow.media_player.pause";
		}
		program { "pause/0";
			action: STATE_SET "hidden" 0.0;
			target: "elm.swallow.media_player.pause";
			after: "pause/1";
		}
		program { "pause/1";
			action: STATE_SET "default" 0.0;
			target: "elm.swallow.media_player.play";
		}
		program {
			signal: "load"; source: "";
			after: "unmute/0";
		}
		program {
			signal: "elm,player,mute"; source: "elm";
			after: "mute/0";
		}
		program {
			signal: "elm,player,unmute"; source: "elm";
			after: "unmute/0";
		}
		program { "mute/0";
			action: STATE_SET "hidden" 0.0;
			target: "elm.swallow.media_player.volume";
			after: "mute/1";
		}
		program { "mute/1";
			action: STATE_SET "default" 0.0;
			target: "elm.swallow.media_player.mute";
		}
		program { "unmute/0";
			action: STATE_SET "hidden" 0.0;
			target: "elm.swallow.media_player.mute";
			after: "unmute/1";
		}
		program { "unmute/1";
			action: STATE_SET "default" 0.0;
			target: "elm.swallow.media_player.volume";
		}
	}
}

group { "elm/player/base/flush";
	inherit: "elm/player/base/default";

	parts {
		part { "bg";
			desc { "default";
				rel1.offset: 0 0; rel2.offset: -1 -1;
			}
		}
		part { "elm.swallow.content";
			desc { "default";
				rel1.offset: 0 0; rel2.offset: -1 -1;
			}
		}
		part { "bar";
			desc { "default";
				rel1.offset: 0 -1; rel2.offset: -1 -1;
			}
		}
		part { "elm.swallow.media_player.prev";
			desc { "default";
				rel1.offset: 0 7; rel2.offset: 0 7;
			}
			desc { "visible";
				rel1.offset: 0 -1; rel2.offset: 0 -1;
			}
		}
		part { "elm.swallow.media_player.positionslider";
			desc { "default";
				rel2.offset: -1 -1;
			}
		}
	}
}
