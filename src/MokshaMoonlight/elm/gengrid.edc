group { name: "elm/gengrid/item/group_index/default";
	inherit: "elm/genlist/item/group_index/default";
}

group { name: "elm/gengrid/item/default/default";
	data.item: "selectraise" "on";
	data.item: "texts" "elm.text";
	data.item: "contents" "elm.swallow.icon elm.swallow.end";

	parts {
//---------------------------------------------------------------------------
#define BASEP() \
		part { name: "event"; type: RECT; \
			desc { state: "default" 0.0; \
				color: "#00000000"; \
			} \
			desc { state: "disabled" 0.0; \
				inherit: "default" 0.0; \
				hid; \
			} \
		} \
		CLIP_SWITCH("base","base","base","default","selected")   \
		part { name: "base"; type: RECT; nomouse; \
			clip: "base_clip_default"; \
			desc { state: "default" 0.0; \
				color_class: "ilist_item_base"; \
			} \
			desc { state: "odd" 0.0; \
				color_class: "ilist_item_odd_base"; \
			} \
		} \
		part { name: "base_sel"; nomouse; \
			clip: "base_clip_selected";   \
			desc { state: "default" 0.0; \
			STAY_ON("base")   \
			image.normal: "selected.png"; \
			image.border: 2 2 2 2;        \
		}  \
	  }   \
		program { \
			signal: "elm,state,odd"; source: "elm"; \
			action: STATE_SET "odd" 0.0; \
			target: "base"; \
		} \
		program { \
			signal: "elm,state,even"; source: "elm"; \
			action: STATE_SET "default" 0.0; \
			target: "base"; \
		} \
		program { \
			signal: "elm,state,selected"; source: "elm"; \
			action: STATE_SET "selected" 0.0; \
			target: "base_clip_selected"; \
			target: "base_clip_default"; \
		} \
		program { \
			signal: "elm,state,unselected"; source: "elm"; \
			action: STATE_SET "default" 0.0; \
			target: "base_clip_selected"; \
			target: "base_clip_default"; \
		} \
		program { \
			signal: "elm,state,disabled"; source: "elm"; \
			action: STATE_SET "disabled" 0.0; \
			target: "event"; \
		} \
		program { \
			signal: "elm,state,enabled"; source: "elm"; \
			action: STATE_SET "default" 0.0; \
			target: "event"; \
		}
#define TOPP() \
		part { name: "event_block"; type: RECT; \
			desc { state: "default" 0.0; \
				color: "#00000000"; \
				hid; \
			} \
			desc { state: "disabled" 0.0; \
				inherit: "default" 0.0; \
				vis; \
			} \
		} \
		program { \
			signal: "elm,state,disabled"; source: "elm"; \
			action: STATE_SET "disabled" 0.0; \
			target: "event_block"; \
		} \
		program { \
			signal: "elm,state,enabled"; source: "elm"; \
			action: STATE_SET "default" 0.0; \
			target: "event_block"; \
		}
//---------------------------------------------------------------------------
		BASEP()

		//##//
		part { name: "elm.text"; type: TEXT; nomouse;
			effect: SHADOW BOTTOM;
			scale;
			desc { state: "default" 0.0;
				rel1.relative: 0.0 1.0;
				rel1.offset: 5 -5;
				rel2.relative: 1.0 1.0;
				rel2.offset: -5 -5;
				color: VISIBLE;
				color3: VISIBLE;
				color_class: "ilist_item";
				align: 0.5 1.0;
				text { font: "Sans"; size: 10;
					min: 0 1;
					align: 0.5 1.0;
					text_class: "grid_item";
				}
			}
			desc { state: "selected" 0.0;
				inherit: "default" 0.0;
				hid;
			}
			desc { state: "disabled" 0.0;
				inherit: "default" 0.0;
				hid;
			}
		}
		part { name: "label2"; type: TEXT; nomouse;
			effect: SHADOW BOTTOM;
			scale;
			desc { state: "default" 0.0;
				rel1.to: "elm.text";
				rel2.to: "elm.text";
				color: "#FFFFFF7D";
				color3: "#FFFFFF7D";
				color_class: "ilist_item";
				text { font: "Sans"; size: 10;
					text_source: "elm.text";
					align: 0.5 1.0;
					text_class: "grid_item";
				}
				hid;
			}
			desc { state: "selected" 0.0;
				inherit: "default" 0.0;
				hid;
			}
			desc { state: "disabled" 0.0;
				inherit: "default" 0.0;
				vis;
			}
		}
		part { name: "label3"; type: TEXT; nomouse;
			effect: SHADOW BOTTOM;
			scale;
			desc { state: "default" 0.0;
				STAY_ON("elm.text")
				color: VISIBLE;
				color2: VISIBLE;
				color3: VISIBLE;
				color_class: "ilist_item_selected";
				text { font: "Sans"; size: 10;
					text_source: "elm.text";
					align: 0.5 1.0;
					text_class: "grid_item";
				}
				hid;
			}
			desc { state: "selected" 0.0;
				inherit: "default" 0.0;
				vis;
			}
			desc { state: "disabled" 0.0;
				inherit: "default" 0.0;
				hid;
			}
		}
		program {
			signal: "elm,state,selected"; source: "elm";
			action: STATE_SET "selected" 0.0;
			target: "elm.text";
			target: "label2";
			target: "label3";
		}
		program {
			signal: "elm,state,unselected"; source: "elm";
			action: STATE_SET "default" 0.0;
			target: "elm.text";
			target: "label2";
			target: "label3";
		}
		program {
			signal: "elm,state,disabled"; source: "elm";
			action: STATE_SET "disabled" 0.0;
			target: "elm.text";
			target: "label2";
			target: "label3";
			target: "icon_area";
		}
		program {
			signal: "elm,state,enabled"; source: "elm";
			action: STATE_SET "default" 0.0;
			target: "elm.text";
			target: "label2";
			target: "label3";
			target: "icon_area";
		}
		//##//
		part { name: "icon_area"; type: RECT;
			desc { state: "default" 0.0;
				fixed: 1 0;
				rel1.offset: 2 2;
				rel2.to_y: "elm.swallow.pad";
				rel2.relative: 1.0 0.0;
				rel2.offset: -3 -3;
			}
			desc { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color: "#FFFFFF40";
			}
		}
		part { name: "elm.swallow.pad"; type: SWALLOW;
			desc { state: "default" 0.0;
				fixed: 0 1;
				align: 0.0 1.0;
				rel1.to_y: "elm.text";
				rel2.to_y: "elm.text";
				rel2.relative: 1.0 0.0;
			}
		}
		part { name: "elm.swallow.icon"; type: SWALLOW;
			clip: "icon_area";
			desc { state: "default" 0.0;
				rel1.to: "icon_area";
				rel2.to: "icon_area";
			}
		}
		part { name: "elm.swallow.end"; type: SWALLOW;
			clip: "icon_area";
			desc { state: "default" 0.0;
				fixed: 1 0;
				align: 1.0 0.0;
				rel1.relative: 1.0 0.0;
				rel1.offset: -3 2;
				rel2.relative: 1.0 0.0;
				rel2.offset: -3 2;
			}
		}
		//##//
		
		TOPP()
	}
}

group { name: "elm/gengrid/item/default_style/default";
	data.item: "selectraise" "on";
	data.item: "texts" "elm.text";
	data.item: "contents" "elm.swallow.icon elm.swallow.end";
	styles.style {    name: "gengrid_style";
		base: "font=""Sans"" font_size=10 align=left color=#4c4c4cff text_class=list_item ellipsis=1.0";
		tag: "br" "\n";
		tag: "ps" "ps";
		tag: "hilight" "+ font_weight=Bold";
		tag: "b" "+ font_weight=Bold";
		tag: "tab" "\t";
	}
	styles.style { name: "gengrid_style_selected";
		base: "font=""Sans"" font_size=10 align=left color=#ffffffff text_class=list_item_selected ellipsis=1.0";
		tag: "br" "\n";
		tag: "ps" "ps";
		tag: "hilight" "+ font_weight=Bold";
		tag: "b" "+ font_weight=Bold";
		tag: "tab" "\t";
	}
	styles.style { name: "gengrid_style_disabled";
		base: "font=""Sans"" font_size=10 align=left color=#4c4c4c7d text_class=list_item ellipsis=1.0";
		tag: "br" "\n";
		tag: "ps" "ps";
		tag: "hilight" "+ font_weight=Bold";
		tag: "b" "+ font_weight=Bold";
		tag: "tab" "\t";
	}
	
	parts {
		BASEP()

		//##//
		part { name: "elm.text"; type: TEXTBLOCK; nomouse;
			scale;
			desc { state: "default" 0.0;
				rel1.relative: 0.0 1.0;
				rel1.offset: 5 -5;
				rel2.relative: 1.0 1.0;
				rel2.offset: -5 -5;
				color_class: "ilist_item";
				align: 0.5 1.0;
				text {
					min: 0 1;
					align: 0.5 1.0;
					text_class: "grid_item";
					style: "gengrid_style";
				}
			}
			desc { state: "selected" 0.0;
				inherit: "default" 0.0;
				hid;
			}
			desc { state: "disabled" 0.0;
				inherit: "default" 0.0;
				hid;
			}
		}
		part { name: "label2"; type: TEXTBLOCK; nomouse;
			scale;
			desc { state: "default" 0.0;
				rel1.to: "elm.text";
				rel2.to: "elm.text";
				color_class: "grid_item_disabled";
				text {
					text_source: "elm.text";
					align: 0.5 1.0;
					text_class: "grid_item";
					style: "gengrid_style_disabled";
				}
				hid;
			}
			desc { state: "selected" 0.0;
				inherit: "default" 0.0;
				hid;
			}
			desc { state: "disabled" 0.0;
				inherit: "default" 0.0;
				vis;
			}
		}
		part { name: "label3"; type: TEXTBLOCK; nomouse;
			scale;
			desc { state: "default" 0.0;
				rel1.to: "elm.text";
				rel2.to: "elm.text";
				color_class: "grid_item_selected";
				text {
					text_source: "elm.text";
					align: 0.5 1.0;
					text_class: "grid_item";
					style: "gengrid_style_selected";
				}
				hid;
			}
			desc { state: "selected" 0.0;
				inherit: "default" 0.0;
				vis;
			}
			desc { state: "disabled" 0.0;
				inherit: "default" 0.0;
				hid;
			}
		}
		program {
			signal: "elm,state,selected"; source: "elm";
			action: STATE_SET "selected" 0.0;
			target: "elm.text";
			target: "label2";
			target: "label3";
		}
		program {
			signal: "elm,state,unselected"; source: "elm";
			action: STATE_SET "default" 0.0;
			target: "elm.text";
			target: "label2";
			target: "label3";
		}
		program {
			signal: "elm,state,disabled"; source: "elm";
			action: STATE_SET "disabled" 0.0;
			target: "elm.text";
			target: "label2";
			target: "label3";
			target: "icon_area";
		}
		program {
			signal: "elm,state,enabled"; source: "elm";
			action: STATE_SET "default" 0.0;
			target: "elm.text";
			target: "label2";
			target: "label3";
			target: "icon_area";
		}
		//##//
		part { name: "icon_area"; type: RECT;
			desc { state: "default" 0.0;
				fixed: 1 0;
				rel1.offset: 2 2;
				rel2.to_y: "elm.swallow.pad";
				rel2.relative: 1.0 0.0;
				rel2.offset: -3 -3;
			}
			desc { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color: "#FFFFFF40";
			}
		}
		part { name: "elm.swallow.pad"; type: SWALLOW;
			desc { state: "default" 0.0;
				fixed: 0 1;
				align: 0.0 1.0;
				rel1.to_y: "elm.text";
				rel2.to_y: "elm.text";
				rel2.relative: 1.0 0.0;
			}
		}
		part { name: "elm.swallow.icon"; type: SWALLOW;
			clip: "icon_area";
			desc { state: "default" 0.0;
				rel1.to: "icon_area";
				rel2.to: "icon_area";
			}
		}
		part { name: "elm.swallow.end"; type: SWALLOW;
			clip: "icon_area";
			desc { state: "default" 0.0;
				fixed: 1 0;
				align: 1.0 0.0;
				rel1.relative: 1.0 0.0;
				rel1.offset: -3 2;
				rel2.relative: 1.0 0.0;
				rel2.offset: -3 2;
			}
		}
		//##//
		
		TOPP()
	}
}

group { name: "elm/gengrid/item/up/default";
	inherit: "elm/gengrid/item/default/default";
	images.image: "menu_arrow_u_normal.png" COMP;
	images.image: "menu_arrow_u_sel.png" COMP;
	parts {
		part { name: "icon_area"; type: RECT;
			desc { state: "default" 0.0;
				hid;
			}
		}
		part { name: "up";
			insert_after: "elm.swallow.pad";
			desc { state: "default" 0.0;
				aspect: 1.0 1.0; aspect_preference: BOTH;
				rel1.to: "icon_area";
				rel2.to: "icon_area";
				FIXED_SIZE(12,9)
				image.normal: "menu_arrow_u_normal.png";
			}
			desc { state: "selected" 0.0;
			inherit: "default" 0.0;
				image.normal: "menu_arrow_u_sel.png";
		 }
		}
		program { name: "sel_up";
			signal: "elm,state,selected"; source: "elm";
			action: STATE_SET "selected" 0.0;
			target: "up";
		}
		program { name: "unsel_up";
			signal: "elm,state,unselected"; source: "elm";
			action: STATE_SET "default" 0.0;
			target: "up";
		}
	}
}

group { name: "elm/gengrid/item/album-preview/default";
	data.item: "selectraise" "on";
	data.item: "texts" "elm.text";
	data.item: "contents" "elm.swallow.icon.1 elm.swallow.icon.2 elm.swallow.icon.3 elm.swallow.icon.4";
	data.item: "states" "have_files";
	

	images.image: "folder.png" COMP;
	
	parts {
		BASEP()

		//##//
		part { name: "elm.text"; type: TEXT; nomouse;
			effect: SHADOW BOTTOM;
			scale;
			desc { state: "default" 0.0;
				rel1.relative: 0.0 1.0;
				rel1.offset: 5 -5;
				rel2.relative: 1.0 1.0;
				rel2.offset: -5 -5;
				color: VISIBLE;
				color3: VISIBLE;
				color_class: "ilist_item";
				align: 0.5 1.0;
				text { font: "Sans"; size: 10;
					min: 0 1;
					align: 0.5 1.0;
					text_class: "grid_item";
				}
			}
			desc { state: "selected" 0.0;
				inherit: "default" 0.0;
				hid;
			}
			desc { state: "disabled" 0.0;
				inherit: "default" 0.0;
				hid;
			}
		}
		part { name: "label2"; type: TEXT; nomouse;
			effect: SHADOW BOTTOM;
			scale;
			desc { state: "default" 0.0;
				rel1.to: "elm.text";
				rel2.to: "elm.text";
				color: "#FFFFFF7D";
				color3: "#FFFFFF7D";
				color_class: "ilist_item";
				text { font: "Sans"; size: 10;
					text_source: "elm.text";
					align: 0.5 1.0;
					text_class: "grid_item";
				}
				hid;
			}
			desc { state: "selected" 0.0;
				inherit: "default" 0.0;
				hid;
			}
			desc { state: "disabled" 0.0;
				inherit: "default" 0.0;
				vis;
			}
		}
		part { name: "label3"; type: TEXT; nomouse;
			effect: SHADOW BOTTOM;
			scale;
			desc { state: "default" 0.0;
				STAY_ON("elm.text")
				color: VISIBLE;
				color2: VISIBLE;
				color3: VISIBLE;
				color_class: "ilist_item_selected";
				text { font: "Sans"; size: 10;
					text_source: "elm.text";
					align: 0.5 1.0;
					text_class: "grid_item";
				}
				hid;
			}
			desc { state: "selected" 0.0;
				inherit: "default" 0.0;
				vis;
			}
			desc { state: "disabled" 0.0;
				inherit: "default" 0.0;
				hid;
			}
		}
		program {
			signal: "elm,state,selected"; source: "elm";
			action: STATE_SET "selected" 0.0;
			target: "elm.text";
			target: "label2";
			target: "label3";
		}
		program {
			signal: "elm,state,unselected"; source: "elm";
			action: STATE_SET "default" 0.0;
			target: "elm.text";
			target: "label2";
			target: "label3";
		}
		program {
			signal: "elm,state,disabled"; source: "elm";
			action: STATE_SET "disabled" 0.0;
			target: "elm.text";
			target: "label2";
			target: "label3";
			target: "icon_area";
		}
		program {
			signal: "elm,state,enabled"; source: "elm";
			action: STATE_SET "default" 0.0;
			target: "elm.text";
			target: "label2";
			target: "label3";
			target: "icon_area";
		}
		//##//
		part { name: "icon_area"; type: RECT;
			desc { state: "default" 0.0;
				fixed: 1 0;
				rel1.offset: 2 2;
				rel2.to_y: "elm.swallow.pad";
				rel2.relative: 1.0 0.0;
				rel2.offset: -3 -3;
				hid;
			}
			desc { state: "visible" 0.0;
				inherit: "default" 0.0;
				vis;
			}
			desc { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color: "#FFFFFF40";
			}
		}
		program {      
			signal: "elm,state,have_files,active"; source: "elm";
			action: STATE_SET "visible" 0.0;
			target: "icon_area";
		}
		part { name: "icon_area2"; type: SPACER;
			desc { state: "default" 0.0;
				rel1.to: "icon_area";
				rel1.relative: 0.3  0.3;
				rel2.to: "icon_area";
				rel2.relative: 0.7  0.7;
			}
		}
		part { name: "folder";
			insert_after: "elm.swallow.pad";
			desc { state: "default" 0.0;
				aspect: 1.0 1.0; aspect_preference: BOTH;
				rel1.to: "icon_area";
				rel2.to: "icon_area";
				image.normal: "folder.png";
			}
		}
		part { name: "elm.swallow.pad"; type: SWALLOW;
			desc { state: "default" 0.0;
				fixed: 0 1;
				align: 0.0 1.0;
				rel1.to_y: "elm.text";
				rel2.to_y: "elm.text";
				rel2.relative: 1.0 0.0;
			}
		}
		part { name: "elm.swallow.icon.1"; type: SWALLOW; nomouse;
			clip: "icon_area";
			desc { state: "default" 0.0;
				rel1.to: "icon_area2";
				rel1.relative: 0.0  0.0;
				rel2.to: "icon_area2";
				rel2.relative: 0.5  0.5;
			}
		}
		part { name: "elm.swallow.icon.2"; type: SWALLOW; nomouse;
			clip: "icon_area";
			desc { state: "default" 0.0;
				rel1.to: "icon_area2";
				rel1.relative: 0.5  0.0;
				rel2.to: "icon_area2";
				rel2.relative: 1.0  0.5;
			}
		}
		part { name: "elm.swallow.icon.3"; type: SWALLOW; nomouse;
			clip: "icon_area";
			desc { state: "default" 0.0;
				rel1.to: "icon_area2";
				rel1.relative: 0.0  0.5;
				rel2.to: "icon_area2";
				rel2.relative: 0.5  1.0;
			}
		}
		part { name: "elm.swallow.icon.4"; type: SWALLOW; nomouse;
			clip: "icon_area";
			desc { state: "default" 0.0;
				rel1.to: "icon_area2";
				rel1.relative: 0.5  0.5;
				rel2.to: "icon_area2";
				rel2.relative: 1.0  1.0;
			}
		}
		//##//
		
		TOPP()
	}
}

group { name: "elm/gengrid/item/thumb/default";
	data.item: "selectraise" "on";
	data.item: "texts" "elm.text";
	data.item: "contents" "elm.swallow.icon elm.swallow.end";
	
	images.image: "shadow_square.png" COMP;
	parts {

		part { name: "shadow"; nomouse;
			desc { state: "default" 0.0;
				image.normal: "shadow_square.png";
				image.border: 14 14 14 14;
				image.middle: 0;
				rel1.to: "base";
				rel1.offset: -7  -3;
				rel2.to: "base";
				rel2.offset: 6 11;
				fill.smooth: 0;
			}
		}
		part { name: "base"; type: RECT;
			desc { state: "default" 0.0;
				rel1.offset: -4 -4;
				rel1.to: "icon_area";
				rel2.offset: 3 3;
				rel2.to: "icon_area";
				color: VISIBLE;
			}
			desc { state: "selected" 0.0;
				inherit: "default" 0.0;
				color_class: "focus";
			}
			desc { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color: "#404040";
			}
		}
		program {
			signal: "elm,state,selected"; source: "elm";
			action: STATE_SET "selected" 0.0;
			target: "base";
			target: "icon_area";
		}
		program {
			signal: "elm,state,unselected"; source: "elm";
			action: STATE_SET "default" 0.0;
			target: "base";
			target: "icon_area";
		}
		program {
			signal: "elm,state,disabled"; source: "elm";
			action: STATE_SET "disabled" 0.0;
			target: "base";
			target: "icon_area";
		}
		program {
			signal: "elm,state,enabled"; source: "elm";
			action: STATE_SET "default" 0.0;
			target: "base";
			target: "icon_area";
		}
		
		//##//
		part { name: "elm.text"; type: TEXT; nomouse;
			effect: SHADOW BOTTOM;
			scale;
			desc { state: "default" 0.0;
				rel1.relative: 0.0 1.0;
				rel1.offset: 5 -5;
				rel2.relative: 1.0 1.0;
				rel2.offset: -5 -5;
				color: VISIBLE;
				color3: VISIBLE;
				color_class: "ilist_item";
				align: 0.5 1.0;
				text { font: "Sans"; size: 10;
					min: 0 1;
					align: 0.5 1.0;
					text_class: "grid_item";
				}
			}
			desc { state: "selected" 0.0;
				inherit: "default" 0.0;
				hid;
			}
			desc { state: "disabled" 0.0;
				inherit: "default" 0.0;
				hid;
			}
		}
		part { name: "label2"; type: TEXT; nomouse;
			effect: SHADOW BOTTOM;
			scale;
			desc { state: "default" 0.0;
				rel1.to: "elm.text";
				rel2.to: "elm.text";
				color: "#FFFFFF7D";
				color3: "#FFFFFF7D";
				color_class: "ilist_item";
				text { font: "Sans"; size: 10;
					text_source: "elm.text";
					align: 0.5 1.0;
					text_class: "grid_item";
				}
				hid;
			}
			desc { state: "selected" 0.0;
				inherit: "default" 0.0;
				hid;
			}
			desc { state: "disabled" 0.0;
				inherit: "default" 0.0;
				vis;
			}
		}
		part { name: "label3"; type: TEXT; nomouse;
			effect: SHADOW BOTTOM;
			scale;
			desc { state: "default" 0.0;
				STAY_ON("elm.text")
				color: VISIBLE;
				color2: VISIBLE;
				color3: VISIBLE;
				color_class: "ilist_item";
				text { font: "Sans"; size: 10;
					text_source: "elm.text";
					align: 0.5 1.0;
					text_class: "grid_item";
				}
				hid;
			}
			desc { state: "selected" 0.0;
				inherit: "default" 0.0;
				vis;
			}
			desc { state: "disabled" 0.0;
				inherit: "default" 0.0;
				hid;
			}
		}
		program {
			signal: "elm,state,selected"; source: "elm";
			action: STATE_SET "selected" 0.0;
			target: "elm.text";
			target: "label2";
			target: "label3";
		}
		program {
			signal: "elm,state,unselected"; source: "elm";
			action: STATE_SET "default" 0.0;
			target: "elm.text";
			target: "label2";
			target: "label3";
		}
		program {
			signal: "elm,state,disabled"; source: "elm";
			action: STATE_SET "disabled" 0.0;
			target: "elm.text";
			target: "label2";
			target: "label3";
		}
		program {
			signal: "elm,state,enabled"; source: "elm";
			action: STATE_SET "default" 0.0;
			target: "elm.text";
			target: "label2";
			target: "label3";
		}
		//##//
		part { name: "icon_area"; type: RECT;
			desc { state: "default" 0.0;
				fixed: 1 0;
				aspect: 1.0 1.0; aspect_preference: BOTH;
				rel1.offset: 12 12;
				rel2.to_y: "elm.swallow.pad";
				rel2.relative: 1.0 0.0;
				rel2.offset: -13 -13;
			}
			desc { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color: "#FFFFFF40";
			}
			desc { state: "selected" 0.0;
				inherit: "default" 0.0;
				vis;
			}
		}
		part { name: "elm.swallow.pad"; type: SWALLOW;
			desc { state: "default" 0.0;
				fixed: 0 1;
				align: 0.0 1.0;
				rel1.to_y: "elm.text";
				rel2.to_y: "elm.text";
				rel2.relative: 1.0 0.0;
			}
		}
		part { name: "elm.swallow.icon"; type: SWALLOW;
			clip: "icon_area";
			desc { state: "default" 0.0;
				rel1.to: "icon_area";
				rel2.to: "icon_area";
			}
		}
		part { name: "elm.swallow.end"; type: SWALLOW;
			clip: "icon_area";
			desc { state: "default" 0.0;
				fixed: 1 0;
				align: 1.0 0.0;
				rel1.relative: 1.0 0.0;
				rel1.offset: -3 2;
				rel2.relative: 1.0 0.0;
				rel2.offset: -3 2;
			}
		}
	}
}

#undef BASEP
#undef TOPP
