group { "elm/actionslider/base/default";
	images.image: "slider_runnerh.png" COMP;
	images.image: "button-normal.png" COMP;
	images.image: "button-insensitive.png" COMP;
	images.image: "button-pressed.png" COMP;
	images.image: "button-prelight.png" COMP;

	parts {
		part { "base";
			desc { "default";
				image.normal: "slider_runnerh.png";
				image.border: 4 4 4 4;
				rel1.offset: 1 2;
				rel2.offset: -1 -2;
			}
			desc { "disabled"; inherit; color: "#FFFFFFC8"; }
		}
		spacer { "icon.dragable.area";
			desc { "default";
				rel1.to: "base";
				rel2.to: "base";
			}
		}
		text { "elm.text.left"; effect: SHADOW BOTTOM; scale; nomouse;
			desc { "default"; color: VISIBLE; color_class: "border_frame";
				color3: VISIBLE;
				text.font: "Sans"; text.size: 10;
				text.align: 0.05 0.5;
				text.min: 1 1;
				text.ellipsis: -1;
				text.text_class: "button";
				text.text: "LEFT";
			}
			desc { "disabled"; color: VISIBLE; color_class: "button_text_disabled";
				inherit;
				color3: VISIBLE; // USE! color_class: "disabled";;
			}
		}
		text { "elm.text.center"; effect: SHADOW BOTTOM; nomouse; scale;
			desc { "default"; color: VISIBLE; color_class: "border_frame";
				color3: VISIBLE;
				text.font: "Sans"; text.size: 10;
				text.align: 0.5 0.5;
				text.min: 1 1;
				text.ellipsis: -1;
				text.text_class: "check_off_text";
			}
			desc { "disabled"; color: VISIBLE; color_class: "button_text_disabled";
				inherit;
				color3: VISIBLE; // USE! color_class: "disabled";;
			}
		}
		text { "elm.text.right"; effect: SHADOW BOTTOM; nomouse; scale;
			desc { "default"; color: VISIBLE; color_class: "border_frame";
				color3: VISIBLE;
				text.font: "Sans"; text.size: 10;
				text.align: 0.95 0.5;
				text.min: 1 1;
				text.ellipsis: -1;
				text.text_class: "check_off_text";
			}
			desc { "disabled"; color: VISIBLE; color_class: "button_text_disabled";
				inherit;
				color3: VISIBLE; // USE! color_class: "disabled";;
			}
		}
		swallow { "elm.drag_button_base"; nomouse; scale;
			desc { "default";
				fixed: 1 1;
				min: 40 10;
				align: 0.5 0.5;
				rel1.to: "icon.dragable.area";
				rel2.relative: 0.0 1.0;
				rel2.to: "icon.dragable.area";
			}
			dragable.confine: "icon.dragable.area";
			dragable.x: 1 1 0;
			dragable.y: 0 0 0;
		}
		rect { "elm.drag_button";  scale;
			desc { "default"; min: 40 18; color: "#00000000";
				rel1.to_x: "elm.drag_button_base";
				rel1.to_y: "icon.dragable.area";
				rel1.offset: 3 1;
				rel2.to_x: "elm.drag_button_base";
				rel2.to_y: "icon.dragable.area";
				rel2.offset: -3 -2;
			}
			dragable.events: "elm.drag_button_base";
		}
		part { "drag_button"; nomouse;
			desc { "default";
				image.normal: "button-normal.png";
				image.border: 10 10 0 0;
				STAY_ON("elm.drag_button")
			}
			desc { "pressed" 0.0;
			 inherit;
			 image.normal: "button-pressed.png";
			}
		 desc { "over" 0.0;
			 inherit;
			 image.normal: "button-prelight.png";
			}
			desc { "disabled" 0.0;
			 inherit;
			 image.normal: "button-insensitive.png";
			}
		 desc { "clicked";
				inherit;
				image.normal: "button-pressed.png";
			}
		}
		text { "elm.text.indicator"; effect: SHADOW BOTTOM; nomouse; scale;
			desc { "default"; color: VISIBLE; color_class: "button_text";
				color3: VISIBLE;
				rel1.to: "elm.drag_button";
				rel1.offset: 5 2;
				rel2.to: "elm.drag_button";
				rel2.offset: -5 -3;
				text.font: "Sans"; text.size: 10;
				text.align: 0.5 0.5;
				text.min: 0 1;
				text.text_class: "check_off_text";
			}
			desc { "disabled"; color: VISIBLE; color_class: "button_text_disabled";
				inherit;
				color3: VISIBLE;
			}
		}
		rect { "disabler";
			desc { "default"; color: "#00000000"; hid; }
			desc { "disabled"; inherit; vis; }
		}
	}

	programs {
		OVER_P("drag_button","elm.drag_button","default","over")
		program {
			signal: "mouse,up,1"; source: "elm.drag_button";
			action: STATE_SET "default";
			target: "drag_button";
		}
		program {
			signal: "mouse,down,1"; source: "elm.drag_button";
			action: STATE_SET "pressed";
			target: "drag_button";
		}
		program {
			signal: "mouse,up,1"; source: "elm.drag_button";
			action: SIGNAL_EMIT "elm.drag_button,mouse,up" "elm";
			after: "button_unclick_anim";
		}
		program { "button_unclick_anim";
			action: STATE_SET "default" 0.0;
			target: "drag_button";
		}
		program {
			signal: "mouse,down,1*"; source: "elm.drag_button";
			action: SIGNAL_EMIT "elm.drag_button,mouse,down" "elm";
			after: "button_click_anim";
		}
		program { "button_click_anim";
			action: STATE_SET "clicked" 0.0;
			target: "drag_button";
		}
		program {
			signal: "mouse,move"; source: "elm.drag_button_base";
			action: SIGNAL_EMIT "elm.drag_button,mouse,move" "elm";
		}
		program {
			signal: "elm,state,disabled"; source: "elm";
			action: STATE_SET "disabled" 0.0;
			target: "base";
			target: "drag_button";
			target: "disabler";
			target: "elm.text.left";
			target: "elm.text.center";
			target: "elm.text.right";
			target: "elm.text.indicator";
		}
		program {
			signal: "elm,state,enabled"; source: "elm";
			action: STATE_SET "default" 0.0;
			target: "base";
			target: "drag_button";
			target: "disabler";
			target: "elm.text.left";
			target: "elm.text.center";
			target: "elm.text.right";
			target: "elm.text.indicator";
		}
	}
}

group { "elm/actionslider/base/bar";
	inherit: "elm/actionslider/base/default";
	images.image: "barH.png" COMP;

	parts {
		part { "base";
		 before: "bar";
			desc { "default";
				image.normal: "slider_runnerh.png";
				image.border: 4 4 4 4;
				rel1.offset: 1 2;
				rel2.offset: -1 -2;
			}
			desc { "disabled"; inherit; color: "#FFFFFFC8"; }
		}
		part { "bar"; nomouse;
			before: "icon.dragable.area";
			desc { "default";
				rel1.to: "base";
				rel1.offset: 1 2;
				rel2.relative: 1.0 1.0;
				rel2.to_x: "elm.drag_button_base";
				rel2.to_y: "base";
				rel2.offset: -2 -3;
				image.normal: "barH.png";
				image.border: 5 5 5 5;
			}
			desc { "disabled"; inherit; color: "#FFFFFF7D"; }
		}
	}

	programs {
		program {
			signal: "elm,state,disabled"; source: "elm";
			action: STATE_SET "disabled" 0.0;
			target: "base";
			target: "bar";
			target: "disabler";
			target: "elm.text.left";
			target: "elm.text.center";
			target: "elm.text.right";
			target: "elm.text.indicator";
		}
		program {
			signal: "elm,state,enabled"; source: "elm";
			action: STATE_SET "default" 0.0;
			target: "base";
			target: "bar";
			target: "disabler";
			target: "elm.text.left";
			target: "elm.text.center";
			target: "elm.text.right";
			target: "elm.text.indicator";
		}
	}
}
