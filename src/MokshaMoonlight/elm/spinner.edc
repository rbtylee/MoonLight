group { "elm/spinner/base/default";
	images.image: "entry.png" COMP;
	images.image: "menu_arrow_l_normal.png" COMP;
	images.image: "menu_arrow_l_sel.png" COMP;
	images.image: "menu_arrow_normal.png" COMP;
	images.image: "menu_arrow_sel.png" COMP;

	parts {
		part { "base";
			desc { "default";
				image.normal: "entry.png";
				image.border: 4 4 4 4;
				fill.smooth: 0;
				rel1.offset: 0 3;
				rel2.offset: -1 -5;
			}
			desc { "disabled"; inherit; color: "#FFFFFF96"; }
		}
		text { "elm.text"; effect: SHADOW BOTTOM; scale;
			desc { "default"; color: VISIBLE;
				color3: VISIBLE;
				color_class: "slider_text";
				rel1.to_y: "base";
				rel1.to_x: "left";
				rel1.relative: 1.0 0.0;
				rel1.offset: 1 1;
				rel2.to_y: "base";
				rel2.to_x: "right";
				rel2.relative: 0.0 1.0;
				rel2.offset: -2 -2;
				text.font: "Sans"; text.size: 10;
				text.min: 1 1;
				text.text_class: "spinner";
				text.ellipsis: -1;
			}
			desc { "disabled"; inherit; color: VISIBLE;
				color3: VISIBLE;
				color_class: "slider_text_disabled";
			}
			desc { "active"; inherit; hid; }
		}
		rect { "elm.dragable.slider";
			dragable.x: 1 1 0;
			dragable.y: 0 0 0;
			desc { "default"; color: "#00000000";
				fixed: 1 0;
				STAY_ON("base")
			}
		}
		swallow { "elm.swallow.entry";
			desc { "default"; hid;
				fixed: 1 0;
				rel1.to: "elm.text";
				rel2.to: "elm.text";
			}
			desc { "active"; inherit; vis; }
			desc { "disabled_active"; inherit; hid; }
			desc { "disabled"; inherit; hid; }
		}
		part { "arrow1"; nomouse; scale;
			desc { "default";
				rel1.to: "left";
				rel2.to: "left";
				image.normal: "menu_arrow_l_normal.png";
				FIXED_SIZE(9,12)
			}
			desc { "clicked"; inherit;
				image.normal: "menu_arrow_l_sel.png";
			}
			desc { "disabled"; inherit; color: "#FFFFFF96"; }
		}
		part { "arrow2"; nomouse; scale;
			desc { "default";
				rel1.to: "right";
				rel2.to: "right";
				image.normal: "menu_arrow_normal.png";
				FIXED_SIZE(9,12)
			}
			desc { "clicked"; inherit;
				image.normal: "menu_arrow_sel.png";
			}
			desc { "disabled"; inherit; color: "#FFFFFF96"; }
		}
		rect { "left";
			desc { "default"; min: 5 7; color: "#00000000";
				rel1.to: "base";
				rel1.offset: 1 1;
				rel2.to: "base";
				rel2.offset: 1 -2;
				rel2.relative: 0.0 1.0;
				align: 0.0 0.5;
				aspect: 1.0 1.0; aspect_preference: VERTICAL;
			}
		}
		rect { "right";
			desc { "default"; min: 5 7; color: "#00000000";
				rel1.to: "base";
				rel1.offset: 1 1;
				rel1.relative: 1.0 0.0;
				rel2.to: "base";
				rel2.offset: 1 -2;
				align: 1.0 0.5;
				aspect: 1.0 1.0; aspect_preference: VERTICAL;
			}
		}
		rect { "access_text"; repeat;
			desc { "default"; color: "#00000000";
				rel1.to: "elm.text";
				rel2.to: "elm.text";
			}
			desc { "disabled"; inherit; hid; }
		}
		rect { "disabler";
			desc { "default"; color: "#00000000"; hid; }
			desc { "disabled"; inherit; vis; }
		}
	}

	programs {
		program {
			signal: "mouse,down,1"; source: "left";
			action: STATE_SET "clicked" 0.0;
			target: "arrow1";
			after: "left2";
		}
		program { "left2";
			action: SIGNAL_EMIT "elm,action,decrement,start" "elm";
		}
		program {
			signal: "mouse,up,1"; source: "left";
			action: STATE_SET "default" 0.0;
			target: "arrow1";
			after: "left3";
		} 
		program { "left3";
			action: SIGNAL_EMIT "elm,action,decrement,stop" "elm";
		}
		program {
			signal: "mouse,down,1"; source: "right";
			action: STATE_SET "clicked" 0.0;
			target: "arrow2";
			after: "right2";
		} 
		program { "right2";
			action: SIGNAL_EMIT "elm,action,increment,start" "elm";
		}
		program {
			signal: "mouse,up,1"; source: "right";
			action: STATE_SET "default" 0.0;
			target: "arrow2";
			after: "right3";
		} 
		program { "right3";
			action: SIGNAL_EMIT "elm,action,increment,stop" "elm";
		}
		program {
			signal: "mouse,clicked,1"; source: "access_text";
			action: SIGNAL_EMIT "elm,action,click" "elm";
		}
		program { "active";
			signal: "elm,state,active"; source: "elm";
			action: STATE_SET "active" 0.0;
			target: "elm.text";
			target: "elm.swallow.entry";
		}
		program { "inactive";
			signal: "elm,state,inactive"; source: "elm";
			action: STATE_SET "default" 0.0;
			target: "elm.text";
			target: "elm.swallow.entry";
		}
		program { "toggle_text";
			signal: "mouse,clicked,1"; source: "elm.dragable.slider";
			action: SIGNAL_EMIT "elm,action,entry,toggle" "elm";
		}
		program {
			signal: "elm,state,enabled"; source: "elm";
			action: STATE_SET "default" 0.0;
			target: "arrow1";
			target: "arrow2";
			target: "access_text";
			target: "disabler";
			target: "elm.swallow.entry";
			target: "elm.text";
			target: "base";
		}
		program {
			signal: "elm,state,disabled"; source: "elm";
			action: STATE_SET "disabled" 0.0;
			target: "arrow1";
			target: "arrow2";
			target: "access_text";
			target: "disabler";
			target: "elm.swallow.entry";
			target: "elm.text";
			target: "base";
		}
	}
}

group { "elm/spinner/base/vertical";
	inherit: "elm/spinner/base/default";
	images.image: "menu_arrow_u_normal.png" COMP;
	images.image: "menu_arrow_u_sel.png" COMP;
	images.image: "menu_arrow_d_normal.png" COMP;
	images.image: "menu_arrow_d_sel.png" COMP;
	
	parts {
		part { "elm.text";
			desc { "default";
				rel1.to_x: "base";
				rel1.relative: 0.0 0.0;
				rel1.offset: 1 1;
				rel2.to_x: "left";
				rel2.relative: 0.0 1.0;
				rel2.offset: -2 -2;
			}
			desc { "disabled"; inherit; color: VISIBLE;
				color3: VISIBLE;
				color_class: "slider_text_disabled";
			}
			desc { "active"; inherit; hid; }
		}
		part { "arrow1"; nomouse;
			desc { "default";
				image.normal: "menu_arrow_d_normal.png";
				FIXED_SIZE(12,9)
			}
			desc { "clicked"; inherit;
				image.normal: "menu_arrow_d_sel.png";
			}
			desc { "disabled"; inherit; color: "#FFFFFF96"; }
		}
		part { "arrow2"; nomouse;
			desc { "default";
				image.normal: "menu_arrow_u_normal.png";
				FIXED_SIZE(12,9)
			}
			desc { "clicked"; inherit;
				image.normal: "menu_arrow_u_sel.png";
			}
			desc { "disabled"; inherit; color: "#FFFFFF96"; }
		}
		part { "left";
			desc { "default";
				rel1.to: "right";
				rel1.offset: -1 0;
				rel2.to: "right";
				rel2.offset: -1 -1;
				align: 1.0 0.5;
			}
		}
	}
}
