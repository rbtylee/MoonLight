group { "elm/ctxpopup/bg/noblock";
	parts {
		rect { "base"; nomouse;
			desc { "default"; color: "#00000000"; }
		}
	}
}

group { "elm/ctxpopup/bg/default";
	parts {
		rect { "base";
			desc { "default"; color: "#00000000"; }
			desc { "visible"; inherit; color: "#0000007D"; }
		}
	}

	programs {
		program {
			signal: "mouse,clicked,1"; source: "base";
			action: SIGNAL_EMIT "elm,action,click" "elm";
		}
		program {
			signal: "elm,state,show"; source: "elm";
			action: STATE_SET "visible" 0.0;
			transition: LINEAR 0.2;
			target: "base";
		}
		program {
			signal: "elm,state,hide"; source: "elm";
			action: STATE_SET "default" 0.0;
			transition: LINEAR 0.3;
			target: "base";
		}
	}
}

group { "elm/ctxpopup/base/default";
	images.image: "tooltip-base.png" COMP;
	images.image: "tooltip-base_SH.png" COMP;
	parts {
		part { "base"; clip: "clip";
			desc { "default"; color_class: "dialog_base";
				image.normal: "tooltip-base.png";
				image.border: 7 7 6 8;
				image.middle: SOLID;
			}
		}
		part { "base_SH"; clip: "clip"; nomouse;
		desc { "default";
			image.normal: "tooltip-base_SH.png";
			image.border: 7 7 6 8;
			image.middle: 0;
			STAY_ON("base")
		}
	}
		swallow { "elm.swallow.content"; clip: "clip";
			desc { "default";
				rel1 { to:"base"; offset: 8 6; }
				rel2 { to:"base"; offset: -7 -8; }
			}
		}
		rect { "event";
			desc { "default"; color: "#00000000"; vis; }
			desc { "visible"; inherit; hid; }
		}
		rect { "clip";
			desc { "default"; color: TRANSPARENT; hid;
				rel1.offset: -20 -20;
				rel2.offset: 19 19;
			}
			desc { "visible"; inherit; color: VISIBLE; vis; }
		}
		spacer { "arrow_area_left";
			desc { "default"; min: 9 13;
				fixed: 1 0;
				align: 1.0 0.5;
				rel1.to: "base";
				rel1.offset: 2 5;
				rel2.to: "base";
				rel2.offset: 2 -6;
				rel2.relative: 0.0 1.0;
			}
		}
		swallow { "elm.swallow.arrow_left";  clip: "clip"; nomouse;
			dragable.x: 1 1 0;
			dragable.y: 1 1 0;
			dragable.confine: "arrow_area_left";
			desc { "default"; min: 9 13;
				fixed: 1 1;
			}
		}
		spacer { "arrow_area_right";
			desc { "default"; min: 9 13;
				fixed: 1 0;
				align: 0.0 0.5;
				rel1.to: "base";
				rel1.offset: -3 5;
				rel1.relative: 1.0 0.0;
				rel2.to: "base";
				rel2.offset: -3 -6;
			}
		}
		swallow { "elm.swallow.arrow_right"; clip: "clip"; nomouse;
			dragable.x: 1 1 0;
			dragable.y: 1 1 0;
			dragable.confine: "arrow_area_right";
			desc { "default"; min: 9 13;
				fixed: 1 1;
			}
		}
		spacer { "arrow_area_up";
			desc { "default"; min: 11 9;
				fixed: 1 1;
				align: 0.5 1;
				rel1.to: "base";
				rel1.offset: 5 3;
				rel2.to: "base";
				rel2.offset: -6 3;
				rel2.relative: 1.0 0.0;
			}
		}
		swallow { "elm.swallow.arrow_up"; clip: "clip"; nomouse;
			dragable.x: 1 1 0;
			dragable.y: 1 1 0;
			dragable.confine: "arrow_area_up";
			desc { "default"; min: 11 9;
				fixed: 1 1;
			}
		}
		spacer { "arrow_area_down";
			desc { "default"; min: 11 9;
				fixed: 1 1;
				align: 0.5 0.0;
				rel1.to: "base";
				rel1.offset: 5 -4;
				rel1.relative: 0.0 1.0;
				rel2.to: "base";
				rel2.offset: -6 -4;
			}
		}
		swallow { "elm.swallow.arrow_down"; clip: "clip";  nomouse;
			dragable.x: 1 1 0;
			dragable.y: 1 1 0;
			dragable.confine: "arrow_area_down";
			desc { "default"; min: 11 9;
				fixed: 1 1;
			}
		}
	}

	programs {
		program {
			signal: "elm,state,show"; source: "elm";
			action: STATE_SET "visible" 0.0;
			transition: LINEAR 0.2;
			target: "clip";
			target: "event";
		}
		program {
			signal: "elm,state,hide"; source: "elm";
			action: STATE_SET "default" 0.0;
			transition: LINEAR 0.3;
			target: "clip";
			target: "event";
			after: "hide2";
		}
		program { "hide2";
			action: SIGNAL_EMIT "elm,action,hide,finished" "elm";
		}
	}
}

group { "elm/ctxpopup/arrow/default";
	images.image: "tooltip-edge-left-tip.png" COMP;
	images.image: "tooltip-edge-right-tip.png" COMP;
	images.image: "tooltip-edge-bottom-tip.png" COMP;
	images.image: "tooltip-edge-top-tip.png" COMP;
	images.image: "tooltip-edge-left-tip_SH.png" COMP;
	images.image: "tooltip-edge-right-tip_SH.png" COMP;
	images.image: "tooltip-edge-bottom-tip_SH.png" COMP;
	images.image: "tooltip-edge-top-tip_SH.png" COMP;

	parts {
		part { "base";
			desc { "default"; min: 9 9; color_class: "dialog_base";
				fixed: 1 1;
				image.normal: "tooltip-edge-left-tip.png";
			}
			desc { "left"; inherit; min: 9 13;
				align: 0.0 0.5;
				image.normal: "tooltip-edge-left-tip.png";
			}
			desc { "right"; inherit; min: 9 13;
				align: 1.0 0.5;
				image.normal: "tooltip-edge-right-tip.png";
			}
			desc { "top"; inherit; min: 11 9;
				align: 0.5 0.0;
				image.normal: "tooltip-edge-top-tip.png";
			}
			desc { "bottom"; inherit; min: 11 9;
				align: 0.5 1.0;
				image.normal: "tooltip-edge-bottom-tip.png";
			}
		}
		part { "base_SH";
			desc { "default"; min: 9 9;
				fixed: 1 1;
				STAY_ON("base")
				image.normal: "tooltip-edge-left-tip_SH.png";
			}
			desc { "left"; inherit; min: 9 13;
				align: 0.0 0.5;
				image.normal: "tooltip-edge-left-tip_SH.png";
			}
			desc { "right"; inherit; min: 9 13;
				align: 1.0 0.5;
				image.normal: "tooltip-edge-right-tip_SH.png";
			}
			desc { "top"; inherit; min: 11 9;
				align: 0.5 0.0;
				image.normal: "tooltip-edge-top-tip_SH.png";
			}
			desc { "bottom"; inherit; min: 11 9;
				align: 0.5 1.0;
				image.normal: "tooltip-edge-bottom-tip_SH.png";
			}
		}
	}

	programs {
		program {
			signal: "elm,state,left"; source: "elm";
			action: STATE_SET "left" 0.0;
			target: "base";
			target: "base_SH";
		}
		program {
			signal: "elm,state,right"; source: "elm";
			action: STATE_SET "right" 0.0;
			target: "base";
			target: "base_SH";
		}
		program {
			signal: "elm,state,top"; source: "elm";
			action: STATE_SET "top" 0.0;
			target: "base";
			target: "base_SH";
		}
		program {
			signal: "elm,state,bottom"; source: "elm";
			action: STATE_SET "bottom" 0.0;
			target: "base";
			target: "base_SH";
		}
	}
}
