#define PANEMIN  10
#define PANEMIN2 16
#define PANEWID  32

group { "elm/panes/vertical/default";
	images.image: "handleV.png" COMP;
	parts {
		spacer { "whole";
			desc { "default"; }
		}
		spacer { "right_constraint";
			dragable.confine: "whole";
			dragable.x: 1 1 1;
			dragable.y: 0 0 0;
			desc { "default"; max: 0 0; }
		}
		spacer { "left_constraint";
			dragable.confine: "whole";
			dragable.x: 1 1 1;
			dragable.y: 0 0 0;
			desc { "default"; max: 0 0; }
		}
		spacer { "sub_whole";
			desc { "default";
				rel1.relative: 1.0 0.0; rel1.to_x: "left_constraint";
				rel2.relative: 0.0 1.0; rel2.to_x: "right_constraint";
			}
		}
		rect { "whole_left";
			desc { "default";
				rel2.to_x: "elm.bar";
				rel2.relative: 1.0 1.0;
				rel2.offset: -4 -1;
			}
		}
		rect { "whole_right";
			desc { "default";
				rel1.to_x: "elm.bar";
				rel1.relative: 0.0 0.0;
				rel1.offset: 3 0;
			}
		}
		swallow { "elm.swallow.left"; clip: "whole_left";
			desc { "default";
				rel2.to_x: "elm.bar";
				rel2.relative: 1.0 1.0;
				rel2.offset: -4 -1;
			}
		}
		swallow { "elm.swallow.right"; clip: "whole_right";
			desc { "default";
				rel1.to_x: "elm.bar";
				rel1.relative: 0.0 0.0;
				rel1.offset: 3 0;
			}
		}
		spacer { "elm.bar";
			dragable.confine: "sub_whole";
			dragable.x: 1 1 1;
			dragable.y: 0 0 0;
			desc { "default"; max: 0 99999; min: 0 16;
				fixed: 1 1;
				rel1.relative: 0.0 0.5; rel2.relative: 1.0 0.5;
			}
		}
		part { "dots"; nomouse;
			desc { "default";
				image.normal: "handleV.png";
				rel1.to: "elm.bar";
				rel1.offset: 3 0;
				rel2.to: "elm.bar";
				FIXED_SIZE(8, 8)
			}
		}
		swallow { "elm.swallow.event";
			desc { "default"; min: PANEMIN PANEMIN2; hid;
				fixed: 1 1;
				rel1.to: "elm.bar"; rel2.to: "elm.bar";
			}
		}
		rect { "bar";
			dragable.events: "elm.bar";
			desc { "default"; min: PANEMIN PANEWID; max: 99999 99999; color: "#00000000";
				fixed: 1 1;
				rel1.to_x: "elm.swallow.event"; rel2.to_x: "elm.swallow.event";
			}
		}
	}

	programs {
		program {signal: "mouse,down,1"; source: "bar";
			action: SIGNAL_EMIT "elm,action,press" "elm";
		}
		program { signal: "mouse,up,1"; source: "bar";
			action: SIGNAL_EMIT "elm,action,unpress" "elm";
		}
		program { signal: "mouse,clicked,1"; source: "bar";
			action: SIGNAL_EMIT "elm,action,click" "elm";
		}
		program { signal: "mouse,down,1,double"; source: "bar";
			action: SIGNAL_EMIT "elm,action,click,double" "elm";
		}
	}
}

group { "elm/panes/horizontal/default";
	images.image: "handleH.png" COMP;

	parts {
		spacer { "whole";
			desc { "default"; }
		}
		spacer { "right_constraint";
			dragable.confine: "whole";
			dragable.x: 0 0 0;
			dragable.y: 1 1 1;
			desc { "default"; max: 0 0; }
		}
		spacer { "left_constraint";
			dragable.confine: "whole";
			dragable.x: 0 0 0;
			dragable.y: 1 1 1;
			desc { "default"; max: 0 0; }
		}
		spacer { "sub_whole";
			desc { "default";
				rel1.relative: 0.0 1.0; rel1.to_y: "left_constraint";
				rel2.relative: 1.0 0.0; rel2.to_y: "right_constraint";
			}
		}
		rect { "whole_left";
			desc { "default";
				rel2.to_y: "elm.bar";
				rel2.relative: 1.0 1.0;
				rel2.offset: -1 -4;
			}
		}
		rect { "whole_right";
			desc { "default";
				rel1.to_y: "elm.bar";
				rel1.relative: 0.0 0.0;
				rel1.offset: 0 3;
			}
		}
		swallow { "elm.swallow.left"; clip: "whole_left";
			desc { "default";
				rel2.to_y: "elm.bar";
				rel2.relative: 1.0 1.0;
				rel2.offset: -1 -4;
			}
		}
		swallow { "elm.swallow.right"; clip: "whole_right";
			desc { "default";
				rel1.to_y: "elm.bar";
				rel1.relative: 0.0 0.0;
				rel1.offset: 0 3;
			}
		}
		spacer { "elm.bar";
			dragable.confine: "sub_whole";
			dragable.x: 0 0 0;
			dragable.y: 1 1 1;
			desc { "default"; max: 99999 0; min: 16 0;
				fixed: 1 1;
				rel1.relative: 0.5 0.0; rel2.relative: 0.5 1.0;
			}
		}
		part { "dots"; nomouse;
			desc { "default";
				image.normal: "handleH.png";
				rel1.to: "elm.bar"; rel2.to: "elm.bar";
				FIXED_SIZE(8, 8)
			}
		}
		swallow { "elm.swallow.event";
			desc { "default"; min: PANEMIN2 PANEMIN; hid;
				fixed: 1 1;
				rel1.to: "elm.bar"; rel2.to: "elm.bar";
			}
		}
		rect { "bar";
			dragable.events: "elm.bar";
			desc { "default"; min: PANEWID PANEMIN; max: 99999 99999; color: "#00000000";
				fixed: 1 1;
				rel1.to_y: "elm.swallow.event"; rel2.to_y: "elm.swallow.event";
			}
		}
	}

	programs {
		program {signal: "mouse,down,1"; source: "bar";
			action: SIGNAL_EMIT "elm,action,press" "elm";
		}
		program { signal: "mouse,up,1"; source: "bar";
			action: SIGNAL_EMIT "elm,action,unpress" "elm";
		}
		program { signal: "mouse,clicked,1"; source: "bar";
			action: SIGNAL_EMIT "elm,action,click" "elm";
		}
		program { signal: "mouse,down,1,double"; source: "bar";
			action: SIGNAL_EMIT "elm,action,click,double" "elm";
		}
	}
}

group { "elm/panes/vertical/flush";
	images.image: "downlight_glow_left.png" COMP;
	images.image: "downlight_glow_right.png" COMP;

	parts {
		spacer { "whole";
			desc { "default"; }
		}
		spacer { "right_constraint";
			dragable.confine: "whole";
			dragable.x: 1 1 1;
			dragable.y: 0 0 0;
			desc { "default"; max: 0 0; }
		}
		spacer { "left_constraint";
			dragable.confine: "whole";
			dragable.x: 1 1 1;
			dragable.y: 0 0 0;
			desc { "default"; max: 0 0; }
		}
		spacer { "sub_whole";
			desc { "default";
				rel1.relative: 1.0 0.0; rel1.to_x: "left_constraint";
				rel2.relative: 0.0 1.0; rel2.to_x: "right_constraint";
			}
		}
		rect { "whole_left";
			desc { "default";
				rel2.to_x: "elm.bar";
				rel2.relative: 1.0 1.0;
			}
		}
		rect { "whole_right";
			desc { "default";
				rel1.to_x: "elm.bar";
				rel1.relative: 0.0 0.0;
			}
		}
		swallow { "elm.swallow.left"; clip: "whole_left";
			desc { "default";
				rel2.to_x: "elm.bar";
				rel2.relative: 1.0 1.0;
				fixed: 1 0;
			}
		}
		swallow { "elm.swallow.right"; clip: "whole_right";
			desc { "default";
				rel1.to_x: "elm.bar";
				rel1.relative: 0.0 0.0;
				fixed: 1 0;
			}
		}
		spacer { "elm.bar";
			dragable.confine: "sub_whole";
			dragable.x: 1 1 1;
			dragable.y: 0 0 0;
			desc { "default"; max: 0 99999; min: 0 14;
				fixed: 1 1;
				rel1.relative: 0.0 0.5; rel2.relative: 1.0 0.5;
			}
		}
		swallow { "elm.swallow.event";
			desc { "default"; min: PANEMIN PANEMIN2; hid;
				fixed: 1 1;
				rel1.to: "elm.bar"; rel2.to: "elm.bar";
			}
		}
		rect { "bar";
			dragable.events: "elm.bar";
			desc { "default"; min: PANEMIN PANEWID; max: 99999 99999; color: "#00000000";
				fixed: 1 1;
				rel1.to_x: "elm.swallow.event"; rel1.relative: 0.0 0.25;
				rel2.to_x: "elm.swallow.event"; rel2.relative: 1.0 0.75;
			}
		}
		part { "glow1a"; nomouse;
			desc { "default"; max: 32 99999; color: TRANSPARENT;
				color_class: "focus";
				image.normal: "downlight_glow_left.png";
				image.border: 0 3 0 0;
				rel2.to_x: "elm.bar";
				align: 1.0 0.5;
			}
			desc { "active"; inherit; color: VISIBLE; }
		}
		part { "glow1b"; nomouse;
			desc { "default"; max: 4 99999; color: TRANSPARENT; color_class: "focus";
				image.normal: "downlight_glow_right.png";
				rel1.to_x: "elm.bar";
				align: 0.0 0.5;
			}
			desc { "active"; inherit; color: VISIBLE; }
		}
		part { "glow2a"; nomouse;
			desc { "default"; max: 4 99999; color: TRANSPARENT; color_class: "focus";
				image.normal: "downlight_glow_left.png";
				rel2.to_x: "elm.bar";
				align: 1.0 0.5;
			}
			desc { "active"; inherit; color: VISIBLE; }
		}
		part { "glow2b"; nomouse;
			desc { "default"; max: 32 99999; color: TRANSPARENT; color_class: "focus";
				image.normal: "downlight_glow_right.png";
				image.border: 3 0 0 0;
				rel1.to_x: "elm.bar";
				align: 0.0 0.5;
			}
			desc { "active"; inherit; color: VISIBLE; }
		}
		rect { "bar1"; repeat;
			desc { "default"; color: "#00000000";
				fixed: 1 1;
				rel1.to: "bar";
				rel2.to: "bar";
				rel2.relative: 0.5 1.0;
			}
		}
		rect { "bar2"; repeat;
			desc { "default"; color: "#00000000";
				fixed: 1 1;
				rel1.to: "bar";
				rel1.relative: 0.5 0.0;
				rel2.to: "bar";
			}
		}
	}

	programs {
		program {signal: "mouse,down,1"; source: "bar";
			action: SIGNAL_EMIT "elm,action,press" "elm";
		}
		program { signal: "mouse,up,1"; source: "bar";
			action: SIGNAL_EMIT "elm,action,unpress" "elm";
		}
		program { signal: "mouse,clicked,1"; source: "bar";
			action: SIGNAL_EMIT "elm,action,click" "elm";
		}
		program { signal: "mouse,down,1,double"; source: "bar";
			action: SIGNAL_EMIT "elm,action,click,double" "elm";
		}
		program {
			signal: "mouse,in"; source: "bar1";
			action: STATE_SET "active" 0.0;
			transition: BOUNCE 0.4 0.5 4;
			target: "glow1a";
			target: "glow1b";
		}
		program {
			signal: "mouse,out"; source: "bar1";
			action: STATE_SET "default" 0.0;
			transition: DECELERATE 0.5;
			target: "glow1a";
			target: "glow1b";
		}
		program {
			signal: "mouse,in"; source: "bar2";
			action: STATE_SET "active" 0.0;
			transition: BOUNCE 0.4 0.5 4;
			target: "glow2a";
			target: "glow2b";
		}
		program {
			signal: "mouse,out"; source: "bar2";
			action: STATE_SET "default" 0.0;
			transition: DECELERATE 0.5;
			target: "glow2a";
			target: "glow2b";
		}
	}
}

group { "elm/panes/horizontal/flush";
	images.image: "downlight_glow.png" COMP;
	images.image: "downlight_glow_up.png" COMP;
	parts {
		spacer { "whole";
			desc { "default"; }
		}
		spacer { "right_constraint";
			dragable.confine: "whole";
			dragable.x: 0 0 0;
			dragable.y: 1 1 1;
			desc { "default"; max: 0 0; }
		}
		spacer { "left_constraint";
			dragable.confine: "whole";
			dragable.x: 0 0 0;
			dragable.y: 1 1 1;
			desc { "default"; max: 0 0; }
		}
		spacer { "sub_whole";
			desc { "default";
				rel1.relative: 0.0 1.0; rel1.to_y: "left_constraint";
				rel2.relative: 1.0 0.0; rel2.to_y: "right_constraint";
			}
		}
		rect { "whole_left";
			desc { "default";
				rel2.relative: 1.0 1.0; rel2.to_y: "elm.bar";
			}
		}
		rect { "whole_right";
			desc { "default";
				rel1.relative: 0.0 0.0; rel1.to_y: "elm.bar";
			}
		}
		swallow { "elm.swallow.left"; clip: "whole_left";
			desc { "default";
				rel2.relative: 1.0 1.0; rel2.to_y: "elm.bar";
				fixed: 0 1;
			}
		}
		swallow { "elm.swallow.right"; clip: "whole_right";
			desc { "default";
				rel1.relative: 0.0 0.0; rel1.to_y: "elm.bar";
				fixed: 0 1;
			}
		}
		spacer { "elm.bar";
			dragable.confine: "sub_whole";
			dragable.x: 0 0 0;
			dragable.y: 1 1 1;
			desc { "default"; max: 99999 0; min: 14 0;
				fixed: 1 1;
				rel1.relative: 0.5 0.0; rel2.relative: 0.5 1.0;
			}
		}
		swallow { "elm.swallow.event";
			desc { "default"; min: PANEMIN2 PANEMIN; hid;
				fixed: 1 1;
				rel1.to: "elm.bar"; rel2.to: "elm.bar";
			}
		}
		rect { "bar";
			dragable.events: "elm.bar";
			desc { "default"; min: PANEWID PANEMIN; max: 99999 99999; color: "#00000000";
				fixed: 1 1;
				rel1.to_y: "elm.swallow.event"; rel1.relative: 0.25 0.0;
				rel2.to_y: "elm.swallow.event"; rel2.relative: 0.75 1.0;
			}
		}
		part { "glow1a"; nomouse;
			desc { "default"; max: 99999 32; color_class: "focus"; color: TRANSPARENT;
				image.normal: "downlight_glow_up.png";
				image.border: 0 0 0 3;
				rel2.to_y: "elm.bar";
				align: 0.5 1.0;
			}
			desc { "active"; inherit; color: VISIBLE; }
		}
		part { "glow1b"; nomouse;
			desc { "default"; max: 99999 4; color: TRANSPARENT; color_class: "focus";
				image.normal: "downlight_glow.png";
				rel1.to_y: "elm.bar";
				align: 0.5 0.0;
			}
			desc { "active"; inherit; color: VISIBLE; }
		}
		part { "glow2a"; nomouse;
			desc { "default"; max: 99999 4; color: TRANSPARENT; color_class: "focus";
				image.normal: "downlight_glow_up.png";
				rel2.to_y: "elm.bar";
				align: 0.5 1.0;
			}
			desc { "active"; inherit; color: VISIBLE; }
		}
		part { "glow2b"; nomouse;
			desc { "default"; max: 99999 32; color: TRANSPARENT; color_class: "focus";
				image.normal: "downlight_glow.png";
				image.border: 0 0 3 0;
				rel1.to_y: "elm.bar";
				align: 0.5 0.0;
			}
			desc { "active"; inherit; color: VISIBLE; }
		}
		rect { "bar1"; repeat;
			desc { "default"; color: "#00000000";
				fixed: 1 1;
				rel1.to: "bar";
				rel2.to: "bar";
				rel2.relative: 1.0 0.5;
			}
		}
		rect { "bar2"; repeat;
			desc { "default"; color: "#00000000";
				fixed: 1 1;
				rel1.to: "bar";
				rel1.relative: 0.0 0.5;
				rel2.to: "bar";
			}
		}
	}

	programs {
		program {
			signal: "mouse,in"; source: "bar1";
			action: STATE_SET "active" 0.0;
			transition: BOUNCE 0.4 0.5 4;
			target: "glow1a";
			target: "glow1b";
		}
		program {
			signal: "mouse,out"; source: "bar1";
			action: STATE_SET "default" 0.0;
			transition: DECELERATE 0.5;
			target: "glow1a";
			target: "glow1b";
		}
		program {
			signal: "mouse,in"; source: "bar2";
			action: STATE_SET "active" 0.0;
			transition: BOUNCE 0.4 0.5 4;
			target: "glow2a";
			target: "glow2b";
		}
		program {
			signal: "mouse,out"; source: "bar2";
			action: STATE_SET "default" 0.0;
			transition: DECELERATE 0.5;
			target: "glow2a";
			target: "glow2b";
		}
		program {signal: "mouse,down,1"; source: "bar";
			action: SIGNAL_EMIT "elm,action,press" "elm";
		}
		program { signal: "mouse,up,1"; source: "bar";
			action: SIGNAL_EMIT "elm,action,unpress" "elm";
		}
		program { signal: "mouse,clicked,1"; source: "bar";
			action: SIGNAL_EMIT "elm,action,click" "elm";
		}
		program { signal: "mouse,down,1,double"; source: "bar";
			action: SIGNAL_EMIT "elm,action,click,double" "elm";
		}
	}
}
