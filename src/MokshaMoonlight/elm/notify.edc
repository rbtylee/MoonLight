group { "elm/notify/block_events/default";
	parts {
		rect { "block_events";
			desc { "default"; color: "#00000040"; }
		}
		program {
			signal: "mouse,clicked,1"; source: "block_events";
			action: SIGNAL_EMIT "elm,action,click" "elm";
		}
	}
}

group { "elm/notify/top/default";
	images.image: "popup.png" COMP;
	parts {
		rect { "clip";
			desc { "default"; color: TRANSPARENT; }
			desc { "visible"; inherit; color: VISIBLE; }
		}
		part { "base"; clip: "clip";
			desc { "default"; color: BACADA(TOOLTIP_OPACITY);
				image.normal: "popup.png";
				image.border: 10 10 10 10;
				rel1.offset: 10 10;
				rel2.offset: -10 -10;
				rel1.relative: 0.0 -1.0;
				rel2.relative: 1.0 0.0;
			}
			desc { "visible"; inherit;
				rel1.relative: 0.0 0.0;
				rel2.relative: 1.0 1.0;
			}
		}
		swallow { "elm.swallow.content"; clip: "clip";
			desc { "default";
				rel1.to: "base";
				rel1.offset: 12 12;
				rel2.to: "base";
				rel2.offset: -13 -13;
			}
		}
	}
	programs {
		program {
			signal: "show"; source: "";
			action: STATE_SET "visible" 0.0;
			target: "clip";
			target: "base";
			transition: DECELERATE 0.5;
		}
		program {
			signal: "hide"; source: "";
			action: STATE_SET "default" 0.0;
			target: "clip";
			target: "base";
		}
		program {
			signal: "elm,hide"; source: "elm";
			action: STATE_SET "default" 0.0;
			target: "clip";
			target: "base";
			transition: DECELERATE 0.5;
		}
	}
}

group { "elm/notify/bottom/default";
	inherit: "elm/notify/top/default";
	parts {
		part { "base";
			desc { "default";
				rel1.offset: 10 10;
				rel2.offset: -10 -10;
				rel1.relative: 0.0 1.0;
				rel2.relative: 1.0 2.0;
			}
		}
	}
}

group { "elm/notify/left/default";
	inherit: "elm/notify/top/default";
	parts {
		part { "base";
			desc { "default";
				rel1.offset: 10 10;
				rel2.offset: -10 -10;
				rel1.relative: -1.0 0.0;
				rel2.relative: 0.0 1.0;
			}
		}
	}
}

group { "elm/notify/right/default";
	inherit: "elm/notify/top/default";
	parts {
		part { "base";
			desc { "default";
				rel1.offset: 10 10;
				rel2.offset: -10 -10;
				rel1.relative: 1.0 0.0;
				rel2.relative: 2.0 1.0;
			}
		}
	}
}

group { "elm/notify/top_left/default";
	inherit: "elm/notify/top/default";
	parts {
		part { "base";
			desc { "default";
				rel1.offset: 10 10;
				rel2.offset: -10 -10;
				rel1.relative: 0.0 -1.0;
				rel2.relative: 1.0 0.0;
			}
		}
	}
}

group { "elm/notify/top_right/default";
	inherit: "elm/notify/top/default";
	parts {
		part { "base";
			desc { "default";
				rel1.offset: 10 10;
				rel2.offset: -10 -10;
				rel1.relative: 0.0 -1.0;
				rel2.relative: 1.0 0.0;
			}
		}
	}
}

group { "elm/notify/bottom_left/default";
	inherit: "elm/notify/top/default";
	parts {
		part { "base";
			desc { "default";
				rel1.offset: 10 10;
				rel2.offset: -10 -10;
				rel1.relative: 0.0 1.0;
				rel2.relative: 1.0 2.0;
			}
		}
	}
}

group { "elm/notify/bottom_right/default";
	inherit: "elm/notify/top/default";
	parts {
		part { "base";
			desc { "default";
				rel1.offset: 10 10;
				rel2.offset: -10 -10;
				rel1.relative: 0.0 1.0;
				rel2.relative: 1.0 2.0;
			}
		}
	}
}

group { "elm/notify/center/default";
	inherit: "elm/notify/top/default";
	parts {
		part { "base";
			desc { "default";
				rel1.offset: 10 10;
				rel2.offset: -10 -10;
				rel1.relative: 0.0 0.0;
				rel2.relative: 1.0 1.0;
			}
		}
	}
}
