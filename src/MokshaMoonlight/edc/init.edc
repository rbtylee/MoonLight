/*** INIT SPLASH ***/
/* this first group is used for the primary screen (or only screen) so in
		* a multi-monitor setup whichever is first (screen 0) will get this
		* splash on it */
group {
	name: "e/init/splash";
	/* images used */
	images {
		image: "wp_bg.png" COMP;
		image: "wp_moon.png" COMP;
		image: "wp_plants_under.png" COMP;
		image: "wp_plants_middle.png" COMP;
		image: "wp_plants_top.png" COMP;
		image: "init_check1.png" COMP;
		image: "init_check2.png" COMP;
	}
	script {
		public is_ready;
		public do_end;
	}
	parts {
		/* splash is fullscreen so we want a background of some sort. we have
		 * taken the default desktop wallpaper here as it should look nice */
		part { name: "background";
			description { state: "default" 0.0;
				image.normal: "wp_bg.png";
			}
		}
		part { name: "background_moon";
			description { state: "default" 0.0;
				aspect: 1 1;
				aspect_preference: HORIZONTAL;
				image.normal: "wp_moon.png";
				rel1.to: "background";
				rel2.to: "background";
				rel1.relative: 0.0 0.0;
				rel2.relative: 0.45 0.60;
				color: 255 255 255 0;
			}
			description { state: "done" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 255;
			}
		}
		part { name: "background_plants_bottom";
			description { state: "default" 0.0;
				image.normal: "wp_plants_under.png";
				rel1.to: "background";
				rel2.to: "background";
			}
		}
		part { name: "background_plants_mid";
			description { state: "default" 0.0;
				image.normal: "wp_plants_middle.png";
				rel1.to: "background";
				rel2.to: "background";
			}
		}
		part { name: "background_plants_top";
			description { state: "default" 0.0;
				image.normal: "wp_plants_top.png";
				rel1.to: "background";
				rel2.to: "background";
			}
		}
		part { name: "background_bottom";
			type: RECT;
			description { state: "default" 0.0;
				rel1.to: "background";
				rel1.relative: 0.0 0.42;
				color: 255 255 255 0;
			}
		}
		part {
			name: "e.text.version";
			type: TEXT;
			effect: SOFT_SHADOW;
			description {
				state: "default" 0.0;
				align: 1.0 1.0;
				rel1 {
					relative: 1.0 1.0;
					offset:	-2  -2;
				}
				rel2 {
					relative: 1.0 1.0;
					offset:	-2  -2;
				}
				color: 255 255 255 255;
				color3: 0 0 0 32;
				text {
					text: "0.17.0";
					font: "Sans";
					size: 8;
					min:  1 1;
					align: 0.0 0.0;
					text_class: "init_version";
				}
			}
		}
		part {
			name: "e.text.status";
			type: TEXT;
			effect: SOFT_SHADOW;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				align: 0.5 0.0;
				rel1 {
					to: "background_bottom";
				}
				rel2 {
					to: "background_bottom";
				}
				color: 255 255 255 255;
				color3: 0 0 0 32;
				text {
					text: "Starting Enlightenment. Please wait.";
					font: "Sans:style=Bold";
					size: 10;
					min:  1 1;
					align: 0.5 0.5;
					text_class: "init_text";
				}
			}
		}
		part {
			name: "e.text.disable_text";
			type: TEXT;
			effect: SOFT_SHADOW;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				align: 0.0 0.0;
				rel1 {
					relative: 0.0 0.0;
					offset:	8	8;
				}
				rel2 {
					relative: 0.0 0.0;
					offset:	8	8;
				}
				color: 255 255 255 255;
				color3: 0 0 0 32;
				text {
					text: "Disable this splash screen in future.";
					font: "Sans";
					size: 10;
					min:	1 1;
					align: 0.0 0.0;
					text_class: "init_text";
				}
			}
		}
		part {
			name: "disable_check";
			mouse_events: 0;
			description {
				state: "default" 0.0;
				min: 20 20;
				max: 20 20;
				align: 0.0 0.5;
				rel1 {
					relative: 1.0 0.0;
					offset:	0 0;
					to: "e.text.disable_text";
				}
				rel2 {
					relative: 1.0 1.0;
					offset:	0  -1;
					to: "e.text.disable_text";
				}
				image {
					normal: "init_check1.png";
				}
			}
			description {
				state: "active" 0.0;
				inherit: "default" 0.0;
				image {
					normal: "init_check2.png";
				}
			}
		}
		part {
			name: "enable_event";
			type: RECT;
			description {
				state: "default" 0.0;
				visible: 0;
				color: 0 0 0 0;
				rel1 {
					to: "e.text.disable_text";
					relative: 0.0 0.0;
					offset:	-5 -5;
				}
				rel2 {
					to: "disable_check";
					relative: 1.0 1.0;
					offset:	4 4;
				}
			}
			description {
				state: "active" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}
		part {
			name: "disable_event";
			type: RECT;
			description {
				state: "default" 0.0;
				visible: 1;
				color: 0 0 0 0;
				rel1 {
					to: "e.text.disable_text";
					relative: 0.0 0.0;
					offset:	-5 -5;
				}
				rel2 {
					to: "disable_check";
					relative: 1.0 1.0;
					offset:	4 4;
				}
			}
			description {
				state: "active" 0.0;
				inherit: "default" 0.0;
				visible: 0;
			}
		}
	}
	programs {
		program {
			name: "init";
			signal: "load";
			source: "";
			script {
				set_int(is_ready, 1);
				set_int(do_end, 0);
			}
		}
		program {
			name: "ready";
			script {
				new val;

				val = get_int(do_end);
				if (val == 1)
			run_program(PROGRAM:"done2");
				else
			set_int(is_ready, 1);
			}
		}
		program {
			name: "done1"; /* when e tells the splash screen it is done
					* starting up, the init splash gets this signal */
			signal: "e,state,done";
			source: "e";
			script {
				new val;

				val = get_int(is_ready);
				if (val == 1)
			run_program(PROGRAM:"done2");
				else
			set_int(do_end, 1);
			}
		}
		program {
			name: "done2";
			action: STATE_SET "done" 0.0;
			transition: ACCELERATE 1.0;
			target: "background_moon";
			after: "done3";
		}
		program {
			name: "done3"; /* at the end signal back to e we are done shutting
					* down the splash ans all animations are done */
			action: SIGNAL_EMIT "e,state,done_ok" "e";
		}
		/* handle a mouse down (click) event on the disable splash check
		 * event area (covering both label and checkbox) */
		program {
			name: "disable_down"; /* name of program */
			signal: "mouse,down,1"; /* signal that triggers it */
			source: "disable_event"; /* source of the signal */
			action: STATE_SET "active" 0.0; /* set state to active */
			target: "disable_check"; /* these are the thngs to set to active */
			target: "disable_event";
			target: "enable_event";
			after: "disable_on"; /* and after that is done run the disable_on
							* program to tell e about this */
		}
		program {
			name: "enable_down";
			signal: "mouse,down,1";
			source: "enable_event";
			action: STATE_SET "default" 0.0;
			target: "disable_check";
			target: "disable_event";
			target: "enable_event";
			after: "disable_off";
		}
		/* when a user toggles the checkbox - these programs signal back to
		 * e to enable or disable the splash */
		program {
			name: "disable_on";
			action: SIGNAL_EMIT "e,action,init,disable" "e";
		}
		program {
			name: "disable_off";
			action: SIGNAL_EMIT "e,action,init,enable" "e";
		}
	}
}
/* this group is used for other screens/xinerama zones etc. other than
		* the primary as only the primary shows the full splash - this just
		* shows the below image. it can animate etc. but not display status
		* etc. */
group {
	name: "e/init/extra_screen";
	parts {
		part { name: "background";
			description { state: "default" 0.0;
				image.normal: "wp_bg.png";
			}
		}
		part { name: "background_plants_bottom";
			description { state: "default" 0.0;
				image.normal: "wp_plants_under.png";
				rel1.to: "background";
				rel2.to: "background";
			}
		}
		part { name: "background_plants_mid";
			description { state: "default" 0.0;
				image.normal: "wp_plants_middle.png";
				rel1.to: "background";
				rel2.to: "background";
			}
		}
		part { name: "background_plants_top";
			description { state: "default" 0.0;
				image.normal: "wp_plants_top.png";
				rel1.to: "background";
				rel2.to: "background";
			}
		}
	}
}
