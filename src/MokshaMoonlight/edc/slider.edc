group { "e/widgets/slider_vertical";
	images.image: "slider.png" COMP;
	images.image: "slider_clicked.png" COMP;
	images.image: "slider_runnerv.png" COMP;
	images.image: "entry.png" COMP;
	parts {
		rect { "base"; mouse;
			desc { "default"; min: 22 0; color: 0 0 0 0;
				rel1.offset: 2 2;
				rel2.offset: -3 -3;
			}
			desc { "active"; inherit;
				rel2.to_y: "label";
				rel2.relative: 1.0 0.0;
				rel2.offset: -3 -1;
			}
		}
		part { "runner"; nomouse; clip: "clip";
			desc { "default"; max: 12 99999;
				rel1.to: "base";
				rel2.to: "base";
				image.normal: "slider_runnerv.png";
				image.border: 4 4 4 4;
				fill.smooth: 0;
			}
		}
		rect { "label_base"; clip: "clip";
			desc { "default"; color: 255 255 255 255; hid;
				rel1.to: "label";
				rel1.offset: 1 1;
				rel2.to: "label";
				rel2.offset: -2 -2;
			}
			desc { "active"; inherit; vis; }
		}
		part { "label"; nomouse; clip: "clip";
			desc { "default"; hid; }
			desc { "active";
				rel1.to: "e.text.label";
				rel1.offset: -4 -2;
				rel2.to: "e.text.label";
				rel2.offset: 3 1;
				image.normal: "entry.png";
				image.border: 7 7 7 7;
				image.middle: 0;
				fill.smooth : 0;
			}
		}
		text { "e.text.label"; nomouse; clip: "clip"; scale;
			desc { "default"; hid; }
			desc { "active"; color: 0 0 0 255; color_class: "slider_text";
				align: 0.5 1.0;
				fixed: 1 1;
				rel1.relative: 0.0 1.0;
				rel1.offset: 7 8;
				rel2.relative: 1.0 1.0;
				rel2.offset: -8 -8;
				text.text: "0.0";
				text.font: "Sans"; text.size: 10;
				text.min: 1 1;
				text.align: 0.5 0.5;
				text.ellipsis: -1;
				text.text_class: "slider";
			}
		}
		rect { "sld_p1"; mouse;
			desc { "default"; color: 0 0 0 0;
				rel2.relative: 1.0 0.0;
				rel2.to: "e.dragable.slider";
			}
		}
		rect { "sld_p2"; mouse;
			desc { "default"; color: 0 0 0 0;
				rel1.relative: 0.0 1.0;
				rel1.to: "e.dragable.slider";
			}
		}

		swallow { "e.swallow.bar";
			desc { "default";
				rel1.to_x: "e.dragable.slider";
				rel1.to_y: "base";
				rel1.offset: 0 5;
				rel2.to_x: "e.dragable.slider";
				rel2.to_y: "base";
				rel2.offset: -1 -6;
			}
		}
		rect { "e.dragable.slider"; mouse; scale;
			dragable.x: 0 0 0;
			dragable.y: -1 1 0;
			dragable.confine: "base";
			desc { "default"; min: 11 11;	 color: 0 0 0 0;
				fixed: 1 1;
				rel1.relative: 0.5 0.5;
				rel1.offset: 0 0;
				rel1.to: "base";
				rel2.relative: 0.5 0.5;
				rel2.offset: 0 0;
				rel2.to: "base";
			}
		}
		part { "button"; nomouse; scale;
			desc { "default"; min: 9 9; max: 9 9;
				fixed: 1 1;
				rel1.to: "e.dragable.slider";
				rel1.offset: -1 0;
				rel2.to: "e.dragable.slider";
				image.normal: "slider.png";
				fill.smooth: 0;
			}
			desc { "clicked"; inherit;
				image.normal: "slider_clicked.png";
			}
		}
		rect { "clip";
			desc { "default"; color: 255 255 255 255; }
			desc { "disabled"; inherit; color: 255 255 255 128; }
		}
		rect { "event"; mouse;
			desc { "default"; color: 0 0 0 0; hid; }
			desc { "disabled"; inherit; vis; }
		}
	}

	programs {
		program { name: "sld_p1_down";
			signal: "mouse,down,1";
			source: "sld_p1";
			action: DRAG_VAL_PAGE 0.0 -1.0;
			target: "e.dragable.slider";
		}
		program { name: "sld_p2_down";
			signal: "mouse,down,1";
			source: "sld_p2";
			action: DRAG_VAL_PAGE  0.0 1.0;
			target: "e.dragable.slider";
		}
		program { name: "button_down";
			signal: "mouse,down,1";
			source: "e.dragable.slider";
			action: STATE_SET "clicked" 0.0;
			target: "button";
		}
		program { name: "button_up";
			signal: "mouse,up,1";
			source: "e.dragable.slider";
			action: STATE_SET "default" 0.0;
			target: "button";
		}
		program { name: "show_label";
			signal: "e,action,show,label";
			source: "e";
			action: STATE_SET "active" 0.0;
			target: "base";
			target: "label";
			target: "label_base";
			target: "e.text.label";
		}
		program { name: "hide_label";
			signal: "e,action,hide,label";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "base";
			target: "label";
			target: "label_base";
			target: "e.text.label";
		}
		program { name: "disable";
			signal: "e,state,disabled";
			source: "e";
			action: STATE_SET "disabled" 0.0;
			target: "clip";
			target: "event";
		}
		program { name: "enable";
			signal: "e,state,enabled";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "clip";
			target: "event";
		}
	}
}

group { "e/widgets/slider_horizontal";
	images.image: "slider.png" COMP;
	images.image: "slider_clicked.png" COMP;
	images.image: "slider_runnerh.png" COMP;
	images.image: "entry.png" COMP;
	parts {
		rect { "base"; mouse;
			desc { "default"; min: 0 22; color: 0 0 0 0;
				rel1.offset: 15 2;
				rel2.offset: -3 -3;
			}
			desc { "active"; inherit;
				rel2.to_x: "label";
				rel2.relative: 0.0 1.0;
				rel2.offset: -1 -3;
			}
		}
		part { "runner"; nomouse; clip: "clip";
			desc { "default"; max: 99999 12;
				rel1.to: "base";
				rel2.to: "base";
				image.normal: "slider_runnerh.png";
				image.border: 4 4 4 4;
				fill.smooth: 0;
			}
		}
		rect { "label_base"; clip: "clip";
			desc { "default"; hid;
				color: 255 255 255 255;
				rel1.to: "label";
				rel1.offset: 1 1;
				rel2.to: "label";
				rel2.offset: -2 -2;
			}
			desc { "active"; inherit; vis; }
		}
		part { "label"; nomouse; clip: "clip";
			desc { "default"; hid; }
			desc { "active"; min: 20 0;
				rel1.to: "e.text.label";
				rel1.offset: -4 -2;
				rel2.to: 	"e.text.label";
				rel2.offset: 2 1;
				image.normal: "entry.png";
				image.border: 7 7 7 7;
				image.middle: 0;
				fill.smooth : 0;
			}
		}
		text { "e.text.label"; nomouse; clip: "clip"; scale;
			desc { "default"; hid; }
			desc { "active"; color: 0 0 0 255; color_class: "slider_text";
				align: 1.0 0.5;
				fixed: 1 0;
				rel1.relative: 1.0 0.0;
				rel1.offset: -8 7;
				rel2.relative: 1.0 1.0;
				rel2.offset: -8 -8;
				text.text: "0.0";
				text.font: "Sans"; text.size: 10;
				text.min: 1 1;
				text.ellipsis:  -1;
				text.align: 0.5 0.5;
				text.text_class: "slider";
			}
		}
		rect { "sld_p1"; mouse;
			desc { "default"; color: 0 0 0 0;
				rel2.relative: 0.0 1.0;
				rel2.to: "e.dragable.slider";
			}
		}
		rect { "sld_p2"; mouse;
			desc { "default"; color: 0 0 0 0;
				rel1.relative: 1.0 0.0;
				rel1.to: "e.dragable.slider";
			}
		}
		swallow { "e.swallow.bar";
			desc { "default";
				rel1.to_x: "base";
				rel1.to_y: "e.dragable.slider";
				rel1.offset: 5 0;
				rel2.to_x: "base";
				rel2.to_y: "e.dragable.slider";
				rel2.offset: -6 -1;
			}
		}
		rect { "e.dragable.slider"; mouse; scale;
			dragable.x: 1 1 0;
			dragable.y: 0 0 0;
			dragable.confine: "base";
			desc { "default"; min: 11 11;	 color: 0 0 0 0;
				fixed: 1 1;
				rel1.relative: 0.5 0.5;
				rel1.to: "base";
				rel2.relative: 0.5 0.5;
				rel2.offset: 0 0;
				rel2.to: "base";
			}
		}
		part { "slider"; nomouse; clip: "clip"; scale;
			desc { "default"; min: 9 9; max: 9 9;
				fixed: 1 1;
				rel1.to: "e.dragable.slider";
				rel1.offset: 0 1;
				rel2.to: "e.dragable.slider";
				image.normal: "slider.png";
				fill.smooth: 0;
			}
			desc { "clicked"; inherit;
				image.normal: "slider_clicked.png";
			}
		}
		rect { "clip";
			desc { "default"; }
			desc { "disabled"; inherit; color: 255 255 255 128; }
		}
		rect { "event"; mouse;
			desc { "default"; color: 0 0 0 0; hid; }
			desc { "disabled"; inherit; vis; }
		}
	}

	programs {
		program { name: "sld_p1_down";
			signal: "mouse,down,1";
			source: "sld_p1";
			action: DRAG_VAL_PAGE -1.0 0.0;
			target: "e.dragable.slider";
		}
		program { name: "sld_p2_down";
			signal: "mouse,down,1";
			source: "sld_p2";
			action: DRAG_VAL_PAGE  1.0 0.0;
			target: "e.dragable.slider";
		}
		program { name: "sld_down";
			signal: "mouse,down,1";
			source: "e.dragable.slider";
			action: STATE_SET "clicked" 0.0;
			target: "slider";
		}
		program { name: "sld_up";
			signal: "mouse,up,1";
			source: "e.dragable.slider";
			action: STATE_SET "default" 0.0;
			target: "slider";
		}
		program { name: "show_label";
			signal: "e,action,show,label";
			source: "e";
			action: STATE_SET "active" 0.0;
			target: "base";
			target: "label";
			target: "label_base";
			target: "e.text.label";
		}
		program { name: "hide_label";
			signal: "e,action,hide,label";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "base";
			target: "label";
			target: "label_base";
			target: "e.text.label";
		}
		program { name: "disable";
			signal: "e,state,disabled";
			source: "e";
			action: STATE_SET "disabled" 0.0;
			target: "clip";
			target: "event";
		}
		program { name: "enable";
			signal: "e,state,enabled";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "clip";
			target: "event";
		}
	}
}
