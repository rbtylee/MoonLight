group { "e/widgets/toolbar";
	images.image: "button-insensitive.png" COMP;
	images.image: "icon_left_arrow.png" COMP;
	images.image: "icon_right_arrow.png" COMP;
	parts {
		part { "base"; mouse;
			desc { "default";
				rel1.relative: 0.0 0.0;
				rel1.offset: 2 2;
				rel2.offset: -3 -3;
				image.normal: "button-insensitive.png";
				image.border: 4 4 4 4;
				fill.smooth: 0;
			}
		}
		rect { "clipper"; nomouse;
			desc { "default";
				rel1.to: "base";
				rel1.offset: 2 2;
				rel2.to: "base";
				rel2.offset: -3 -3;
			}
		}
		swallow { "e.swallow.content"; clip: "clipper";
			desc { "default";
				rel1.to: "clipper";
				rel2.to: "clipper";
			}
		}
		part { "left_arrow"; mouse; scale;
			desc { "default"; min: 32 32; max: 32 32;
				image.normal: "icon_left_arrow.png";
				aspect: 1.0 1.0;
				aspect_preference: VERTICAL;
				align: 0.0 0.5;
			}
			desc { "hidden"; inherit; color: TRANSPARENT; hid; }
			desc { "clicked"; inherit; color: VISIBLE; hid; }
		}
		part { "right_arrow"; mouse; scale;
			desc { "default"; min: 32 32; max: 32 32;
				image.normal: "icon_right_arrow.png";
				aspect: 1.0 1.0;
				aspect_preference: VERTICAL;
				align: 1.0 0.5;
			}
			desc { "hidden"; inherit; color: TRANSPARENT; hid; }
			desc { "clicked"; inherit; color: VISIBLE; hid; }
		}
		part { "e.dragable.hbar"; nomouse;
			dragable.x: 1 1 0;
			dragable.y: 0 0 0;
			dragable.confine: "base";
			desc { "default"; hid;
				rel1.to: "base";
				rel2.to: "base";
			}
		}
		rect { "event"; mouse; repeat;
			desc { "default"; color: "#00000000"; }
		}
	}

	programs {
		program { "sb_hbar_show";
			signal: "e,action,show,hbar";
			source: "e";
			action: STATE_SET "default" 0.0;
			transition: LINEAR 0.5;
			target: "left_arrow";
			target: "right_arrow";
		}
		program { "sb_hbar_hide";
			signal: "e,action,hide,hbar";
			source: "e";
			action: STATE_SET "hidden" 0.0;
			target: "left_arrow";
			target: "right_arrow";
			transition: LINEAR 0.5;
		}
		program { "sb_left";
			signal: "mouse,down,1";
			source: "left_arrow";
			action: SIGNAL_EMIT "e,action,prev" "e";
			target: "e.dragable.hbar";
			after: "arrow1_repeat";
		}
		program { "arrow1_repeat";
			action: SIGNAL_EMIT "e,action,prev" "e";
			in: 0.3 0.0;
			after: "arrow1_repeat";
		}
		program {
			signal: "mouse,up,1"; source: "left_arrow";
			action: ACTION_STOP;
			target: "arrow1_repeat";
		} 
		program {
			signal: "mouse,down,1*"; source: "left_arrow";
			action: STATE_SET "clicked" 0.0;
			target: "left_arrow";
		}
		program {
			signal: "mouse,up,1"; source: "left_arrow";
			action: STATE_SET "default" 0.0;
			target: "left_arrow";
		}
		
		program { "sb_right";
			signal: "mouse,down,1";
			source: "right_arrow";
			action: SIGNAL_EMIT "e,action,next" "e";
			target: "e.dragable.hbar";
			after: "arrow2_repeat";
		}
		program { "arrow2_repeat";
			action: SIGNAL_EMIT "e,action,next" "e";
			in: 0.3 0.0;
			after: "arrow2_repeat";
		}
		program {
			signal: "mouse,up,1"; source: "right_arrow";
			action: ACTION_STOP;
			target: "arrow2_repeat";
		} 
		program {
			signal: "mouse,down,1*"; source: "right_arrow";
			action: STATE_SET "clicked" 0.0;
			target: "right_arrow";
		}
		program {
			signal: "mouse,up,1"; source: "right_arrow";
			action: STATE_SET "default" 0.0;
			target: "right_arrow";
		}
		
	}
}

group { "e/widgets/toolbar/item";
	images.image: "toolbar_sel.png" COMP;
	parts {
		text { "label2"; nomouse; scale;
			desc { "default"; color: "#000000FF";
				align: 0.5 1.0;
				fixed: 0 1;
				rel1.to: "e.text.label";
				rel2.to: "e.text.label";
				text.font: "Sans"; text.size: 10;
				text.text_source: "e.text.label";
				text.min: 1 1;
				text.align: 0.5 0.5;
				text.text_class: "fileman_icon";
			}
			desc { "selected"; inherit; hid; }
		}
		part { "bg"; nomouse;
			desc { "default"; color: TRANSPARENT; hid;
				image.normal: "toolbar_sel.png";
				image.border: 3 3 0 0;
				fill.smooth: 0;
			}
			desc { "selected"; inherit; vis; color: VISIBLE; }
		}
		swallow { "e.swallow.icon";
			desc { "default"; color: "#00000000";
				align: 0.5 0.5;
				aspect: 1.0 1.0;
				aspect_preference: VERTICAL;
				rel1.relative: 0.0 0.0;
				rel1.offset: 2 2;
				rel2.to_y: "e.text.label";
				rel2.relative: 1.0 0.0;
				rel2.offset: -3 -1;
			}
		}
		text { "e.text.label"; effect: SOFT_SHADOW; nomouse; scale;
			desc { "default"; color: "#E0E0E0"; hid;
				color3: "#00000020";
				align: 0.5 1.0;
				fixed: 0 1;
				rel1.relative: 0.0 1.0;
				rel1.offset: 0 -1;
				rel2.relative: 1.0 1.0;
				rel2.offset: -1 -1;
				text.font: "Sans:style=Bold"; text.size: 10;
				text.min: 1 1;
				text.align: 0.5 0.5;
				text.text_class: "fileman_icon";
			}
			desc { "selected"; inherit; vis; }
		}
		rect { "event"; mouse; ignore: ON_HOLD;
			desc { "default"; color: "#00000000"; }
		}
	}

	programs {
		program { "go_active";
			signal: "e,state,selected";
			source: "e";
			action: STATE_SET "selected" 0.0;
			target: "bg";
			target: "e.text.label";
			target: "label2";
			transition: LINEAR 0.2;
		}
		program { "go_passive";
			signal: "e,state,unselected";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "bg";
			target: "e.text.label";
			target: "label2";
			transition: LINEAR 0.1;
		}
		program { "go";
			signal: "mouse,up,1";
			source: "event";
			action: SIGNAL_EMIT "e,action,click" "e";
		}
	}
}
