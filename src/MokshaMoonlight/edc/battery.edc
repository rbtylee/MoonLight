group { "e/modules/battery/main";
	images.image: "bat_shadow.png" COMP;
	images.image: "bat_base.png" COMP;
	images.image: "bat_shine.png" COMP;
	images.image: "bat_bottom0.png" COMP;
	images.image: "bat_bottom1.png" COMP;
	images.image: "bat_top0.png" COMP;
	images.image: "bat_top1.png" COMP;
	images.image: "glow_med_white.png" COMP;
	min: 16 16;
	max: 160 160;
	script {
		public message(Msg_Type:type, id, ...) {
			if ((type == MSG_FLOAT) && (id == 1)) {
				new Float:val;
				new r = 178, g = 178, b = 178;
				new lr = 255, lg = 0, lb = 0;

				val = getfarg(2);
				if (val < 0.35) {
					new Float:val1, Float:val2;

					val1 = (val - 0.10) / 0.25;
					val2 = 1.0 - val1;
					r = round((r * val1) + (lr * val2), ROUND);
					g = round((g * val1) + (lg * val2), ROUND);
					b = round((b * val1) + (lb * val2), ROUND);
				}
				custom_state(PART:"fill", "default", 0.0);
				set_state_val(PART:"fill", STATE_COLOR, r, g, b, 255);
				set_state_val(PART:"fill", STATE_COLOR, r, g, b, 255);
				set_state_val(PART:"fill", STATE_COLOR, r, g, b, 255);
				set_state_val(PART:"fill", STATE_REL1, 0.0, 1.0 - val);
				set_state(PART:"fill", "custom", 0.0);
			}
		}
	}
	parts {
		rect { "fade_clip";
			desc { "default"; color: "#FFFFFF"; }
			desc { "faded" 0.0; color: "#808080"; }
		}
		rect { "info_clip"; clip: "fade_clip";
			desc { "default"; color: "#FFFFFF00"; }
			desc { "visible"; color: "#FFFFFF"; }
		}
		rect { "pulse_clip"; clip: "fade_clip";
			desc { "default"; color: "#FFFFFF"; }
			desc { "faded" 1.0; color: "#FFFFFF"; }
			desc { "faded" 0.0; color: "#FFFFFF40"; }
		}
		spacer { "fill_region";
			desc { "default";
				rel1.to: "bg";
				rel2.to: "bg";
			}
		}
		spacer { "pwr";
			desc { "default"; min: 5 5;
				rel1.to: "bg";
				rel1.relative: 0.40 0.40;
				rel2.to: "bg";
				rel2.relative: 0.60 0.60;
				aspect: 1.0 1.0; aspect_preference: BOTH;
				step: 5 5;
			}
		}
		spacer { "base";
			desc { "default";
				aspect: 1.0 1.0; aspect_preference: BOTH;
			}
		}
		part { "shadow"; clip: "pulse_clip";
			desc { "default";
				rel1.to: "base";
				rel1.relative: (15/160) (15/160);
				rel2.to: "base";
				rel2.relative: (145/160) (160/160);
				image.normal: "bat_shadow.png";
			}
		}
		part { "bg"; clip: "pulse_clip";
			desc { "default";
				rel1.to: "top";
				rel1.relative: 0.0 1.0;
				rel2.to: "bottom";
				rel2.relative: 1.0 0.0;
				image.normal: "bat_base.png";
				fill.smooth: 0;
			}
		}
		part { "top"; clip: "pulse_clip";
			desc { "default";
				rel1.to: "base";
				rel1.relative: (24/160) (16/160);
				rel2.to: "base";
				rel2.relative: (136/160) (40/160);
				image.normal: "bat_top0.png";
			}
		}
		part { "bottom"; clip: "pulse_clip";
			desc { "default";
				rel1.to: "base";
				rel1.relative: (24/160) (132/160);
				rel2.to: "base";
				rel2.relative: (136/160) (144/160);
				image.normal: "bat_bottom0.png";
			}
		}
		part { "fill"; nomouse; clip: "pulse_clip";
			desc { "default"; color: "#FFFFFF"; color_class: "focus";
				rel1.to: "fill_region";
				rel1.offset: -5 -5;
				rel2.to: "fill_region";
				rel2.offset: 4 4;
				image.normal: "glow_med_white.png";
				image.border: 10 10 10 10;
			}
		}
		part { "top-shine"; clip: "pulse_clip";
			desc { "default";
				rel1.to: "top";
				rel2.to: "top";
				image.normal: "bat_top1.png";
			}
		}
		part { "bottom-shine"; clip: "pulse_clip";
			desc { "default";
				rel1.to: "bottom";
				rel2.to: "bottom";
				image.normal: "bat_bottom1.png";
			}
		}
		part { "shine"; clip: "pulse_clip";
			desc { "default";
				rel1.to: "bg";
				rel1.offset: 0 -6;
				rel2.to: "bg";
				rel2.offset: -1 5;
				image.normal: "bat_shine.png";
				image.border: 0 0 7 7;
			}
		}
		part { "pwr1"; clip: "pulse_clip";
			desc { "default"; color_class: "focus"; hid;
				rel1.to: "pwr";
				rel1.relative: (2/5) 0.0;
				rel1.offset: -5 -5;
				rel2.to: "pwr";
				rel2.relative: (3/5) 1.0;
				rel2.offset: 4 4;
				image.normal: "glow_med_white.png";
				image.border: 5 5 5 5;
				fill.smooth: 0;
			}
			desc { "visible"; inherit; vis; }
		}
		part { "pwr2"; clip: "pulse_clip";
			desc { "default"; color_class: "focus"; hid;
				rel1.to: "pwr";
				rel1.relative: 0.0 (2/5);
				rel1.offset: -5 -5;
				rel2.to: "pwr";
				rel2.relative: 1.0 (3/5);
				rel2.offset: 4 4;
				image.normal: "glow_med_white.png";
				image.border: 5 5 5 5;
				fill.smooth: 0;
			}
			desc { "visible"; inherit; vis; }
		}
		text { "e.text.reading"; effect: SOFT_SHADOW; nomouse; scale; clip: "info_clip";
			desc { "default"; color: "#FFFFFF"; 
				align: 0.5 0.0;
				rel1.to: "bg";
				rel1.offset: 0 2;
				rel2.relative: 1.0 0.0;
				rel2.to_x: "bg";
				rel2.to_y: "pwr";
				text.font: "Sans"; text.size: 7; 
				//~ text.fit: 1 0;
				text.min: 1 1;  
				text.ellipsis: -1;
				text.text_class: "module_small";
			}
		}
		text { "e.text.time"; effect: SOFT_SHADOW; scale; clip: "info_clip";
			desc { "default"; color: "#FFFFFF";
				align: 0.5 1.0;
				rel1.relative: 0.0 1.0;
				rel1.to_x: "bg";
				rel1.to_y: "pwr";
				rel2.offset: -1 -5;
				rel2.to: "bg";
				text.font: "Sans"; text.size: 6;
				//~ text.fit: 1 0; 
				text.min: 1 1;
				text.ellipsis: -1;
				text.text_class: "module_small";
			}
		}
		part { name: "e.text.health"; type: TEXT; mouse_events: 0;
			desc { "default";
				hid;
			}
		}
		rect { "over";
			desc { "default"; color: "#00000000"; }
		}
	}
	programs {
		program {
			signal: "mouse,in"; source: "over";
			action: STATE_SET "visible" 0.0;
			transition: LINEAR 0.3;
			target: "info_clip";
		}
		program {
			signal: "mouse,out"; source: "over";
			action: STATE_SET "default" 0.0;
			transition: LINEAR 0.3;
			target: "info_clip";
		}
		program {
			signal: "e,state,charging"; source: "e";
			action: STATE_SET "visible" 0.0;
			target: "pwr1";
			target: "pwr2";
		}
		program {
			signal: "e,state,discharging"; source: "e";
			action: STATE_SET "default" 0.0;
			target: "pwr1";
			target: "pwr2";
		}
		program {
			signal: "e,state,unknown"; source: "e";
			action: STATE_SET "faded" 0.0;
			target: "fade_clip";
		}
		program { "pulse";
			signal: "e,action,pulse,start"; source: "e";
			action: STATE_SET "faded" 0.0;
			transition: ACCELERATE 0.3;
			after: "pulse2";
			target: "pulse_clip";
		}
		program { "pulse2";
			action: STATE_SET "faded" 1.0; transition: ACCELERATE 0.1;
			target: "pulse_clip";
		}
		program {
			signal: "e,action,pulse,stop"; source: "e";
			action: STATE_SET "default" 0.0;
			target: "pulse_clip";
		}
	}
}

group { "e/modules/battery/popup";
	min: 240 60;
	parts {
		swallow { "e.swallow.battery";
			desc { "default"; min: 1 1; max: 160 160;
				aspect: 1.0 1.0; aspect_preference: VERTICAL;
				align: 0.0 0.5;
			}
		}
		rect { "fade_clip";
			desc { "default"; color: "#FFFFFF"; }
			desc { "faded" 0.0; color: "#808080"; }
		}
		rect { "pulse_clip"; clip: "fade_clip";
			desc { "default"; color: "#FFFFFF"; }
			desc { "faded" 1.0; color: "#FFFFFF"; }
			desc { "faded" 0.0; color: "#FFFFFF40"; }
		}
		spacer { "pwr";
			desc { "default"; min: 5 5;
				rel1.to: "e.swallow.battery";
				rel1.relative: 0.40 0.40;
				rel1.offset: 0 3;
				rel2.to: "e.swallow.battery";
				rel2.relative: 0.60 0.60;
				aspect: 1.0 1.0; aspect_preference: BOTH;
				step: 5 5;
			}
		}
		part { "pwr1"; clip: "pulse_clip";
			desc { "default"; color_class: "focus"; hid;
				rel1.to: "pwr";
				rel1.relative: (2/5) 0.0;
				rel1.offset: -5 -5;
				rel2.to: "pwr";
				rel2.relative: (3/5) 1.0;
				rel2.offset: 4 4;
				image.normal: "glow_med_white.png";
				image.border: 5 5 5 5;
				fill.smooth: 0;
			}
			desc { "visible"; inherit; vis; }
		}
		part { "pwr2"; clip: "pulse_clip";
			desc { "default"; color_class: "focus"; hid;
				rel1.to: "pwr";
				rel1.relative: 0.0 (2/5);
				rel1.offset: -5 -5;
				rel2.to: "pwr";
				rel2.relative: 1.0 (3/5);
				rel2.offset: 4 4;
				image.normal: "glow_med_white.png";
				image.border: 5 5 5 5;
				fill.smooth: 0;
			}
			desc { "visible"; inherit; vis; }
		}
		text { "e.text.title"; effect: SHADOW BOTTOM; scale;
			desc { "default"; color: "#FFFFFF"; color_class: "module_label";
				color3: "#FFFFFF";
				rel1.relative: 1.0 0.0;
				rel1.to_x: "e.swallow.battery";
				rel2.relative: 1.0 0.5;
				text.font: "Sans:style=Bold"; text.size: 12;
				text.text: "Your battery is low!";
				text.min: 1 1;
				text.ellipsis: -1;
				text.text_class: "module_large";
			}
		}
		text { "e.text.label"; effect: SHADOW BOTTOM; scale;
			desc { "default"; color: "#FFFFFF"; color_class: "module_label";
				color3: "#FFFFFF";
				rel1.relative: 1.0 0.5;
				rel1.to_x: "e.swallow.battery";
				text.font: "Sans"; text.size: 12;
				text.text: "AC power is recommended.";
				text.min: 1 1;
				text.ellipsis: -1;
				text.text_class: "module_normal";
			}
		}
		rect { "separator"; nomouse;
			desc { "default";
				rel1.relative: 1.0 0.50;
				rel1.to_x: "e.swallow.battery";
				rel1.to_y: "e.swallow.battery";
				rel1.offset: 0 -4;
				rel2.offset: -5 0;
				color: "#00000034";
				min: 0 2;
				max: 99999 2;
			}
		}
		text { "e.text.health";
			//~ effect: SHADOW BOTTOM;
			scale: 1;
			description { state: "default" 0.0;
				rel1.relative: 1.0 0.75;
				rel1.to_x: "e.swallow.battery";
				rel1.to_y: "e.swallow.battery";
				color: 45 45 45  255;
				//~ color3: 0 0 0 128;
				text { font: "Sans"; size: 8;
					text: "health";
					min: 1 1;
					ellipsis: -1;
					text_class: "module_normal";
				}
			}
		}
	}
	programs {
		program {
			signal: "e,state,charging"; source: "e";
			action: STATE_SET "visible" 0.0;
			target: "pwr1";
			target: "pwr2";
			}
		program {
			signal: "e,state,discharging"; source: "e";
			action: STATE_SET "default" 0.0;
			target: "pwr1";
			target: "pwr2";
		}
	}
}
