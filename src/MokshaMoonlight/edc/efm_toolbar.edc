#define OVER(NAME_SRC, NAME_TRG)  \
	program {       \
		name: NAME_TRG"_over";  \
		signal: "mouse,in"; \
		source: NAME_SRC;   \
		action: STATE_SET "over" 0.0; \
		target: NAME_TRG;     \
	}       \
	program {       \
		name: NAME_TRG"_over_out";  \
		signal: "mouse,out";  \
		source: NAME_SRC;   \
		action: STATE_SET "default" 0.0;  \
		target: NAME_TRG;     \
	}       \

//NAVIGATION
group { name: "modules/efm_navigation/main";
	images {
		image: "icon_left_arrow.png" COMP;
		image: "icon_right_arrow.png" COMP;
		image: "icon_up_arrow.png" COMP;
		image: "refresh.png" COMP;
		image: "favorites.png" COMP;
		image: "button-prelight.png" COMP;
		image: "button-normal.png" COMP;
		image: "button-pressed.png" COMP;
	}
	parts {
		part {
			name: "base";
			type: RECT;
			mouse;
			desc {
				"default";
				color: 0 0 0 0;
			}
		}
		part {
			name: "begin";
			type: RECT;
			nomouse;
			desc {
				"default";
				max: 1 1;
				align: 0.0 0.0;
				color: 0 0 0 0;
			}
		}

#define NAV_BUTTON(NAME, ICON, REL_TO, OFF_X) \
		part {         \
			name: NAME"_bg";     \
			mouse;     \
			repeat_events: 1;      \
			type: IMAGE;       \
			desc {     \
				"default";   \
				min: 12 12;       \
				max: 64 64;       \
				aspect: 1.0 1.0;      \
				aspect_preference: VERTICAL;  \
				align: 0.0 0.5;     \
				color: 255 255 255 0; \
				rel1 {       \
					to_x: REL_TO;      \
					relative: 1.0 0.0;   \
					offset: OFF_X 0;     \
				}        \
				image {        \
					normal: "button-normal.png";   \
					border: 7 7 7 7;     \
				}        \
			}         \
			desc {     \
				state: "over" 0.0;      \
				inherit;   \
				color: 255 255 255 255;   \
				image.normal: "button-prelight.png";  \
			}         \
			desc {     \
				state: "selected" 0.0;      \
				inherit;   \
				color: 255 255 255 255;   \
				image.normal: "button-pressed.png"; \
			}         \
		}          \
		part {         \
			name: NAME"_img";      \
			nomouse;     \
			type: IMAGE;       \
			desc {     \
				"default";   \
				min: 22 22;       \
				max: 22 22;       \
				rel1 {       \
					offset: 7 7;     \
					to: NAME"_bg";     \
				}        \
				rel2 {       \
					offset: -8 -8;     \
					to: NAME"_bg";     \
				}        \
				image.normal: ICON".png";   \
			}         \
			desc {     \
				state: "disabled" 0.0;  \
				inherit; \
				color: 255 255 255 150; \
			}           \
		}          \
		part {         \
			name: NAME"_event_eater";    \
			type: RECT;        \
			mouse;     \
			repeat_events: 0;      \
			desc {     \
				"default";   \
				hid;       \
				color: 255 255 255 0;   \
				rel1.to: NAME"_bg";     \
				rel2.to: NAME"_bg";     \
			}         \
			desc {     \
				state: "disabled" 0.0;    \
				inherit;   \
				vis;       \
			}         \
		}          \

NAV_BUTTON("back",       "icon_left_arrow",  "begin", 5);
NAV_BUTTON("forward",    "icon_right_arrow", "back_bg", 1);
NAV_BUTTON("up",         "icon_up_arrow",    "forward_bg", 10);
NAV_BUTTON("refresh",    "refresh",          "up_bg", 1);
NAV_BUTTON("favorites",  "favorites",        "refresh_bg", 1);

		part { name: "e.swallow.pathbar";
			type: SWALLOW;
			desc {
				"default";
				align: 0.0 0.5;

					/* rel1.to_x: "favorites_base"; */
				rel1.to_x: "favorites_bg";
				rel1.relative: 1.0 0.0;
				rel1.offset: 10 0;
				rel2.offset: -40 -1;
				color: 200 0 0 200;
			}
		}
	}

	programs {
#define NAV_BUTTON_PROG(NAME)         \
OVER(NAME"_bg", NAME"_bg")      \
		program {            \
			name: NAME"_click";          \
			signal: "mouse,down,1";        \
			source: NAME"_bg";           \
			action: STATE_SET "selected" 0.0;        \
			target: NAME"_bg";         \
		}              \
		program {            \
			name: NAME"_unclick";          \
			signal: "mouse,up,1";          \
			source: NAME"_bg";           \
			action: STATE_SET "default" 0.0;     \
			target: NAME"_bg";         \
		}              \
		program  {         \
			name: NAME"_send";         \
			signal: "mouse,clicked,1";       \
			source: NAME"_bg";         \
			action: SIGNAL_EMIT "e,action,"NAME",click" "";  \
		}              \
		program  {         \
			name: NAME"_disable";          \
			signal: "e,state,"NAME",disabled";     \
			source: "e";           \
			action: STATE_SET "disabled" 0.0;      \
			target: NAME"_img";          \
			target: NAME"_event_eater";        \
		}              \
		program  {         \
			name: NAME"_enable";         \
			signal: "e,state,"NAME",enabled";      \
			source: "e";           \
			action: STATE_SET "default" 0.0;     \
			target: NAME"_img";          \
			target: NAME"_event_eater";        \
		}              \

NAV_BUTTON_PROG("back");
NAV_BUTTON_PROG("forward");
NAV_BUTTON_PROG("up");
NAV_BUTTON_PROG("refresh");
NAV_BUTTON_PROG("favorites");
	}
}

group {	name: "modules/efm_navigation/pathbar_scrollframe";
	images {
		image: "icon_left_arrow.png" COMP;
		image: "icon_right_arrow.png" COMP;
	}
	parts {
		part { name: "base";
		type: RECT;
		mouse;
			desc {
			"default";
				rel1 {
					to_x: "left_arrow";
					relative: 1.0 0.0;
					offset: 0 -1;
				}
				rel2 {
					to_x: "right_arrow";
					relative: 0.0 1.0;
				}
			color: 0 0 0 0;
			}
		}
		part {
		name: "clipper";
		type: RECT;
		nomouse;
			desc {
			"default";
			rel1.to: "base";
			rel2.to: "base";
			}
		}
		part { name: "e.swallow.content";
		type: SWALLOW;
		clip: "clipper";
			desc {
			"default";
			rel1.to: "clipper";
			rel2.to: "clipper";
			}
		}
		part { name: "left_arrow";
		type: IMAGE;
		mouse;
		scale;
		desc {
			"default";
				/* aspect: 1.0 1.0;
	* aspect_preference: VERTICAL; */
			align: 0.0 0.5;
			min: 16 16;
			max: 18 20;
			image.normal: "icon_left_arrow.png";
		}
		desc {
			state: "over" 0.0;
			inherit;
			image.normal: "icon_left_arrow.png";
		}
		}
		part { name: "right_arrow";
			type: IMAGE;
			mouse;
			scale;
			desc {
				"default";
				align: 1.0 0.5;
				min: 16 16;
				max: 18 20;
				image.normal: "icon_right_arrow.png";
			}
			desc {
				state: "over" 0.0;
				inherit;
				image.normal: "icon_right_arrow.png";
			}
		}
		part { name: "e.dragable.hbar";
			nomouse;
			dragable {
				x: 1 1 0;
				y: 0 0 0;
				confine: "base";
			}
			desc {
				"default";
				hid;
				rel1.to: "base";
				rel2.to: "base";
			}
		}
		part { name: "event";
			type: RECT;
			mouse;
			repeat_events: 1;
			desc {
				"default";
				color: 0 0 0 0;
			}
		}
	}
	programs {
 OVER("right_arrow", "right_arrow")
 OVER("left_arrow", "left_arrow")

		program { name: "sb_left";
			signal: "mouse,down,1";
			source: "left_arrow";
			action: DRAG_VAL_STEP -5.0 0.0;
			target: "e.dragable.hbar";
		}
		program { name: "sb_right";
			signal: "mouse,down,1";
			source: "right_arrow";
			action: DRAG_VAL_STEP 5.0 0.0;
			target: "e.dragable.hbar";
		}
	}
}

group { name: "modules/efm_navigation/pathbar_button";
	images {
		image: "button-normal.png" COMP;
		image: "button-pressed.png" COMP;
		image: "button-prelight.png" COMP;
	}

	parts {
		part {name: "bg";
		type: IMAGE;
		nomouse;
		desc {
			"default";
			min: 28 28;
			image {
				normal: "button-normal.png";
				border: 9 9 9 9;
			}
		}
		desc {
			state: "over" 0.0;
			inherit;
			image.normal: "button-prelight.png";
		}
		desc {
			state: "selected" 0.0;
			inherit;
			image.normal: "button-pressed.png";
		}
	}
//Label3 part is used to set the size of the button on pathbar, in fact it has the min option set to 1 1
		part { name: "label3";
		type: TEXT;
		nomouse;
		scale;
		desc {
				max: 200 32;
				"default";
				rel1.to: "e.text.label";
				rel2.to: "e.text.label";
				hid;
				text {
					font: "Sans:style=Bold";
					text_source: "e.text.label";
					size: 11;
					min: 1 1;
				}
			}
		}
		part { name: "label2";
			type: TEXT;
			nomouse;
			scale;
			desc {
				"default";
				max: 200 32;
				rel1.to: "e.text.label";
				rel2.to: "e.text.label";
				color: 0 0 0 255;
				text {
					font: "Sans";
					text_source: "e.text.label";
					size: 11;
					min: 0 1; //with min 0 1 the label will be truncate
					align: 0.5 0.5;
					elipsis: 0.0;
				}
			}
			desc {
				state: "selected" 0.0;
				inherit;
				hid;
			}
		}
		part { name: "e.text.label";
			type: TEXT;
			nomouse;
			scale;
			desc {
				"default";
				max: 200 32;
				rel1.offset: 7 0;
				rel2.offset: -8 -1;
				hid;
				color: 0 0 0 255;
				text {
					font: "Sans:style=Bold";
					size: 11;
					min: 0 1; //with min 0 1 the label will be truncate
					max: 1 0;
					align: 0.5 0.5;
					elipsis: 0.0;
				}
			}
			desc {
				state: "selected" 0.0;
				inherit;
				vis;
			}
		}
		part { name: "event";
			type: RECT;
			mouse;
			ignore_flags: ON_HOLD;
			desc {
				"default";
				color: 0 0 0 0;
			}
		}
	}
	programs {
	OVER("event", "bg")
		program { name: "click";
			signal: "mouse,down,1";
			source: "event";
			action: STATE_SET "selected" 0.0;
			target: "bg";
		}
		program { name: "unclick";
			signal: "mouse,up,1";
			source: "event";
			action: STATE_SET "default" 0.0;
			target: "bg";
		}
		program { name: "send";
			signal: "mouse,clicked,1";
			source: "event";
			action: SIGNAL_EMIT "e,action,click" "";
		}
		program { name: "select";
			signal: "e,state,selected";
			source: "e";
			action: STATE_SET "selected" 0.0;
			target: "e.text.label";
			target: "label2";
		}
		program { name: "normal";
			signal: "e,state,default";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "e.text.label";
			target: "label2";
		}
	}
}
