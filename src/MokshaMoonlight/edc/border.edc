#define BORDER(NAME, MIN, MAX, REL1, OFF1, REL2, OFF2, IMG1, RELF1, RELF2, OFFF2) \
image { NAME; nomouse; 								\
	desc { "default"; 									\
		min: MIN; max: MAX;								\
		fixed: 1 1;												\
		rel1.relative: REL1; 							\
		rel1.offset: OFF1; 								\
		rel2.relative: REL2; 							\
		rel2.offset: OFF2; 								\
		image.normal: IMG1; 							\
	} 																	\
	desc { state: "default" 0.1;				\
		inherit: "default" 0.0;						\
		min: MIN; max: MAX; 							\
		rel1.relative: RELF1; 						\
		rel1.offset: OFF1; 								\
		rel1.to_y: "top-center";					\
		rel2.relative: RELF2; 						\
		rel2.offset: OFFF2; 							\
		rel2.to_y: "top-center";					\
		hid;															\
	} 																	\
}

#define BORDER2(NAME,TO1,REL1,OFF1,TO2,REL2,OFF2) \
rect { NAME;  nomouse;								\
	desc{ "default"; 										\
		min: 1 1; max: 1 9999; 						\
		color: 126 131 136 255; 					\
		rel1.to: TO1; 										\
		rel1.relative: REL1; 							\
		rel1.offset: OFF1; 								\
		rel2.to: TO2; 										\
		rel2.relative: REL2; 							\
		rel2.offset: OFF2; 								\
	} 																	\
}

#define BORDER3(NAME, MIN, MAX, TO1, REL1, OFF1, TO2, REL2, OFF2, IMG1, RELF1, RELF2, OFFF2) \
image { NAME; nomouse; 								\
	desc { "default"; 									\
		min: MIN; max: MAX; 							\
		rel1.to: TO1; 										\
		rel1.relative: REL1; 							\
		rel1.offset: OFF1; 								\
		rel2.to: TO2; 										\
		rel2.relative: REL2; 							\
		rel2.offset: OFF2; 								\
		image.normal: IMG1; 							\
		image.border: 72 72 0 0;					\
	} 																	\
	desc { state: "default" 0.1;				\
		inherit: "default" 0.0;						\
		min: 0 0; max: 9999 0; 						\
		rel1.relative: RELF1; 						\
		rel1.offset: OFF1; 								\
		rel2.relative: RELF2; 						\
		rel2.offset: OFFF2; 							\
		hid;															\
	} 																	\
}

#define BORDER4(NAME, MIN, MAX, REL1, OFF1, REL2, OFF2, IMG1, RELF1, RELF2, OFFF2, OFFS1) \
image { NAME; nomouse; 								\
	desc {"default"; 										\
		min: MIN; max: MAX; 							\
		fixed: 1 1;												\
		rel1.relative: REL1; 							\
		rel1.offset: OFF1; 								\
		rel2.relative: REL2; 							\
		rel2.offset: OFF2; 								\
		image.normal: IMG1; 							\
	} 																	\
	desc { state: "default" 0.1;				\
		inherit: "default" 0.0;						\
		min: MIN; max: MAX; 							\
		rel1.relative: RELF1; 						\
		rel1.offset: OFF1; 								\
		rel1.to_y: "top-center";					\
		rel2.relative: RELF2; 						\
		rel2.offset: OFFF2; 							\
		rel2.to_y: "top-center";					\
		hid;															\
	}																		\
	desc { "shaded";										\
		inherit: "default" 0.0;						\
		rel1.offset: OFFS1;								\
	} 																	\
}

#define SHADOW_PART(TO1, OFF1, TO2, OFF2) \
rect { "shadow_clip"; nomouse;				\
	desc { "default";										\
		STAY_ON("shadow")									\
		color: VISIBLE;										\
	}																		\
	desc { state: "hidden" 0.0;					\
		inherit: "default" 0.0;						\
		color: TRANSPARENT;								\
		hid;															\
	}																		\
}																			\
part { "shadow"; nomouse; 						\
	clip: "shadow_clip";								\
	desc { "default";										\
		image.normal: "win_shadow.png";		\
		image.border: 10 10 15 14;				\
		image.middle: 0;									\
		rel1.to: TO1;											\
		rel1.offset: OFF1;								\
		rel2.to: TO2;											\
		rel2.offset: OFF2;								\
		fill.smooth: 0;										\
		color: 0 0 0 150;									\
	}																		\
	desc { state: "maximized" 0.0;			\
		inherit: "default" 0.0;						\
		color: TRANSPARENT;								\
		hid; 															\
	}																		\
}

#define E_SWALLOW_CLIENT(NAME, TO1, REL1, OFF1, TO2, REL2, OFF2) \
rect { "client_clip"; 								\
	desc { "default";										\
		rel1.to_y: "e.swallow.client";		\
		rel2.to_y: "e.swallow.client";		\
	}																		\
	desc { state: "hidden" 0.0;					\
		inherit: "default" 0.0;						\
		hid;															\
	}																		\
}																			\
swallow { NAME; mouse;								\
	clip: "client_clip";								\
	nomouse; 														\
	desc { "default"; 									\
		rel1.to_y: TO1; 									\
		rel1.relative: REL1;							\
		rel1.offset: OFF1; 								\
		rel2.to_x: TO2; 									\
		rel2.relative: REL2; 							\
		rel2.offset: OFF2; 								\
	} 																	\
	desc { state: "shaded" 0.0;					\
		inherit: "default" 0.0;						\
		hid;															\
	}																		\
}

#define TITLE_CLIP(NAME, MIN, TO1, REL1, OFF1, TO2, REL2, OFF2, COLOR) \
rect { NAME; nomouse; 								\
	desc { "default"; 									\
		min: MIN; 												\
		color: COLOR; 										\
		rel1.to: TO1; 										\
		rel1.relative: REL1; 							\
		rel1.offset: OFF1; 								\
		rel2.to: TO2; 										\
		rel2.relative: REL2; 							\
		rel2.offset: OFF2; 								\
	} 																	\
}

#define E_SWALLOW_ICON(NAME, RELT)		\
swallow { NAME; 											\
	desc { "default"; 									\
		aspect: 1.0 1.0;									\
		aspect_preference: BOTH;					\
		rel1.to: RELT; 										\
		rel2.to: RELT; 										\
	} 																	\
	desc { state: "urgent" 0.0;					\
		inherit: "default" 0.0;						\
		color: 255 255 255 0;							\
	}																		\
}

#define MOVE_WINDOW(NAME, MIN, MAX, TO1, REL1, OFF1, TO2, REL2, OFF2, COLOR) \
rect { NAME; 													\
	desc { "default"; 									\
		min: MIN; max: MAX; 							\
		color: COLOR; 										\
		rel1.to: TO1; 										\
		rel1.relative: REL1; 							\
		rel1.offset: OFF1; 								\
		rel2.to: TO2; 										\
		rel2.relative: REL2; 							\
		rel2.offset: OFF2; 								\
	} 																	\
}

#define E_EVENT_ICON(NAME, TO1, TO2) 	\
rect { NAME; mouse; 									\
	desc { "default"; 									\
		align: 0.0 0.5;										\
		aspect: 1.0 1.0;									\
		aspect_preference: VERTICAL;			\
		color: 255 255 255 0; 						\
		rel1.to: TO1; 										\
		rel1.offset: 2 0;									\
		rel1.relative: 0 0;								\
		rel2.to: TO2; 										\
		rel2.relative: 1 1;								\
		vis;															\
	} 																	\
}

#define E_EVENT_ICON_LEFT(NAME, TO1, TO2)	\
rect { NAME; mouse; 									\
	desc { "default"; 									\
		align: 0.0 0.5;										\
		aspect: 1.0 1.0;									\
		aspect_preference: VERTICAL;			\
		color: 255 255 255 0; 						\
		rel1.to: TO1; 										\
		rel1.offset: 5 3;									\
		rel1.relative: 1 0;								\
		rel2.to: TO2; 										\
		rel2.relative: 1 1;								\
		vis;															\
	} 																	\
}

#define CLIPS(NAME, MIN, MAX, TO, REL1, OFF1, REL2, OFF2) \
rect { NAME; nomouse; 								\
	desc { "default"; 									\
		min: MIN; max: MAX; 							\
		color: 255 255 255 255; 					\
		rel1.to: TO; 											\
		rel1.relative: REL1; 							\
		rel1.offset: OFF1; 								\
		rel2.to: TO; 											\
		rel2.relative: REL2; 							\
		rel2.offset: OFF2; 								\
	} 																	\
	desc { state: "clicked" 0.0; 				\
		inherit: "default" 0.0; 					\
		color: 215 215 215 255;						\
	} 																	\
}

#define BUTTONS(NAME, CLIP, SIZE, TO, IMG) \
image { NAME; mouse; clip: CLIP; 			\
	desc { "default"; 									\
		min: SIZE;  max: SIZE; 						\
		color: 255 255 255 255;						\
		rel1.to: TO; 											\
		rel2.to: TO; 											\
		image.normal: IMG; 								\
	} 																	\
	desc { state: "clicked" 0.0; 				\
		inherit: "default" 0.0; 					\
		color: 215 215 215 255;						\
	} 																	\
	desc { state: "default" 0.1; 				\
		inherit: "default" 0.0; 					\
		color: 255 255 255 192;						\
	} 																	\
}

#define RESIZE_TOP(NAME, MIN, MAX, TO1, REL1, OFF1, TO2, REL2, OFF2, COLOR) \
rect { NAME; nomouse; 								\
	desc { "default"; 									\
		min: MIN; max: MAX; 							\
		color: COLOR; 										\
		rel1.to: TO1; 										\
		rel1.relative: REL1; 							\
		rel1.offset: OFF1; 								\
		rel2.to: TO2; 										\
		rel2.relative: REL2; 							\
		rel2.offset: OFF2; 								\
	} 																	\
}

#define PART_EVENT_MAP(NAME, REPEAT, PART_NAME) \
rect { NAME; repeat_events: REPEAT; 	\
	desc { "default"; 									\
		color: 0 0 0 0; 									\
		rel1.to: PART_NAME; 							\
		rel2.to: PART_NAME; 							\
	} 																	\
}

#define BORDER_DEFAULT_PROGRAMS() \
program { \
	name: "active"; \
	signal: "e,state,focused"; \
	source: "e"; \
	action: STATE_SET "default" 0.0; \
	transition: LINEAR 0.2; \
	target: "e.text.title"; \
	target: "button-close"; \
	target: "button-min"; \
	target: "button-max"; \
	target: "text_alt"; \
	target: "top-left-over"; \
	target: "top-center-over"; \
	/*target: "top-right-over";*/ \
} \
program { \
	name: "inactive"; \
	signal: "e,state,unfocused"; \
	source: "e"; \
	action: STATE_SET "default" 0.1; \
	transition: LINEAR 0.2; \
	target: "e.text.title"; \
	target: "button-close"; \
	target: "button-min"; \
	target: "button-max"; \
	target: "text_alt"; \
	target: "top-left-over"; \
	target: "top-center-over"; \
	/*target: "top-right-over";*/ \
} \
program { \
	name: "close_click"; \
	signal: "mouse,down,1"; \
	source: "button-close"; \
	action: STATE_SET "clicked" 0.0; \
	target: "button-close"; \
} \
program { \
	name: "close_unclick"; \
	signal: "mouse,up,1"; \
	source: "button-close"; \
	action: STATE_SET "default" 0.0; \
	target: "button-close"; \
} \
program { \
	name: "max_click"; \
	signal: "mouse,down,1"; \
	source: "button-max"; \
	action: STATE_SET "clicked" 0.0; \
	target: "button-max"; \
} \
program { \
	name: "max_unclick"; \
	signal: "mouse,up,1"; \
	source: "button-max"; \
	action: STATE_SET "default" 0.0; \
	target: "button-max"; \
} \
program { \
	name: "min_click"; \
	signal: "mouse,down,1"; \
	source: "button-min"; \
	action: STATE_SET "clicked" 0.0; \
	target: "button-min"; \
} \
program { \
	name: "min_unclick"; \
	signal: "mouse,up,1"; \
	source: "button-min"; \
	action: STATE_SET "default" 0.0; \
	target: "button-min"; \
} \
program { \
	name: "urgent"; \
	signal: "e,state,urgent"; \
	source: "e"; \
	action: STATE_SET "urgent" 0.0; \
	transition: DECELERATE 0.5; \
	target: "e.swallow.icon"; \
	after: "urgent2"; \
} \
program { \
	name: "urgent2"; \
	signal: ""; \
	source: ""; \
	action: STATE_SET "default" 0.0; \
	transition: DECELERATE 0.5; \
	target: "e.swallow.icon"; \
	after: "urgent"; \
} \
program { \
	name: "stop"; \
	signal: "e,state,not_urgent"; \
	source: "e"; \
	action: ACTION_STOP; \
	target: "urgent"; \
	target: "urgent2"; \
}		\
program { name: "shade_hide"; \
	action: STATE_SET "hidden" 0.0; \
	target: "client_clip"; \
} \
program { \
	signal: "e,state,shading"; source: "e"; \
	action: STATE_SET "shaded" 0.0; \
	target: "e.swallow.client"; \
	target: "bottom-left"; \
	target: "bottom-right"; \
} \
program { \
	signal: "e,state,unshaded"; source: "e"; \
	action: STATE_SET "default" 0.0; \
	target: "e.swallow.client"; \
	target: "bottom-left"; \
	target: "bottom-right"; \
} \
program { name: "unshading"; \
	signal: "e,state,unshading"; source: "e"; \
	action: STATE_SET "default" 0.0; \
	target: "e.swallow.client"; \
	target: "shadow"; \
	target: "client_clip"; \
} \
program { \
	signal: "e,state,shadow,on"; source: "e"; \
	action: STATE_SET "default" 0.0; \
	target: "shadow_clip"; \
	} \
program { \
	signal: "e,state,shadow,off"; source: "e"; \
	action: STATE_SET "hidden" 0.0; \
	target: "shadow_clip"; \
}

#define BORDER_int_PROGRAMS() \
program { \
	name: "active"; \
	signal: "e,state,focused"; \
	source: "e"; \
	action: STATE_SET "default" 0.0; \
	transition: LINEAR 0.2; \
	target: "e.text.title"; \
	target: "button-close"; \
	target: "text_alt"; \
	target: "top-left-over"; \
	target: "top-center-over"; \
	/*target: "top-right-over";*/ \
} \
program { \
	name: "inactive"; \
	signal: "e,state,unfocused"; \
	source: "e"; \
	action: STATE_SET "default" 0.1; \
	transition: LINEAR 0.2; \
	target: "e.text.title"; \
	target: "button-close"; \
	target: "text_alt"; \
	target: "top-center-over"; \
	target: "top-left-over"; \
	/*target: "top-right-over";*/ \
} \
program { \
	name: "close_click"; \
	signal: "mouse,down,1"; \
	source: "button-close"; \
	action: STATE_SET "clicked" 0.0; \
	target: "button-close"; \
} \
program { \
	name: "close_unclick"; \
	signal: "mouse,up,1"; \
	source: "button-close"; \
	action: STATE_SET "default" 0.0; \
	target: "button-close"; \
} \
program { \
	name: "urgent"; \
	signal: "e,state,urgent"; \
	source: "e"; \
	action: STATE_SET "urgent" 0.0; \
	transition: DECELERATE 0.5; \
	target: "e.swallow.icon"; \
	after: "urgent2"; \
} \
program { \
	name: "urgent2"; \
	signal: ""; \
	source: ""; \
	action: STATE_SET "default" 0.0; \
	transition: DECELERATE 0.5; \
	target: "e.swallow.icon"; \
	after: "urgent"; \
} \
program { \
	name: "stop"; \
	signal: "e,state,not_urgent"; \
	source: "e"; \
	action: ACTION_STOP; \
	target: "urgent"; \
	target: "urgent2"; \
} \
program { name: "shade_hide"; \
	action: STATE_SET "hidden" 0.0; \
	target: "client_clip"; \
} \
program { \
	signal: "e,state,shading"; source: "e"; \
	action: STATE_SET "shaded" 0.0; \
	target: "e.swallow.client"; \
	target: "bottom-left"; \
	target: "bottom-right"; \
} \
program { \
	signal: "e,state,unshaded"; source: "e"; \
	action: STATE_SET "default" 0.0; \
	target: "e.swallow.client"; \
	target: "bottom-left"; \
	target: "bottom-right"; \
} \
program { name: "unshading"; \
	signal: "e,state,unshading"; source: "e"; \
	action: STATE_SET "default" 0.0; \
	target: "e.swallow.client"; \
	target: "shadow"; \
	target: "client_clip"; \
} \
program { \
	signal: "e,state,shadow,on"; source: "e"; \
	action: STATE_SET "default" 0.0; \
	target: "shadow_clip"; \
} \
program { \
	signal: "e,state,shadow,off"; source: "e"; \
	action: STATE_SET "hidden" 0.0; \
	target: "shadow_clip"; \
}

group { "e/widgets/border/default/border";
	alias: "e/widgets/border/shaped/border";
	images.image: "bd_top_left.png" COMP;
	images.image: "bd_top_right.png" COMP;
	images.image: "bd_top_lefts.png" COMP;
	images.image: "bd_top_rights.png" COMP;
	images.image: "bd_bottom_left.png" COMP;
	images.image: "bd_bottom_right.png" COMP;
	images.image: "bd_bottom_lefts.png" COMP;
	images.image: "bd_bottom_rights.png" COMP;
	images.image: "bd_bottom.png" COMP;
	images.image: "bd_button_close_unfocused.png" COMP;
	images.image: "bd_button_max_unfocused.png" COMP;
	images.image: "bd_button_min_unfocused.png" COMP;
	images.image: "bd_top_over.png" COMP;
	images.image: "bd_top_over_left.png" COMP;
	images.image: "bd_top_overm.png" COMP;
	images.image: "bd_top_right_over.png" COMP;
	images.image: "bd_top_left_over.png" COMP;
	images.image: "win_shadow.png" COMP;
	data.item: "shadow" "1";
	parts {
		SHADOW_PART("top-left", -9 -10, "bottom-right", 9 10)
		BORDER("top-left", 6 23, 6 23, 0.0 0.0, 3 22, 0.0 0.0, 3 0, "bd_top_left.png", 0.0 0.0, 0.0 0.0, 3 22)
		BORDER("top-right", 6 23, 6 23, 1.0 0.0, 0 22, 1.0 0.0, -6 0, "bd_top_right.png", 1.0 0.0, 1.0 0.0, 0 22)
		BORDER4("bottom-left", 5 5, 5 5, 0.0 1.0, 3 -6, 0.0 1.0, 3 0, "bd_bottom_left.png", 0.0 1.0, 0.0 1.0, 5 -6, 1 5)
		BORDER4("bottom-right", 5 5, 5 5, 1.0 1.0, 0 -6, 1.0 1.0, -6 0, "bd_bottom_right.png", 1.0 1.0, 1.0 1.0, 0 -6, 1 5)
		BORDER2("left-border", "top-left", 0.0 1.0, 0 0, "bottom-left", 0.0 0.0, 0 0)
		BORDER2("right-border", "top-right", 1.0 1.0, -1 0, "bottom-right", 1.0 0.0, 0 0 )
		BORDER3("top-center", 5 23, 9999 23, "top-left", 1.0 0.5, 0 0, "top-right", 0.0 0.5, -1 -2, "bd_top.png", 1.0 0.5, 0.0 0.5, 0 0)
		BORDER3("bottom-center", 5 5, 9999 5, "bottom-left", 1.0 1.0, 0 -6, "bottom-right", 0.0 1.0, -1 0, "bd_bottom.png", 1.0 1.0, 0.0 1.0, 0 -6)
		E_SWALLOW_CLIENT("e.swallow.client", "top-left", 0.0 1.0, 1 0, "bottom-right", 1.0 1.0, -2 -6)
		TITLE_CLIP("title.area.clip", 1 20, "top-left", 0.0 0.5, 5 0, "top-right", 1.0 0.5, -30 0, 255 255 255 255)
		text { 	"e.text.title"; effect: SOFT_SHADOW BOTTOM; nomouse; scale;
			clip: "title.area.clip";
			desc { "default"; color: 255 255 255 255; hid;
				color3: 255 255 255 255;
				color_class: "border_title";
				rel1.to: "title.area.clip";
				rel1.relative: 0.0 0.5;
				rel1.offset: 0 0;
				rel2.to: "title.area.clip";
				rel2.relative: 1.0 0.5;
				rel2.offset: -5 0;
				text.text: "";
				text.font: "Sans"; text.size: 10;
				text.min: 0 1;
				text.align: 0.5 0.5;
				text.text_class: "title_bar";
			}
			desc { "default" 0.1; inherit; vis; }
		}
		BORDER("top-left-over", 6 23, 6 23, 0.0 0.0, 3 22, 0.0 0.0, 3 0, "bd_top_left_over.png", 0.0 0.0, 0.0 0.0, 3 22)
		BORDER("top-right-over", 6 23, 6 23, 1.0 0.0, 0 22, 1.0 0.0, -6 0, "bd_top_right.png", 1.0 0.0, 1.0 0.0, 20 22)
		BORDER3("top-center-over", 5 23, 9999 23, "top-left", 0.0 0.5,  3 0, "top-right", 1.0 0.5, -15 0, "bd_top_over.png", 1.0 1.0, 0.0 1.0, -1 -2)

		MOVE_WINDOW("move-window", 1 22, 9999 22, "top-left", 0.0 0.0, 5 2, "top-right", 1.0 1.0, -7 -1, 255 0 0 0)
		PART_EVENT_MAP("e.event.resize.t", 0, "resize_t")
		PART_EVENT_MAP("e.event.titlebar", 0, "move-window")
		PART_EVENT_MAP("e.event.resize.r", 0, "right-border")
		PART_EVENT_MAP("e.event.resize.l", 0, "left-border")
		PART_EVENT_MAP("e.event.resize.br", 0, "bottom-right")
		PART_EVENT_MAP("e.event.resize.bl", 0, "bottom-left")
		PART_EVENT_MAP("e.event.resize.b", 0, "bottom-center")
		PART_EVENT_MAP("e.event.resize.tr", 0, "top-right")
		PART_EVENT_MAP("e.event.resize.tl", 0, "top-left")
		CLIPS("close-clip", 20 18, 20 18, "top-right", 1.0 0.0, 0 0, 0.0 1.0, -15 -8)
		CLIPS("max-clip", 20 18, 20 18, "close-clip", 1.0 0.0, 0 0, 0.0 1.0, -45 -1)
		CLIPS("min-clip", 20 18, 20 18, "max-clip", 1.0 0.0, 0 0, 0.0 1.0, -45 -1)
		BUTTONS("button-close", "close-clip", 15 15, "close-clip", "bd_button_close_unfocused.png")
		BUTTONS("button-max", "max-clip", 15 15, "max-clip", "bd_button_max_unfocused.png")
		BUTTONS("button-min", "min-clip", 15 15, "min-clip", "bd_button_min_unfocused.png")
		PART_EVENT_MAP("e.event.close", 1, "button-close")
		PART_EVENT_MAP("e.event.maximize", 1, "button-max")
		PART_EVENT_MAP("e.event.minimize", 1, "button-min")
		RESIZE_TOP("resize_t", 1 2, 9999 2, "top-left", 0.0 0.0, 0 0, "top-right", 0.0 0.0, -1 0, 255 0 0 0)
		text { "text_alt"; effect: SOFT_SHADOW BOTTOM; nomouse; scale; clip: "title2_rect";
			desc { "default"; color: 255 255 255 255; vis;
				color3: 255 255 255 255;
				color_class: "border_title_active";
				rel1.to: "e.text.title";
				rel2.to: "e.text.title";
				text.text_source: "e.text.title";
				text.font: "Sans"; text.size: 10;
				text.min: 0 1;
				text.align: 0.5 0.5;
				text.text_class: "title_bar_alt";
			}
			desc { "default" 0.1; inherit; color: 0 0 0 0; hid; }
		}
		rect { "title2_rect"; nomouse;
			desc {"default";
				rel1.to: "top-center-over";
				rel2.to: "top-center-over";
			}
		}
		E_SWALLOW_ICON("e.swallow.icon", "e.event.icon")
		E_EVENT_ICON("e.event.icon", "title.area.clip", "title.area.clip")
	}

	programs {
		BORDER_DEFAULT_PROGRAMS()
	}
}

group { "e/widgets/border/left_controls/border";
	alias: "e/widgets/border/shaped/border";
	data.item: "shadow" "1";
	parts {
		SHADOW_PART("top-left", -9 -10, "bottom-right", 9 10)
		BORDER("top-left", 6 23, 6 23, 0.0 0.0, 3 22, 0.0 0.0, 3 0, "bd_top_left.png", 0.0 0.0, 0.0 0.0, 3 22)
		BORDER("top-right", 6 23, 6 23, 1.0 0.0, 0 22, 1.0 0.0, -6 0, "bd_top_right.png", 1.0 0.0, 1.0 0.0, 0 22)
		BORDER4("bottom-left", 5 5, 5 5, 0.0 1.0, 3 -6, 0.0 1.0, 3 0, "bd_bottom_left.png", 0.0 1.0, 0.0 1.0, 5 -6, 1 5)
		BORDER4("bottom-right", 5 5, 5 5, 1.0 1.0, 0 -6, 1.0 1.0, -6 0, "bd_bottom_right.png", 1.0 1.0, 1.0 1.0, 0 -6, 1 5)
		BORDER2("left-border", "top-left", 0.0 1.0, 0 0, "bottom-left", 0.0 0.0, 0 0)
		BORDER2("right-border", "top-right", 1.0 1.0, -1 0, "bottom-right", 1.0 0.0, 0 0 )
		BORDER3("top-center", 5 23, 9999 23, "top-left", 1.0 0.5, 0 0, "top-right", 0.0 0.5, -1 -2, "bd_top.png", 1.0 0.5, 0.0 0.5, 0 0)
		BORDER3("bottom-center", 5 5, 9999 5, "bottom-left", 1.0 1.0, 0 -6, "bottom-right", 0.0 1.0, -1 0, "bd_bottom.png", 1.0 1.0, 0.0 1.0, 0 -6)
		E_SWALLOW_CLIENT("e.swallow.client", "top-left", 0.0 1.0, 1 0, "bottom-right", 1.0 1.0, -2 -6)
		TITLE_CLIP("title.area.clip", 1 20, "min-clip", 1.0 0.5, 10 0, "top-right", 1.0 0.5, -30 0, 255 255 255 255)
		text { 	"e.text.title"; effect: SOFT_SHADOW BOTTOM; nomouse; scale; clip: "title.area.clip";
			desc { "default"; color: 255 255 255 255; hid;
				color3: 255 255 255 255;
				color_class: "border_title";
				rel1.to: "title.area.clip";
				rel1.relative: 0.0 0.5;
				rel1.offset: 0 4;
				rel2.to: "title.area.clip";
				rel2.relative: 1.0 0.5;
				rel2.offset: -5 0;
				text.text: "";
				text.font: "Sans"; text.size: 10;
				text.min: 0 1;
				text.align: 0.5 0.5;
				text.text_class: "title_bar";
			}
			desc { "default" 0.1; inherit; vis; }
		}
		BORDER("top-left-over", 6 23, 6 23, 0.0 0.0, 3 22, 0.0 0.0, 3 0, "bd_top_lefts.png", 0.0 0.0, 0.0 0.0, 3 22)
		BORDER("top-right-over", 6 23, 6 23, 1.0 0.0, 0 22, 1.0 0.0, -6 0, "bd_top_right_over.png", 1.0 1.0, 1.0 0.0, -5 23)
		BORDER3("top-center-over", 5 23, 9999 23, "top-left", 1.0 0.5, 0 0, "top-right", 0.0 0.5, -1 -2, "bd_top_over_left.png", 1.0 1.0, 0.0 1.0, -1 -2)

		MOVE_WINDOW("move-window", 1 22, 9999 22, "top-left", 0.0 0.0, 5 2, "top-right", 1.0 1.0, -7 -1, 255 0 0 0)
		PART_EVENT_MAP("e.event.resize.t", 0, "resize_t")
		PART_EVENT_MAP("e.event.titlebar", 0, "move-window")
		PART_EVENT_MAP("e.event.resize.r", 0, "right-border")
		PART_EVENT_MAP("e.event.resize.l", 0, "left-border")
		PART_EVENT_MAP("e.event.resize.br", 0, "bottom-right")
		PART_EVENT_MAP("e.event.resize.bl", 0, "bottom-left")
		PART_EVENT_MAP("e.event.resize.b", 0, "bottom-center")
		PART_EVENT_MAP("e.event.resize.tr", 0, "top-right")
		PART_EVENT_MAP("e.event.resize.tl", 0, "top-left")
		CLIPS("close-clip", 20 18, 20 18, "top-left", 0.0 0.0, 0 0, 0.0 1.0, 30 -8)
		CLIPS("max-clip", 20 18, 20 18, "close-clip", 1.0 0.0, 0 0, 0.0 1.0, 30 -1)
		CLIPS("min-clip", 20 18, 20 18, "max-clip", 1.0 0.0, 0 0, 0.0 1.0, 30 -1)
		BUTTONS("button-close", "close-clip", 15 15, "close-clip", "bd_button_close_unfocused.png")
		BUTTONS("button-max", "max-clip", 15 15, "max-clip", "bd_button_max_unfocused.png")
		BUTTONS("button-min", "min-clip", 15 15, "min-clip", "bd_button_min_unfocused.png")
		PART_EVENT_MAP("e.event.close", 1, "button-close")
		PART_EVENT_MAP("e.event.maximize", 1, "button-max")
		PART_EVENT_MAP("e.event.minimize", 1, "button-min")
		RESIZE_TOP("resize_t", 1 2, 9999 2, "top-left", 0.0 0.0, 0 0, "top-right", 0.0 0.0, -1 0, 255 0 0 0)
		text { "text_alt"; effect: SOFT_SHADOW BOTTOM; nomouse; scale; clip: "title2_rect";
			desc { "default"; color: 255 255 255 255; vis;
				color3: 255 255 255 255;
				color_class: "border_title_active";
				rel1.to: "e.text.title";
				rel2.to: "e.text.title";
				text.text_source: "e.text.title";
				text.font: "Sans"; text.size: 10;
				text.min: 0 1;
				text.align: 0.5 0.5;
				text.text_class: "title_bar_alt";
			}
			desc { "default" 0.1; inherit; color: 0 0 0 0; hid; }
		}
		rect { "title2_rect"; nomouse;
			desc { "default";
				rel1.to: "top-center-over";
				rel2.to: "top-center-over";
			}
		}
		E_SWALLOW_ICON("e.swallow.icon", "e.event.icon")
		E_EVENT_ICON_LEFT("e.event.icon", "title.area.clip", "title.area.clip")
	}

	programs {
		BORDER_DEFAULT_PROGRAMS()
	}
}

group { "e/widgets/border/squared/border";
	data.item: "shadow" "1";
	parts {
		SHADOW_PART("top-left", -9 -10, "bottom-right", 9 10)
		BORDER("top-left", 6 23, 6 23, 0.0 0.0, 3 22, 0.0 0.0, 3 0, "bd_top_lefts.png", 0.0 0.0, 0.0 0.0, 3 22)
		BORDER("top-right", 6 23, 6 23, 1.0 0.0, 0 22, 1.0 0.0, -6 0, "bd_top_rights.png", 1.0 0.0, 1.0 0.0, 0 22)
		BORDER4("bottom-left", 5 5, 5 5, 0.0 1.0, 2 -6, 0.0 1.0, 2 0, "bd_bottom_lefts.png", 0.0 1.0, 0.0 1.0, 5 -6, 1 5)
		BORDER4("bottom-right", 5 5, 5 5, 1.0 1.0, 0 -6, 1.0 1.0, -6 0, "bd_bottom_rights.png", 1.0 1.0, 1.0 1.0, 0 -6, 1 5)
		BORDER2("left-border", "top-left", 0.0 1.0, 0 0, "bottom-left", 0.0 0.0, 0 0)
		BORDER2("right-border", "top-right", 1.0 1.0, -1 0, "bottom-right", 1.0 0.0, 0 0 )
		BORDER3("top-center", 5 23, 9999 23, "top-left", 1.0 0.5, 0 0, "top-right", 0.0 0.5, -1 -2, "bd_top.png", 1.0 0.5, 0.0 0.5, 0 0)
		BORDER3("bottom-center", 5 5, 9999 5, "bottom-left", 1.0 1.0, 0 -6, "bottom-right", 0.0 1.0, -1 0, "bd_bottom.png", 1.0 1.0, 0.0 1.0, 0 -6)
		E_SWALLOW_CLIENT("e.swallow.client", "top-left", 0.0 1.0, 1 0, "bottom-right", 1.0 1.0, -2 -6)
		TITLE_CLIP("title.area.clip", 1 20, "top-left", 0.0 0.5, 5 0, "top-right", 1.0 0.5, -30 0, 255 255 255 255)
		//TITLE_CLIP("title.area.clip", 1 20, "min-clip", 1.0 0.5, 10 0, "top-right", 1.0 0.5, -30 0, 255 255 255 255)
		text { 	"e.text.title"; effect: SOFT_SHADOW BOTTOM; nomouse; scale; clip: "title.area.clip";
			desc { "default"; color: 255 255 255 255; hid;
				color3: 255 255 255 255;
				color_class: "border_title";
				rel1.to: "title.area.clip";
				rel1.relative: 0.0 0.5;
				rel1.offset: 0 4;
				rel2.to: "title.area.clip";
				rel2.relative: 1.0 0.5;
				rel2.offset: -5 0;
				text.text: "";
				text.font: "Sans"; text.size: 10;
				text.min: 0 1;
				text.align: 0.5 0.5;
				text.text_class: "title_bar";
			}
			desc { "default" 0.1; inherit; vis; }
		}
		BORDER("top-left-over", 6 23, 6 23, 0.0 0.0, 3 22, 0.0 0.0, 3 0, "bd_top_left_over.png", 0.0 0.0, 0.0 0.0, 3 22)
		BORDER("top-right-over", 6 23, 6 23, 1.0 0.0, 0 22, 1.0 0.0, -6 0, "bd_top_right.png", 1.0 1.0, 1.0 0.0, -5 23)
		BORDER3("top-center-over", 5 23, 9999 23, "top-left", 1.0 0.5, 0 0, "top-right", 0.0 0.5, -1 -2, "bd_top_over.png", 1.0 1.0, 0.0 1.0, -1 -2)

		MOVE_WINDOW("move-window", 1 22, 9999 22, "top-left", 0.0 0.0, 5 2, "top-right", 1.0 1.0, -7 -1, 255 0 0 0)
		PART_EVENT_MAP("e.event.resize.t", 0, "resize_t")
		PART_EVENT_MAP("e.event.titlebar", 0, "move-window")
		PART_EVENT_MAP("e.event.resize.r", 0, "right-border")
		PART_EVENT_MAP("e.event.resize.l", 0, "left-border")
		PART_EVENT_MAP("e.event.resize.br", 0, "bottom-right")
		PART_EVENT_MAP("e.event.resize.bl", 0, "bottom-left")
		PART_EVENT_MAP("e.event.resize.b", 0, "bottom-center")
		PART_EVENT_MAP("e.event.resize.tr", 0, "top-right")
		PART_EVENT_MAP("e.event.resize.tl", 0, "top-left")
		CLIPS("close-clip", 20 18, 20 18, "top-right", 1.0 0.0, 0 0, 0.0 1.0, -15 -8)
		CLIPS("max-clip", 20 18, 20 18, "close-clip", 1.0 0.0, 0 0, 0.0 1.0, -45 -1)
		CLIPS("min-clip", 20 18, 20 18, "max-clip", 1.0 0.0, 0 0, 0.0 1.0, -45 -1)
		BUTTONS("button-close", "close-clip", 15 15, "close-clip", "bd_button_close_unfocused.png")
		BUTTONS("button-max", "max-clip", 15 15, "max-clip", "bd_button_max_unfocused.png")
		BUTTONS("button-min", "min-clip", 15 15, "min-clip", "bd_button_min_unfocused.png")
		PART_EVENT_MAP("e.event.close", 1, "button-close")
		PART_EVENT_MAP("e.event.maximize", 1, "button-max")
		PART_EVENT_MAP("e.event.minimize", 1, "button-min")
		RESIZE_TOP("resize_t", 1 2, 9999 2, "top-left", 0.0 0.0, 0 0, "top-right", 0.0 0.0, -1 0, 255 0 0 0)
		text { "text_alt"; effect: SOFT_SHADOW BOTTOM; nomouse; scale; clip: "title2_rect";
			desc {"default"; color: 255 255 255 255; vis;
				color3: 255 255 255 255;
				color_class: "border_title_active";
				rel1.to: "e.text.title";
				rel2.to: "e.text.title";
				text.text_source: "e.text.title";
				text.font: "Sans"; text.size: 10;
				text.min: 0 1;
				text.align: 0.5 0.5;
				text.text_class: "title_bar_alt";
			}
			desc { "default" 0.1; inherit; color: 0 0 0 0; hid; }
		}
		rect { "title2_rect"; nomouse;
			desc { "default";
				rel1.to: "top-center-over";
				rel2.to: "top-center-over";
			}
		}
		E_SWALLOW_ICON("e.swallow.icon", "e.event.icon")
		E_EVENT_ICON("e.event.icon", "title.area.clip", "title.area.clip")
	}

	programs {
		BORDER_DEFAULT_PROGRAMS()
	}
}

group { "e/widgets/border/noresize_dialog/border";
	alias: "e/widgets/border/modal/border";
	data.item: "shadow" "1";
	parts {
		SHADOW_PART("top-left", -9 -10, "bottom-right", 9 10)
		BORDER("top-left", 6 23, 6 23, 0.0 0.0, 3 22, 0.0 0.0, 3 0, "bd_top_left.png", 0.0 0.0, 0.0 0.0, 3 22)
		BORDER("top-right", 6 23, 6 23, 1.0 0.0, 0 22, 1.0 0.0, -6 0, "bd_top_right.png", 1.0 0.0, 1.0 0.0, 0 22)
		BORDER4("bottom-left", 5 5, 5 5, 0.0 1.0, 3 -6, 0.0 1.0, 3 0, "bd_bottom_left.png", 0.0 1.0, 0.0 1.0, 5 -6, 1 5)
		BORDER4("bottom-right", 5 5, 5 5, 1.0 1.0, 0 -6, 1.0 1.0, -6 0, "bd_bottom_right.png", 1.0 1.0, 1.0 1.0, 0 -6, 1 5)
		BORDER2("left-border", "top-left", 0.0 1.0, 0 0, "bottom-left", 0.0 0.0, 0 0)
		BORDER2("right-border", "top-right", 1.0 1.0, -1 0, "bottom-right", 1.0 0.0, 0 0 )
		BORDER3("top-center", 5 23, 9999 23, "top-left", 1.0 0.5, 0 0, "top-right", 0.0 0.5, -1 -2, "bd_top.png", 1.0 0.5, 0.0 0.5, 0 0)
		BORDER3("bottom-center", 5 5, 9999 5, "bottom-left", 1.0 1.0, 0 -6, "bottom-right", 0.0 1.0, -1 0, "bd_bottom.png", 1.0 1.0, 0.0 1.0, 0 -6)
		E_SWALLOW_CLIENT("e.swallow.client", "top-left", 0.0 1.0, 1 0, "bottom-right", 1.0 1.0, -2 -6)
		TITLE_CLIP("title.area.clip", 1 20, "top-left", 0.0 0.5, 5 0, "top-right", 1.0 0.5, -30 0, 255 255 255 255)
		//TITLE_CLIP("title.area.clip", 1 20, "close-clip", 1.0 0.5, 10 0, "top-right", 1.0 0.5, -30 0, 255 255 255 255)
		text { "e.text.title"; effect: SOFT_SHADOW BOTTOM; nomouse; scale; clip: "title.area.clip";
			desc { "default"; color: 255 255 255 255; hid;
				color3: 255 255 255 255;
				color_class: "border_title";
				rel1.to: "title.area.clip";
				rel1.relative: 0.0 0.5;
				rel1.offset: 0 4;
				rel1.to: "title.area.clip";
				rel1.relative: 1.0 0.5;
				rel1.offset: -5 0;
				text.text: "";
				text.font: "Sans"; text.size: 10;
				text.min: 0 1;
				text.align: 0.5 0.5;
				text.text_class: "title_bar";
			}
			desc { "default" 0.1 inherit; vis; }
		}
		BORDER("top-left-over", 6 23, 6 23, 0.0 0.0, 3 22, 0.0 0.0, 3 0, "bd_top_left_over.png", 0.0 0.0, 0.0 0.0, 3 22)
		BORDER("top-right-over", 6 23, 6 23, 1.0 0.0, 0 22, 1.0 0.0, -6 0, "bd_top_right.png", 1.0 1.0, 1.0 0.0, -5 23)
		BORDER3("top-center-over", 5 23, 9999 23, "top-left", 1.0 0.5, 0 0, "top-right", 0.0 0.5, -1 -2, "bd_top_overm.png", 1.0 1.0, 0.0 1.0, -1 -2)
		MOVE_WINDOW("move-window", 1 22, 9999 22, "top-left", 0.0 0.0, 5 2, "top-right", 1.0 1.0, -7 -1, 255 0 0 0)
		PART_EVENT_MAP("e.event.titlebar", 1, "move-window")
		CLIPS("close-clip", 20 18, 20 18, "top-right", 1.0 0.0, 0 0, 0.0 1.0, -7 -8)
		//CLIPS("close-clip", 20 18, 20 18, "top-left", 0.0 0.0, 0 0, 0.0 1.0, 30 -8)
		BUTTONS("button-close", "close-clip", 15 15, "close-clip", "bd_button_close_unfocused.png")
		PART_EVENT_MAP("e.event.close", 1, "button-close")
		text { "text_alt"; effect: SOFT_SHADOW BOTTOM; nomouse; scale; clip: "title2_rect";
			desc { "default"; color: 255 255 255 255; vis;
				color3: 255 255 255 255;
				color_class: "border_title_active";
				rel1.to: "e.text.title";
				rel2.to: "e.text.title";
				text.text_source: "e.text.title";
				text.font: "Sans"; text.size: 10;
				text.min: 0 1;
				text.align: 0.5 0.5;
				text.text_class: "title_bar_alt";
			}
			desc {  "default" 0.1; inherit; color: 0 0 0 0; hid; }
		}
		rect { "title2_rect"; nomouse;
			desc { "default";
				rel1.to: "top-center-over";
				rel2.to: "top-center-over";
			}
		}
		E_SWALLOW_ICON("e.swallow.icon", "e.event.icon")
		E_EVENT_ICON("e.event.icon", "title.area.clip", "title.area.clip")
	}

	programs {
		BORDER_int_PROGRAMS()
	}
}

group { "e/widgets/border/dialog/border";
	alias: "e/widgets/border/noresize/border";
	data.item: "shadow" "1";
	parts {
		SHADOW_PART("top-left", -9 -10, "bottom-right", 9 10)
		BORDER("top-left", 6 23, 6 23, 0.0 0.0, 3 22, 0.0 0.0, 3 0, "bd_top_left.png", 0.0 0.0, 0.0 0.0, 3 22)
		BORDER("top-right", 6 23, 6 23, 1.0 0.0, 0 22, 1.0 0.0, -6 0, "bd_top_right.png", 1.0 0.0, 1.0 0.0, 0 22)
		BORDER4("bottom-left", 5 5, 5 5, 0.0 1.0, 3 -6, 0.0 1.0, 3 0, "bd_bottom_left.png", 0.0 1.0, 0.0 1.0, 5 -6, 1 5)
		BORDER4("bottom-right", 5 5, 5 5, 1.0 1.0, 0 -6, 1.0 1.0, -6 0, "bd_bottom_right.png", 1.0 1.0, 1.0 1.0, 0 -6, 1 5)
		BORDER2("left-border", "top-left", 0.0 1.0, 0 0, "bottom-left", 0.0 0.0, 0 0)
		BORDER2("right-border", "top-right", 1.0 1.0, -1 0, "bottom-right", 1.0 0.0, 0 0 )
		BORDER3("top-center", 5 23, 9999 23, "top-left", 1.0 0.5, 0 0, "top-right", 0.0 0.5, -1 -2, "bd_top.png", 1.0 0.5, 0.0 0.5, 0 0)
		BORDER3("bottom-center", 5 5, 9999 5, "bottom-left", 1.0 1.0, 0 -6, "bottom-right", 0.0 1.0, -1 0, "bd_bottom.png", 1.0 1.0, 0.0 1.0, 0 -6)
		E_SWALLOW_CLIENT("e.swallow.client", "top-left", 0.0 1.0, 1 0, "bottom-right", 1.0 1.0, -2 -6)
		//TITLE_CLIP("title.area.clip", 1 20, "close-clip", 1.0 0.5, 10 0, "top-right", 1.0 0.5, -30 0, 255 255 255 255)
		TITLE_CLIP("title.area.clip", 1 20, "top-left", 0.0 0.5, 5 0, "top-right", 1.0 0.5, -30 0, 255 255 255 255)
		text { 	"e.text.title"; effect: SOFT_SHADOW BOTTOM; nomouse;	 scale; clip: "title.area.clip";
			desc {"default"; color: 255 255 255 255; hid;
				color3: 255 255 255 255;
				color_class: "border_title";
				rel1.to: "title.area.clip";
				rel1.relative: 0.0 0.5;
				rel1.offset: 0 4;
				rel2.to: "title.area.clip";
				rel2.relative: 1.0 0.5;
				rel2.offset: -5 0;
				text.text: "";
				text.font: "Sans"; text.size: 10;
				text.min: 0 1;
				text.align: 0.5 0.5;
				text.text_class: "title_bar";
			}
			desc { "default" 0.1; inherit; vis; }
		}
		BORDER("top-left-over", 6 23, 6 23, 0.0 0.0, 3 22, 0.0 0.0, 3 0, "bd_top_left_over.png", 0.0 0.0, 0.0 0.0, 3 22)
		BORDER("top-right-over", 6 23, 6 23, 1.0 0.0, 0 22, 1.0 0.0, -6 0, "bd_top_right.png", 1.0 1.0, 1.0 0.0, -5 23)
		BORDER3("top-center-over", 5 23, 9999 23, "top-left", 1.0 0.5, 0 0, "top-right", 0.0 0.5, -1 -2, "bd_top_overm.png", 1.0 1.0, 0.0 1.0, -1 -2)
		MOVE_WINDOW("move-window", 1 22, 9999 22, "top-left", 0.0 0.0, 5 2, "top-right", 1.0 1.0, -7 -1, 255 0 0 0)
		PART_EVENT_MAP("e.event.resize.t", 0, "resize_t")
		PART_EVENT_MAP("e.event.titlebar", 0, "move-window")
		PART_EVENT_MAP("e.event.resize.r", 0, "right-border")
		PART_EVENT_MAP("e.event.resize.l", 0, "left-border")
		PART_EVENT_MAP("e.event.resize.br",0, "bottom-right")
		PART_EVENT_MAP("e.event.resize.bl", 0, "bottom-left")
		PART_EVENT_MAP("e.event.resize.b", 0, "bottom-center")
		PART_EVENT_MAP("e.event.resize.tr", 0, "top-right")
		PART_EVENT_MAP("e.event.resize.tl", 0, "top-left")
		CLIPS("close-clip", 20 18, 20 18, "top-right", 1.0 0.0, 0 0, 0.0 1.0, -7 -8)
		//CLIPS("close-clip", 20 18, 20 18, "top-left", 0.0 0.0, 0 0, 0.0 1.0, 30 -8)
		BUTTONS("button-close", "close-clip", 15 15, "close-clip", "bd_button_close_unfocused.png")
		PART_EVENT_MAP("e.event.close", 1, "button-close")
		RESIZE_TOP("resize_t", 1 2, 9999 2, "top-left", 0.0 0.0, 0 0, "top-right", 0.0 0.0, -1 0, 255 0 0 0)
		text { "text_alt"; effect: SOFT_SHADOW BOTTOM; nomouse; scale; clip: "title2_rect";
			desc { "default"; color: 255 255 255 255; vis;
				color3: 255 255 255 255;
				color_class: "border_title_active";
				rel1.to: "e.text.title";
				rel2.to: "e.text.title";
				text.text_source: "e.text.title";
				text.font: "Sans"; text.size: 10;
				text.min: 0 1;
				text.align: 0.5 0.5;
				text.text_class: "title_bar_alt";
			}
			desc { "default" 0.1; inherit; color: 0 0 0 0; hid; }
		}
		rect { "title2_rect"; nomouse;
			desc { "default";
				rel1.to: "top-center-over";
				rel2.to: "top-center-over";
			}
		}
		E_SWALLOW_ICON("e.swallow.icon", "e.event.icon")
		E_EVENT_ICON("e.event.icon", "title.area.clip", "title.area.clip")
	}

	programs {
		BORDER_int_PROGRAMS()
	}
}

group { "e/widgets/border/pixel/border";
	parts {
		rect { "client_clip";
			desc { "default";
				rel1.to_y: "e.swallow.client";
				rel2.to_y: "e.swallow.client";
			}
		}
		swallow { "e.swallow.client";
			desc { "default";
				rel1.offset: 1 1;
				rel2.offset: -2 -2;
			}
		}
		rect { "top";
			desc { "default"; color: 0 0 0 255; align: 0.0 0.0; max: 99999 1; }
			desc { "focused"; inherit; color: 255 255 255 255; color_class: "focus"; }
		}
		rect { "bottom";
			desc { "default"; color: 0 0 0 255; max: 99999 1;
				align: 0.0 1.0;
			}
			desc { "focused"; inherit; color: 255 255 255 255; color_class: "focus"; }
		}
		rect { "left";
			desc { "default"; color: 0 0 0 255; max: 1 99999;
				align: 0.0 0.0;
			}
			desc { "focused"; inherit; color: 255 255 255 255; color_class: "focus"; }
		}
		rect { "right";
			desc { "default"; color: 0 0 0 255; align: 1.0 0.0; max: 1 99999; }
			desc { "focused"; inherit; color: 255 255 255 255; color_class: "focus"; }
		}
		rect { "e.event.resize.tl";
			desc { "default"; color: 0 0 0 0; min: 32 4;
				align: 0.0 0.0;
				rel2.relative: 0.0 0.0;
			}
		}
		rect { "e.event.resize.t";
			desc { "default"; min: 0 4;	 color: 0 0 0 0;
				rel1.relative: 1.0 0.0;
				rel1.to_x: "e.event.resize.tl";
				rel2.relative: 0.0 0.0;
				rel2.to_x: "e.event.resize.tr";
				align: 0.5 0.0;
			}
		}
		rect { "e.event.resize.tr";
			desc { "default"; min: 32 4; color: 0 0 0 0;
				rel1.relative: 1.0 0.0;
				rel2.relative: 1.0 0.0;
				align: 1.0 0.0;
			}
		}
		rect { "e.event.resize.bl";
			desc { "default"; min: 32 5; color: 0 0 0 0;
				rel1.relative: 0.0 1.0;
				rel2.relative: 0.0 1.0;
				align: 0.0 1.0;
				fixed: 1 1;
			}
		}
		rect { "e.event.resize.b";
			desc { "default"; min: 0 5; color: 0 0 0 0;
				rel1.relative: 1.0 1.0;
				rel1.to_x: "e.event.resize.tl";
				rel2.relative: 0.0 1.0;
				rel2.to_x: "e.event.resize.tr";
				align: 0.5 1.0;
				fixed: 0 1;
			}
		}
		rect { "e.event.resize.br";
			desc { "default"; min: 32 5; color: 0 0 0 0;
				rel1.relative: 1.0 1.0;
				rel2.relative: 1.0 1.0;
				align: 1.0 1.0;
				fixed: 1 1;
			}
		}
	}

	programs {
		program {
			signal: "e,state,focused"; source: "e";
			action: STATE_SET "focused" 0.0;
			target: "top";
			target: "bottom";
			target: "left";
			target: "right";
		}
		program {
			signal: "e,state,unfocused"; source: "e";
			action: STATE_SET "default" 0.0;
			target: "top";
			target: "bottom";
			target: "left";
			target: "right";
		}
	}
}

group { "e/widgets/border/default/move";
	images.image: "menuitem.png" COMP;
	parts {
		part { "base"; nomouse;
			desc { "default";
				image.normal: "menuitem.png";
				image.border: 4 4 4 4;
				fill.smooth: 0;
			}
		}
		rect { "icon"; nomouse;
			desc { "default"; color: 255 255 255 0; min: 0 0; max: 0 0;
				align: 0.0 0.5;
				fixed: 1 1;
				rel1.offset: 2 2;
				rel2.relative: 0.0 1.0;
				rel2.offset: 2 -3;
			}
		}
		text { "e.text.label"; scale;
			desc { "default"; color: 0 0 0 255; color_class: "move_text";
				rel1.to_x: "icon";
				rel1.offset: 2 4;
				rel1.relative: 1.0 0.0;
				rel2.offset: -5 -5;
				text.text: "X Y";
				text.font: "Sans"; text.size: 10;
				text.align: 0.5 0.5;
				text.min: 1 1;
				text.text_class: "move_text";
			}
		}
	}
}

group { "e/widgets/border/default/resize";
	images.image: "menuitem.png" COMP;
	parts {
		part { "base"; nomouse;
			desc { "default";
				image.normal: "menuitem.png";
				image.border: 4 4 4 4;
				fill.smooth: 0;
			}
		}
		rect { "icon"; nomouse;
			desc { "default"; color: 255 255 255 0; min: 0 0; max: 0 0;
				align: 0.0 0.5;
				fixed: 1 1;
				rel1.offset: 2 2;
				rel2.relative: 0.0 1.0;
				rel2.offset: 2 -3;
			}
		}
		text { "e.text.label"; scale;
			desc { "default"; color: 0 0 0 255; color_class: "resize_text";
				rel1.to_x: "icon";
				rel1.offset: 2 4;
				rel1.relative: 1.0 0.0;
				rel2.offset: -5 -5;
				text.text: "WxH";
				text.font: "Sans"; text.size: 10;
				text.align: 0.5 0.5;
				text.min: 1 1;
				text.text_class: "resize_text";
			}
		}
	}
}
