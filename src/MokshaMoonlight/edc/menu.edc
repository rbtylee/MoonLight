group { "e/widgets/menu/default/background";
	images.image: "base_bg.png" COMP;
	parts {
		image { "base"; nomouse;
			desc { "default";
				image.normal: "base_bg.png";
				image.border: 2 2 2 2;
				fill.smooth: 0;
			}
		}
		swallow { "e.swallow.content";
			desc { "default";
				rel1.to: "base";
				rel1.relative: 0.0 0.0;
				rel1.offset: 3 2;
				rel2.relative: 1.0 1.0;
				rel2.offset: -5 -5;
			}
		}
	}
}

group { "e/widgets/menu/default/separator";
	images.image: "menu_sep.png" COMP;
	parts {
		part { "separator"; nomouse;
			desc { "default"; min: 16 2;
				rel1.offset: 2 2;
				rel2.offset: -3 -3;
				image.normal: "menu_sep.png";
				image.border: 2 2 0 0;
				fill.smooth: 0;
			}
		}
	}
}

group { "e/widgets/menu/default/item_bg";
	alias: "e/widgets/menu/default/submenu_bg";
	images.image: "menuitem.png" COMP;
	parts {
		part { "bg"; nomouse;
			desc { "default"; hid;
				color: 255 255 255 0;
				rel1.relative: 0.0 0.0;
				rel1.offset: -5 -3;
				rel2.relative: 1.0 1.0;
				rel2.offset: 4 5;
				image.normal: "menuitem.png";
				image.border: 4 4 4 4;
				fill.smooth: 0;
			}
			desc { "selected"; inherit; vis;
				color: 255 255 255 255;
				rel1.relative: 0.0 0.0;
				rel1.offset: -2 0;
				rel2.relative: 1.0 1.0;
				rel2.offset: 1 0;
			}
		}
		swallow { "e.swallow.content";
			desc { "default";
				align: 0.0 0.0;
				rel1.offset: 2 1;
				rel2.offset: -3 -2;
			}
		}
		rect { "events";
      desc { "default"; color: 0 0 0 0; }
    }
	}

	programs {
		program { name: "sel";
			signal: "e,state,selected";
			source: "e";
			action: STATE_SET "selected" 0.0;
			transition: LINEAR 0.2;
			target: "bg";
		}
		program { name: "unsel";
			signal: "e,state,unselected";
			source: "e";
			action: STATE_SET "default" 0.0;
			transition: LINEAR 0.1;
			target: "bg";
		}
	}
}

group { "e/widgets/menu/default/icon";
	parts {
		rect { "clip";
			desc { "default"; color: 255 255 255 255; }
			desc { "disabled"; color: 255 255 255 128; }
		}
		swallow { "e.swallow.content"; clip: "clip";
			desc { "default";
				rel1.relative: 0.0 0.0;
				rel1.offset: 2 2;
				rel2.relative: 1.0 1.0;
				rel2.offset: -3 -3;
			}
		}
	}

	programs {
		program { name: "enable"; /* enable */
			signal: "e,state,enable";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "clip";
		}
		program { name: "disable"; /* disable */
			signal: "e,state,disable";
			source: "e";
			action: STATE_SET "disabled" 0.0;
			target: "clip";
		}
	}
}

group { "e/widgets/menu/default/label";
	parts {
		text { "e.text.label"; effect: SOFT_SHADOW; nomouse; scale;
			desc { "default";
				rel1.relative: 0.0 0.0;
				rel1.offset: 1 -1;
				rel2.relative: 1.0 1.0;
				rel2.offset: -10 1;
				color: 0 0 0 255;
				color3: 0 0 0 0;
				color_class: "menu_item";
				text.font: "Sans"; text.size: 10;
				text.min: 1 1;
				text.align: 0.0 0.5;
				text.text_class: "menu_item";
			}
			desc { "selected"; inherit;
				color: 255 255 255 255;
				color3: 0 0 0 64;
				color_class: "menu_item";
			}
			desc { "disabled"; inherit;
				color: 110 110 110 255;
				color3: 0 0 0 0;
			}
		}
	}

	programs {
		program { name: "sel";
			signal: "e,state,selected";
			source: "e";
			action: STATE_SET "selected" 0.0;
			transition: LINEAR 0.2;
			target: "e.text.label";
		}
		program { name: "unsel";
			signal: "e,state,unselected";
			source: "e";
			action: STATE_SET "default" 0.0;
			transition: LINEAR 0.3;
			target: "e.text.label";
		}
		program { name: "enable";
			signal: "e,state,enable";
			source: "e";
			action: STATE_SET "default" 0.0;
			transition: LINEAR 0.3;
			target: "e.text.label";
		}
		program { name: "disable";
			signal: "e,state,disable";
			source: "e";
			action: STATE_SET "disabled" 0.0;
			//transition: LINEAR 0.3;
			target: "e.text.label";
		}
	}
}

group { "e/widgets/menu/default/submenu";
	images.image: "menu_arrow_normal.png" COMP;
	images.image: "menu_arrow_sel.png" COMP;
	parts {
		part { "arrow"; nomouse;
			desc { "default";
				min: 9 12; max: 9 12;
				rel1.relative: 0.0 0.0;
				rel1.offset: 0 1;
				rel2.relative: 1.0 1.0;
				rel2.offset: -3 -1;
				image.normal: "menu_arrow_normal.png";
			}
			desc { "selected"; inherit;
				image.normal: "menu_arrow_sel.png";
			}
		}
	}
	programs {
		program { name: "sel";
			signal: "e,state,selected";
			source: "e";
			action: STATE_SET "selected" 0.0;
			target: "arrow";
		}
		program { name: "unsel";
			signal: "e,state,unselected";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "arrow";
		}
	}
}

group { "e/widgets/menu/default/check";
	images.image: "check_base.png" COMP;
	images.image: "check_on.png" COMP;
	images.image: "check_sel.png" COMP;
	parts {
		part { "base"; nomouse; scale;
			desc { "default";
				min: 18 19; max: 18 19;
				image.normal: "check_base.png";
			}
		}
		part { "mark"; nomouse; clip: "mark_hold";
			desc { "default";
				rel1.to: "mark_hold";
				rel2.to: "mark_hold";
				image.normal: "check_on.png";
			}
			desc { "selected"; inherit;
				image.normal: "check_sel.png";
			}
		}
		rect { "mark_hold"; nomouse;
			desc { "default"; hid;
				color: 255 255 255 0;
				rel1.to: "base";
				rel1.offset: -5 -5;
				rel2.to: "base";
				rel2.offset: 4 4;
			}
			desc { "on"; inherit; vis;
				color: 255 255 255 255;
				rel1.offset: 0 0;
				rel2.offset: -1 -1;
			}
		}
	}

	programs {
		program { name: "sel";
			signal: "e,state,selected";
			source: "e";
			action: STATE_SET "selected" 0.0;
			target: "mark";
		}
		program { name: "unsel"; /* de-select */
			signal: "e,state,unselected";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "mark";
		}
		program { name: "on";
			signal: "e,state,on";
			source: "e";
			action: STATE_SET "on" 0.0;
			transition: LINEAR 0.15;
			target: "mark_hold";
		}
		program { name: "off";
			signal: "e,state,off";
			source: "e";
			action: STATE_SET "default" 0.0;
			transition: LINEAR 0.2;
			target: "mark_hold";
		}
	}
}

group { "e/widgets/menu/default/radio";
	images.image: "radio_base.png" COMP;
	images.image: "radio_on.png" COMP;
	images.image: "radio_sel.png" COMP;
	parts {
		part { "base"; nomouse; scale;
			desc { "default";
				min: 19 19; max: 19 19;
				image.normal: "radio_base.png";
			}
			desc { "selected"; inherit;
				image.normal: "menu_arrow_sel.png";
			}
		}
		part { "mark"; nomouse; clip: "mark_hold";
			desc { "default";
				rel1.to: "mark_hold";
				rel2.to: "mark_hold";
				image.normal: "radio_on.png";
			}
			desc { "selected"; inherit;
				image.normal: "radio_sel.png";
			}
		}
		rect { "mark_hold"; nomouse;
			desc { "default"; hid;
				color: 255 255 255 0;
				rel1.to: "base";
				rel1.offset: -5 -5;
				rel2.to: "base";
				rel2.offset: 4 4;
			}
			desc { "on"; inherit; vis;
				color: 255 255 255 255;
				rel1.offset: 0 0;
				rel2.offset: -1 -1;
			}
		}
	}
	programs {
		program { name: "sel";
			signal: "e,state,selected";
			source: "e";
			action: STATE_SET "selected" 0.0;
			target: "mark";
		}
		program { name: "unsel";
			signal: "e,state,unselected";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "mark";
		}
		program { name: "on";
			signal: "e,state,on";
			source: "e";
			action: STATE_SET "on" 0.0;
			transition: LINEAR 0.15;
			target: "mark_hold";
		}
		program { name: "off";
			signal: "e,state,off";
			source: "e";
			action: STATE_SET "default" 0.0;
			transition: LINEAR 0.2;
			target: "mark_hold";
		}
	}
}
