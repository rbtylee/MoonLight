group { "e/conf/randr/main";
	parts {
		rect { "bg";
			desc { "default"; color_class: "ilist_item_base";
				rel2.offset: -2 -4;
			}
		}
		rect { "clipper";
			desc { "default";
				rel1.to: "e.swallow.content";
				rel2.to: "e.swallow.content";
			}
		}
		swallow { "e.swallow.content"; clip: "clipper";
			desc { "default";
				STAY_ON("bg")
				rel1.offset: 3 3;
				rel2.offset: -4 -4;
			}
		}
		image { "shadow"; nomouse;
			desc { "default"; color: 255 255 255 255;
				image.normal: "inset_sunk.png";
				image.border: 5 5 5 5;
				image.middle: 0;
				STAY_ON("bg")
				rel1.offset: -1 -1;
				rel2.offset: 0 0;
				fill.smooth: 0;
			}
		}
	}
}

group { "e/conf/randr/main/monitor";
	parts {
		swallow { "e.swallow.stand";
			desc { "default";
				align: 0.5 1.0;
				rel1.relative: 0.0 0.5;
				rel2.offset: -1 30;
			}
		}
		swallow { "e.swallow.frame";
			desc { "default"; }
		}
	}
}

group { "e/conf/randr/main/frame";
	images.image: "hole_tiny.png" COMP;
	// images.image: "led_tiny_orange.png" COMP;
	images.image: "led_tiny_green.png" COMP;
	images.image: "screen_bg.png" COMP;
	images.image: "screen_fg.png" COMP;
	images.image: "shine.png" COMP;
	images.image: "mini_white_glow_arrow_0.png" COMP;
	images.image: "mini_white_glow_arrow_2.png" COMP;
	images.image: "sym_down_light_normal.png" COMP;
	images.image: "sym_down_light_selected.png" COMP;
	images.image: "sym_up_light_normal.png" COMP;
	images.image: "sym_up_light_selected.png" COMP;
	images.image: "icon_system-shutdown.png" COMP;
	images.image: "icon_up_arrow.png" COMP;
	images.image: "glow_small.png" COMP;
	styles {
		style { "randr_name_style";
			base: "font=Sans font_size=12 text_class=randr_monitor align=center color=#ffff style=soft_shadow,bottom shadow_color=#00000050 wrap=word";
			tag: "br" "\n";
			tag: "hilight" "+ font=Sans:style=Bold";
		}
		style { "randr_resolution_style";
			base: "font=Sans font_size=10 text_class=randr_resolution align=center color=#ffffffff style=soft_shadow,bottom shadow_color=#00000050 wrap=mixed align=center";
			tag: "br" "\n";
			tag: "hilight" "+ font=Sans:style=Bold";
		}
		style { "randr_position_style";
			base: "font=Sans font_size=10 text_class=randr_position align=center color=#ffffffff style=soft_shadow,bottom shadow_color=#00000050 wrap=mixed align=center";
			tag: "br" "\n";
			tag: "hilight" "+ font=Sans:style=Bold";
		}
	}
	script {
		public refresh_open;
	}
	parts {
		image { "primary";
			desc { "default"; color_class: "focus"; hid;
				image.normal: "glow_small.png";
				image.border: 7 7 7 7;
				rel1.offset: -4 -4;
				rel2.offset: 3 3;
			}
			desc { "on"; inherit; vis; }
		}
		part { "base";
			desc { "default";
				image.normal: "screen_bg.png";
				image.border: 4 4 4 4;
			}
		}
		swallow { "e.swallow.preview"; clip: "clip";
			desc { "default";
				rel1.offset: 5 5;
				rel2.offset: -6 -11;
			}
		}
		rect { "clip";
			desc { "default";
				rel1.to: "e.swallow.preview";
				rel2.to: "e.swallow.preview";
			}
			desc { "off"; inherit; color: "#FFFFFF10"; }
		}
		box { "e.box.clone"; clip: "clone_clip";
			desc { "default";
				rel1.to: "e.swallow.preview";
				rel1.relative: 0.0 1.0;
				rel1.offset: 0 -27;
				rel2.relative: 1.0 0.0;
				rel2.to_x: "e.swallow.preview";
				rel2.to_y: "e.event.indicator";
				box.layout: "horizontal";
				box.padding: 2 0;
				box.align: 0.0 0.5;
				box.min: 1 1;
			}
		}
		rect { "clone_clip";
			desc { "default";
				rel1.to: "e.box.clone";
				rel2.to: "e.box.clone";
			}
		}
		rect { "drop_zone"; nomouse;
			desc { "default"; hid;
				rel1.to: "e.swallow.preview";
				rel2.to: "e.swallow.preview";
			}
			desc { "active"; inherit; color: "#3399FF80"; vis; }
		}
		part { "hole"; nomouse;
			desc { "default"; min: 4 4; max: 4 4;
				rel1.offset: 4 -5;
				rel1.relative: 0.0 1.0;
				rel2.offset: 4 -5;
				rel2.relative: 0.0 1.0;
				align: 0.0 1.0;
				image.normal: "hole_tiny.png";
				fixed: 1 1;
			}
		}
		part { "shine"; nomouse;
			desc { "default";
				image.normal: "screen_fg.png";
				image.border: 4 4 4 4;
			}
		}
		part { "led"; nomouse;
			desc { "default"; min: 10 10; max: 10 10;
				rel1.to: "hole";
				rel2.to: "hole";
				image.normal: "led_tiny_green.png";
				fixed: 1 1;
			}
			desc { "pulse"; inherit; color: "#FFFFFF80"; }
			desc { "off"; inherit; hid; }
		}
		textblock { "e.text.name"; nomouse; scale;
			desc { "default";
				rel1.relative: 0.5 0.5;
				rel1.to: "e.swallow.preview";
				rel2.relative: 0.5 0.5;
				rel2.to: "e.swallow.preview";
				align: 0.5 1.0;
				text.style: "randr_name_style";
				text.min: 1.0 1.0;
				text.ellipsis: -1;
			}
		}
		textblock { "e.text.resolution"; nomouse; scale;
			desc { "default";
				rel1.relative: 0.5 0.5;
				rel1.to: "e.swallow.preview";
				rel2.relative: 0.5 0.5;
				rel2.to: "e.swallow.preview";
				align: 0.5 0.0;
				text.style: "randr_resolution_style";
				text.min: 1.0 1.0;
				text.ellipsis: -1;
			}
			desc { "off"; inherit; hid; }
		}
		textblock { "e.text.position"; nomouse; clip: "clip"; scale;
			desc { "default";
				rel1.relative: 0.5 1.0;
				rel1.to_x: "e.swallow.preview";
				rel1.to_y: "e.text.resolution";
				rel2.relative: 0.5 0.5;
				rel2.to: "e.swallow.preview";
				align: 0.5 0.0;
				text.style: "randr_position_style";
				text.min: 1.0 1.0;
				text.ellipsis: -1;
			}
			desc { "off"; inherit; hid; }
		}
		part { "scr_shine"; nomouse;
			desc { "default";
				image.normal: "shine.png";
				rel1.offset: 0 -1;
				rel1.to: "base";
				rel2.relative: 1.0 0.0;
				rel2.offset: -1 3;
				rel2.to: "base";
				FIXED_SIZE(69, 5)
			}
		}
		part { "pwrhint"; nomouse;
			desc { "default"; color_class: "ilist_item";
				rel1.to: "hole";
				rel1.relative: 0.0 1.0;
				rel1.offset: 0 3;
				rel2.to: "hole";
				rel2.offset: -1 3;
				align: 0.5 0.0;
				FIXED_SIZE(10, 10)
				image.normal: "icon_up_arrow.png";
				fixed: 1 1;
			}
		}
		part { "pwrhint2"; nomouse; scale;
			desc { "default"; color_class: "ilist_item";
				rel1.to: "pwrhint";
				rel1.relative: 1.0 0.0;
				rel2.to: "pwrhint";
				align: 0.0 0.0;
				FIXED_SIZE(16, 16)
				image.normal: "icon_system-shutdown.png";
				fixed: 1 1;
			}
		}
		part { "rsz1"; nomouse;
			desc { "default";
				align: 0.0 0.0;
				rel1.relative: 0.0 0.0;
				rel2.relative: 0.0 0.0;
				rel1.to: "e.event.resize";
				rel2.to: "e.event.resize";
				image.normal: "mini_white_glow_arrow_2.png";
				FIXED_SIZE(10, 10)
			}
			desc { "pulse"; inherit; color: TRANSPARENT;
				rel1.relative: -1.0 -1.0;
				rel2.relative: -1.0 -1.0;
			}
		}
		part { "rsz2"; nomouse;
			desc { "default";
				align: 1.0 1.0;
				rel1.relative: 1.0 1.0;
				rel2.relative: 1.0 1.0;
				rel1.to: "e.event.resize";
				rel2.to: "e.event.resize";
				image.normal: "mini_white_glow_arrow_0.png";
				FIXED_SIZE(10, 10)
			}
			desc { "pulse"; color: TRANSPARENT; inherit;
				rel1.relative: 2.0 2.0;
				rel2.relative: 2.0 2.0;
			}
		}
		rect { "rotc";
			desc { "default"; max: 1 1; color: "#00000000";
				rel1.offset: 16 16;
				rel2.offset: -17 -17;
				align: 0.9 0.1;
			}
		}
		part { "rot1"; nomouse;
			desc { "default";
				align: 0.0 0.0;
				rel1.relative: 0.0 0.0;
				rel2.relative: 0.0 0.0;
				rel1.to: "e.event.rotate";
				rel2.to: "e.event.rotate";
				image.normal: "mini_white_glow_arrow_2.png";
				FIXED_SIZE(10, 10)
				map.on: 1;
				map.smooth: 1;
				map.rotation.center: "rotc";
			}
			desc { "pulse"; inherit; color: TRANSPARENT;
				map.rotation.z: -60;
			}
		}
		part { "rot2"; nomouse;
			desc { "default";
				align: 1.0 1.0;
				rel1.relative: 1.0 1.0;
				rel2.relative: 1.0 1.0;
				rel1.to: "e.event.rotate";
				rel2.to: "e.event.rotate";
				image.normal: "mini_white_glow_arrow_0.png";
				FIXED_SIZE(10, 10)
				map.on: 1;
				map.smooth: 1;
				map.rotation.center: "rotc";
			}
			desc { "pulse"; inherit; color: TRANSPARENT;
				map.rotation.z: 60;
			}
		}
		swallow { "e.swallow.refresh"; clip: "clip";
			desc { "default";
				rel1.to_y: "e.swallow.preview";
				rel1.to_x: "e.event.arrow.show";
				rel1.relative: 1.0 0.0;
				rel2.to: "e.swallow.preview";
				rel2.relative: 0.0 0.0;
				align: 0.0 1.0;
			}
			desc { "expanded"; inherit;
				align: 0.0 0.0;
			}
		}
		rect { "arrow1clip";
			desc { "default";
				rel1.to: "e.event.arrow.show";
				rel2.to: "e.event.arrow.show";
			}
			desc { "expanded"; inherit; hid; }
		}
		rect { "arrow2clip";
			desc { "default"; hid;
				rel1.to: "e.event.arrow.show";
				rel2.to: "e.event.arrow.show";
			}
			desc { "expanded"; inherit; vis; }
		}
		part { "arrow1"; nomouse; clip: "arrow1clip";
			desc { "default";
				rel1.to: "e.event.arrow.show";
				rel2.to: "e.event.arrow.show";
				image.normal: "sym_down_light_normal.png";
				FIXED_SIZE(15, 15)
			}
			desc { "clicked"; inherit;
				image.normal: "sym_down_light_selected.png";
			}
		}
		part { "arrow2"; nomouse; clip: "arrow2clip";
			desc { "default";
				rel1.to: "e.event.arrow.show";
				rel2.to: "e.event.arrow.show";
				image.normal: "sym_up_light_normal.png";
				FIXED_SIZE(15, 15)
			}
			desc { "clicked"; inherit;
				image.normal: "sym_up_light_selected.png";
			}
		}
		rect { "e.event.arrow.show";
			desc { "default"; color: "#00000000"; max: 21 21;
				align: 0.0 0.0;
			}
		}
		rect { "e.event.rotate";
			desc { "default"; color: "#00000000"; max: 21 21;
				align: 1.0 0.0;
			}
			desc { "disabled"; inherit; hid; }
		}
		spacer { "ind";
			desc { "default"; max: 21 21;
				align: 0.0 1.0;
			}
		}
		rect { "e.event.indicator";
			desc { "default"; color: "#00000000";
				align: 0.0 1.0;
				rel2.to_y: "pwrhint2";
				rel2.to_x: "pwrhint2";
				rel1.relative: 0.0 0.0;
				rel1.to_y: "ind";
			}
			desc { "disabled"; inherit; hid; }
		}
		rect { "e.event.resize";
			desc { "default"; max: 21 21; color: "#00000000";
				align: 1.0 1.0;
			}
		}
	}

	programs {
		program {
			signal: "mouse,down,1"; source: "e.event.arrow.show";
			action: STATE_SET "clicked" 0.0;
			target: "arrow1";
			target: "arrow2";
		}
		program {
			signal: "mouse,up,1"; source: "e.event.arrow.show";
			action: STATE_SET "default" 0.0;
			target: "arrow1";
			target: "arrow2";
		}
		program {
			signal: "mouse,clicked,1"; source: "e.event.arrow.show";
			script {
				new shown;

				shown = get_int(refresh_open);
				if (shown) {
					run_program(PROGRAM:"refresh_hide");
					set_state(PART:"arrow1clip", "default", 0.0);
					set_state(PART:"arrow2clip", "default", 0.0);
				} else {
					run_program(PROGRAM:"refresh_show");
					set_state(PART:"arrow1clip", "expanded", 0.0);
					set_state(PART:"arrow2clip", "expanded", 0.0);
				}
				set_int(refresh_open, 1 - shown);
			}
		}
		program { "refresh_show";
			action: STATE_SET "expanded" 0.0;
			transition: BOUNCE 1.0 0.5 4;
			target: "e.swallow.refresh";
		}
		program { "refresh_hide";
			action: STATE_SET "default" 0.0;
			transition: ACCELERATE 0.5;
			target: "e.swallow.refresh";
		}
		program { "rrpulse1";
			signal: "show"; source: "";
			action: STATE_SET "pulse" 0.0;
			transition: DECELERATE 1.0;
			target: "rsz1";
			target: "rsz2";
			target: "rot1";
			target: "rot2";
			after: "rrpulse2";
		}
		program { "rrpulse2";
			action: STATE_SET "default" 0.0;
			target: "rsz1";
			target: "rsz2";
			target: "rot1";
			target: "rot2";
			after: "rrpulse1";
		}
		program { "pulse1";
			signal: "show"; source: "";
			action: STATE_SET "pulse" 0.0;
			transition: SINUSOIDAL 0.3;
			target: "led";
			after: "pulse2";
		}
		program { "pulse2";
			action: STATE_SET "default" 0.0;
			transition: SINUSOIDAL 0.3;
			target: "led";
			after: "pulse1";
		}
		program {
			signal: "e,state,enabled"; source: "e";
			action: STATE_SET "default" 0.0;
			target: "clip";
			target: "e.text.resolution";
			target: "e.text.position";
			target: "led";
			after: "pulse1";
		}
		program {
			signal: "e,state,disabled"; source: "e";
			action: ACTION_STOP;
			target: "pulse1";
			target: "pulse2";
			after: "off";
		}
		program { "off";
			signal: "e,state,disabled"; source: "e";
			action: STATE_SET "off" 0.0;
			target: "led";
			target: "clip";
			target: "e.text.resolution";
			target: "e.text.position";
		}
		program {
			signal: "e,state,drop,on"; source: "e";
			action: STATE_SET "active" 0.0;
			target: "drop_zone";
		}
		program {
			signal: "e,state,drop,off"; source: "e";
			action: STATE_SET "default" 0.0;
			target: "drop_zone";
		}
		program { "rotate_off";
			signal: "e,state,rotate_disabled"; source: "e";
			action: STATE_SET "disabled" 0.0;
			target: "e.event.rotate";
		}
		program {
			signal: "e,state,indicator,enabled"; source: "e";
			action: STATE_SET "default" 0.0;
			target: "e.event.indicator";
		}
		program {
			signal: "e,state,indicator,disabled"; source: "e";
			action: STATE_SET "disabled" 0.0;
			target: "e.event.indicator";
		}
		program {
			signal: "e,state,primary,off"; source: "e";
			action: STATE_SET "default" 0.0;
			target: "primary";
		}
		program {
			signal: "e,state,primary,on"; source: "e";
			action: STATE_SET "on" 0.0;
			target: "primary";
		}
		program {
			signal: "mouse,in"; source: "e.event.resize";
			action: SIGNAL_EMIT "e,action,resize,in" "e";
		}
		program {
			signal: "mouse,out"; source: "e.event.resize";
			action: SIGNAL_EMIT "e,action,resize,out" "e";
		}
		program {
			signal: "mouse,down,1"; source: "e.event.resize";
			action: SIGNAL_EMIT "e,action,resize,start" "e";
		}
		program {
			signal: "mouse,up,1"; source: "e.event.resize";
			action: SIGNAL_EMIT "e,action,resize,stop" "e";
		}
		program {
			signal: "mouse,in"; source: "e.event.rotate";
			action: SIGNAL_EMIT "e,action,rotate,in" "e";
		}
		program {
			signal: "mouse,out"; source: "e.event.rotate";
			action: SIGNAL_EMIT "e,action,rotate,out" "e";
		}
		program {
			signal: "mouse,down,1"; source: "e.event.rotate";
			action: SIGNAL_EMIT "e,action,rotate,start" "e";
		}
		program {
			signal: "mouse,up,1"; source: "e.event.rotate";
			action: SIGNAL_EMIT "e,action,rotate,stop" "e";
		}
		program {
			signal: "mouse,in"; source: "e.event.indicator";
			action: SIGNAL_EMIT "e,action,indicator,in" "e";
		}
		program {
			signal: "mouse,out"; source: "e.event.indicator";
			action: SIGNAL_EMIT "e,action,indicator,out" "e";
		}
		program {
			signal: "mouse,clicked,1"; source: "e.event.indicator";
			action: SIGNAL_EMIT "e,action,indicator,toggle" "e";
		}
	}
}

group { "e/conf/randr/main/stand";
	images.image: "screen_base.png" COMP;
	parts {
		part { "base";
			desc { "default"; min: 64 50; max: 64 99999;
				image.normal: "screen_base.png";
				image.border: 0 0 0 48;
				fill.smooth: 0;
			}
		}
	}
}

group { "e/conf/randr/main/mini";
	images.image: "hole_tiny.png" COMP;
	images.image: "led_tiny_green.png" COMP;
	images.image: "screen_bg.png" COMP;
	images.image: "screen_fg.png" COMP;
	parts {
		part { "base";
			desc { "default";
				image.normal: "screen_bg.png";
				image.border: 4 4 4 4;
			}
		}
		swallow { "e.swallow.preview"; clip: "clip";
			desc { "default";
				rel1.offset: 5 5;
				rel2.offset: -6 -11;
			}
		}
		rect { "clip";
			desc { "default";
				rel1.to: "e.swallow.preview";
				rel2.to: "e.swallow.preview";
			}
		}
		part { "hole"; nomouse;
			desc { "default"; min: 4 4; max: 4 4;
				rel1.offset: 4 -5;
				rel1.relative: 0.0 1.0;
				rel2.offset: 4 -5;
				rel2.relative: 0.0 1.0;
				align: 0.0 1.0;
				image.normal: "hole_tiny.png";
				fixed: 1 1;
			}
		}
		part { "shine"; nomouse;
			desc { "default";
				image.normal: "screen_fg.png";
				image.border: 4 4 4 4;
			}
		}
		part { "led"; nomouse;
			desc { "default"; min: 10 10; max: 10 10;
				rel1.to: "hole";
				rel2.to: "hole";
				image.normal: "led_tiny_green.png";
				fixed: 1 1;
			}
		}
	}
}
