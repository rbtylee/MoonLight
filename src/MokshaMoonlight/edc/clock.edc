group { "e/modules/clock/digital";
	script {
		public do_seconds, do_24h, tick_timer, horizontal;

		public clock_cb(val) {
			new year, month, day, yearday, weekday, hour, minute;
			new Float:second;
			new v, dosec, do24h, tim;
			new buf[32], bhour[3], bminute[3], bsecond[4], bampm[3];

			date(year, month, day, yearday, weekday, hour, minute, second);

			dosec = get_int(do_seconds);
			do24h = get_int(do_24h);

			if (do24h) {
				strcat(bampm, "");
				if (hour < 10)
					snprintf(bhour, sizeof(bhour), "0%d", hour);
				else
					snprintf(bhour, sizeof(bhour), "%d", hour);

			} else {
				v = hour % 12;

				if (hour >= 12)
					strcat(bampm, "pm");
				else
					strcat(bampm, "am");

				if (v == 0)
					v = 12;

				if (v < 10)
					snprintf(bhour, sizeof(bhour), "0%d", v);
				else
					snprintf(bhour, sizeof(bhour), "%d", v);
			}

			if (minute < 10)
				snprintf(bminute, sizeof(bminute), "0%d", minute);
			else
				snprintf(bminute, sizeof(bminute), "%d", minute);

			if (dosec) {
				v = round(second);
				if (v < 10)
					snprintf(bsecond, sizeof(bsecond), ":0%d", v);
				else
					snprintf(bsecond, sizeof(bsecond), ":%d", v);
			} else
				strcat(bsecond, "");

			snprintf(buf, sizeof(buf), "%s:%s%s%s",
						bhour, bminute, bsecond, bampm);
			set_text(PART:"time", buf);

			if (dosec) {
				v = round(second);
				tim = timer(1.0 - (second - v), "clock_cb", 1);
			} else {
				tim = timer(60.0 - (second), "clock_cb", 1);
			}
			set_int(tick_timer, tim);
		}

		public restart_clock() {
			new tim;
			tim = get_int(tick_timer);
			if (tim) {
				cancel_timer(tim);
				set_int(tick_timer, 0);
			}
			clock_cb(0);
		}
	}
	parts {
		rect { "time-area";
			desc { "default"; color: TRANSPARENT; }
			desc { "show-date"; inherit;
				rel2.relative: 1.0 0.0;
				rel2.to: "e.text.today";
			}
		}
		text { "time"; effect: SHADOW; scale;
			desc { "default"; color: "#000000";
				color3: TRANSPARENT;
				rel1.to: "time-area";
				rel2.to: "time-area";
				text.text_class: "clock";
				text.size: 14;
				text.fit: 1 1;
				text.size_range: 9 72;
				text.text: "--:--";
				text.ellipsis: -1;
				text.align: 0.5 0.5;
			}
			desc { "horizontal"; inherit;
				text.fit: 0 1;
				text.min: 1 0;
			}
			desc { "vertical"; inherit;
				text.fit: 1 0;
				text.min: 0 1;
			}
		}
		text { "e.text.today"; effect: SHADOW; scale;
			desc { "default"; min: 0 8; max: 9999 30; color: "#000000"; hid;
				color3: "#FFFFFF1E";
				align: 0.5 1.0;
				rel1.relative: 0.0 0.9;
				rel2.relative: 1.0 1.0;
				rel2.offset: -1 -1;
				text.text_class: "clock";
				text.size: 11;
				text.fit: 0 1;
				text.min: 1 0;
				text.size_range: 8 12;
				text.align: 0.5 1.0;
				text.ellipsis: -1;
				text.text: "Tod, 12/30/2011";
			}
			desc { "show-date"; inherit; vis; }
		}
		rect { "event"; mouse;
			desc { "default"; color: "#00000000"; }
		}
	}

	programs {
		program { name: "init";
			signal: "load";
			source: "";
			script {
				clock_cb(0);
			}
		}
		program { name: "today,show";
			signal: "e,state,date,on";
			source: "e";
			script {
				set_state(PART:"time-area", "show-date", 0.0);
				set_state(PART:"e.text.today", "show-date", 0.0);
				restart_clock();
			}
		}
		program { name: "today,hide";
			signal: "e,state,date,off";
			source: "e";
			script {
			set_state(PART:"time-area", "default", 0.0);
			set_state(PART:"e.text.today", "default", 0.0);
				restart_clock();
			}
		}
		program { name:"secon";
			signal: "e,state,seconds,on";
			source: "e";
			script {
				set_int(do_seconds, 1);
				restart_clock();
			}
		}
		program { name: "secoff";
			signal: "e,state,seconds,off";
			source: "e";
			script {
				set_int(do_seconds, 0);
				restart_clock();
			}
		}
		program { name: "24h";
			signal: "e,state,24h,on";
			source: "e";
			script {
				set_int(do_24h, 1);
				restart_clock();
			}
		}
		program { name: "12h";
			signal: "e,state,24h,off";
			source: "e";
			script {
				set_int(do_24h, 0);
				restart_clock();
			}
		}
		program { name: "horizontal";
			signal: "e,state,horizontal";
			source: "e";
			action: STATE_SET "horizontal" 0.0;
			target: "time";
			after: "horizontal-eval";
		}
		program { name: "horizontal-eval";
			script {
				set_int(horizontal, 1);
			}
		}
		program { name: "vertical";
			signal: "e,state,vertical";
			source: "e";
			action: STATE_SET "vertical" 0.0;
			target: "time";
			after: "vertical-eval";
		}
		program { name: "vertical-eval";
			script {
				set_int(horizontal, 0);
			}
		}
	}
}

group { "e/modules/clock/calendar/dayname";
	parts {
		text { "e.text.label"; nomouse; effect: SHADOW BOTTOM; scale;
			desc { "default"; color: "#000000";
				color3: TRANSPARENT;
				rel1.offset: 13 3;
				rel2.offset: -13 -3;
				text.font: "Sans"; text.size: 10;
				text.min: 1 1;
				text.align: 0.5 0.5;
				text.ellipsis: -1;
				text.text_class: "module_small";
			}
			desc { "weekend"; inherit; text.font: "Sans:style=Bold"; }
		}
	}

	programs {
		program {
			signal: "e,state,weekend"; source: "e";
			action: STATE_SET "weekend" 0.0;
			target: "e.text.label";
		}
		program {
			signal: "e,state,weekday"; source: "e";
			action: STATE_SET "default" 0.0;
			target: "e.text.label";
		}
	}
}

group { "e/modules/clock/calendar/day";
	images.image: "radio_base.png" COMP;
	script {
		public day_state = 0;
		evalstate() {
			new vv = get_int(day_state);

			if (vv & 2)
				{
					//set_state(PART:"e.text.label", "today", 0.0);
					set_state(PART:"rect", "today", 0.0);
				}
			else if (vv & 4)
				{
					set_state(PART:"e.text.label", "hidden", 0.0);
					set_state(PART:"rect", "default", 0.0);
				}
			else if (vv & 1)
				{
					set_state(PART:"e.text.label", "weekend", 0.0);
					set_state(PART:"rect", "default", 0.0);
				}
			else
				{
					set_state(PART:"e.text.label", "default", 0.0);
					set_state(PART:"rect", "default", 0.0);
				}
		}
	}
	parts {
		rect { "clip"; nomouse;
				desc { "default"; color: VISIBLE; }
    }
		image { "rect"; nomouse; scale;
			desc { "default"; color: VISIBLE; hid;
				rel1.offset: -3 -3;
				rel1.to: "e.text.label";
				rel2.offset: 2 1;
				rel2.to: "e.text.label";
				image.normal: "radio_base.png";
				image.border: 8 8 8 8;
			}
			desc { "today"; inherit; vis; }
		}
		rect { "day"; mouse;
			desc { "default"; color: "#00000000"; }
		}
		program { name: "prev_clicked";
			signal: "mouse,clicked,1*"; source: "day";
			action: SIGNAL_EMIT "e,action,date,get" "";
		}
		text { "e.text.label"; nomouse; effect: SHADOW BOTTOM; scale; clip: "clip";
			desc { "default"; color: "#000000";
				color3: "#00000000";
				text.font: "Sans"; text.size: 10;
				text.min: 1 1;
				text.ellipsis: -1;
				text.align: 0.5 0.5;
			}
			desc { "today"; inherit; vis; }
			desc { "weekend"; inherit; text.font: "Sans:style=Bold"; }
			desc { "hidden"; inherit; color: "#646464FF";
				color3: TRANSPARENT;
			}
			desc { "weeknumb"; inherit; color_class: "calendar_weekend";
				text.size: 7;
				text.align: 0.8 0.2;
			}
		}
	}

	programs {
		program {
			signal: "e,state,weekend"; source: "e";
			script {
				new vv = get_int(day_state);
				set_int(day_state, vv | 1);
				evalstate();
			}
		}
		program {
			signal: "e,state,weekday"; source: "e";
			script {
				new vv = get_int(day_state);
				set_int(day_state, vv & (~1));
				evalstate();
			}
		}
		program {
			signal: "e,state,today"; source: "e";
			script {
				new vv = get_int(day_state);
				set_int(day_state, vv | 2);
				evalstate();
			}
		}
		program {
			signal: "e,state,someday"; source: "e";
			script {
				new vv = get_int(day_state);
				set_int(day_state, vv & (~2));
				evalstate();
			}
		}
		program {
			signal: "e,state,hidden"; source: "e";
			script {
				new vv = get_int(day_state);
				set_int(day_state, vv | 4);
				evalstate();
			}
		}
		program {
			signal: "e,state,visible"; source: "e";
			script {
				new vv = get_int(day_state);
				set_int(day_state, vv & (~4));
				evalstate();
			}
		}
		program {
			signal: "e,state,week"; source: "e";
			action: STATE_SET "weeknumb" 0.0;
			target: "e.text.label";
		}
	}
}

group { "e/modules/clock/calendar";
	images.image: "menu_arrow_l_normal.png" COMP;
	images.image: "menu_arrow_normal.png" COMP;
	images.image: "menu_arrow_l_sel.png" COMP;
	images.image: "menu_arrow_sel.png" COMP;
	images.image: "inset_sunk.png" COMP;
	parts {
		text { "e.text.month"; mouse; scale;
			desc { "default"; color: "#000000";
				fixed: 0 1;
				align: 0.0 0.0;
				rel1.to_x: "prev";
				rel1.relative: 1.0 0.0;
				rel1.offset: 2 0;
				rel2.relative: 1.0 0.0;
				text.font: "Sans:style=Bold"; text.size: 12;
				text.align: 0.0 0.5;
				text.min: 0 1;
				text.ellipsis: -1;
				text.text_class: "module_normal";
			}
		}
		text { "e.text.year"; nomouse; scale;
			desc { "default"; color: "#000000";
				fixed: 0 1;
				align: 1.0 0.0;
				rel1.relative: 0.0 0.0;
				rel2.to_x: "next";
				rel2.relative: 0.0 0.0;
				text.font: "Sans:style=Bold"; text.size: 12;
				text.align: 1.0 0.5;
				text.min: 0 1;
				text.ellipsis: -1;
				text.text_class: "module_normal";
			}
		}
		part { "previm"; nomouse;
			desc { "default"; min: 9 12; max: 9 12;
				rel1.to: "prev";
				rel2.to: "prev";
				image.normal: "menu_arrow_l_normal.png";
			}
			desc { "pressed"; inherit;
				image.normal: "menu_arrow_l_sel.png";
			}
			desc { "over"; inherit;
				image.normal: "menu_arrow_l_sel.png";
			}
		}
		rect { "prev";
			desc { "default"; color: "#00000000";
				align: 0.0 0.5;
				aspect: 1.0 1.0; aspect_preference: VERTICAL;
				rel1.to_y: "e.text.month";
				rel1.relative: 0.0 0.0;
				rel1.offset: 0 0;
				rel2.to_y: "e.text.month";
				rel2.relative: 0.0 1.0;
			}

			program { name: "prev_down";
				signal: "mouse,down,1*"; source: "prev";
				action: STATE_SET "pressed" 0.0;
				target: "previm";
			}
			program { name: "prev_up";
				signal: "mouse,up,1"; source: "prev";
				action: STATE_SET "default" 0.0;
				target: "previm";
			}
			program { name: "prev_clicked";
				signal: "mouse,clicked,1*"; source: "prev";
				action: SIGNAL_EMIT "e,action,prev" "";
			}
		}
		part { "nextim"; nomouse;
			desc { "default"; min: 9 12; max: 9 12;
				rel1.to: "next";
				rel2.to: "next";
				image.normal: "menu_arrow_normal.png";
			}
			desc { "pressed"; inherit;
				image.normal: "menu_arrow_sel.png";
			}
			desc { "over"; inherit;
				image.normal: "menu_arrow_sel.png";
			}
		}
		rect { "next";
			desc { "default";
				align: 1.0 0.5; color: "#00000000";
				aspect: 1.0 1.0; aspect_preference: VERTICAL;
				rel1.to_y: "e.text.month";
				rel1.relative: 1.0 0.0;
				rel2.offset: 0 0;
				rel2.to_y: "e.text.month";
				rel2.relative: 1.0 1.0;
			}
			program { name: "next_down";
				signal: "mouse,down,1"; source: "next";
				action: STATE_SET "pressed" 0.0;
				target: "nextim";
			}
			program { name: "next_up";
				signal: "mouse,up,1"; source: "next";
				action: STATE_SET "default" 0.0;
				target: "nextim";
			}
			program { name: "next_clicked";
				signal: "mouse,clicked,1"; source: "next";
				action: SIGNAL_EMIT "e,action,next" "";
			}
		}
		rect { "inset";
			desc {"default"; color: "#F8F2E6FF";
				rel1.to: "e.table.daynames";
				rel1.relative: 0.0 0.0;
				rel1.offset: -2 -2;
				rel2.to_y: "e.table.days";
				rel2.relative: 1.0 1.0;
				rel2.offset: -3 -2;
			}
		}
		table { "e.table.daynames";
			desc { "default";
				fixed: 0 1;
				align: 0.5 0.0;
				rel1.to_y: "e.text.month";
				rel1.relative: 0.0 1.0;
				rel1.offset: 2 4;
				rel2.to_y: "e.text.month";
				rel2.relative: 1.0 1.0;
				rel2.offset: -11 0;
				step: 7 1;
				table.homogeneous: TABLE;
				table.padding: 9 1;
				table.align: 0.5 0.5;
				table.min: 1 1;
			}
			table {
				items {
#define D(x) \
item { \
	position: x 0; \
	span: 1 1; \
	source: "e/modules/clock/calendar/dayname"; \
	weight: 1.0 1.0; \
	align: -1.0 -1.0; \
}
					D(0) D(1) D(2) D(3) D(4) D(5) D(6) D(7)
#undef D
				}
			}
		}
		table { "e.table.days";
			desc { "default";
				rel1.to_y: "e.table.daynames";
				rel1.relative: 0.0 1.0;
				rel1.offset: 4 -3;
				rel2.offset: -11 0;
				step: 7 5;
				table.homogeneous: TABLE;
				table.padding: 7 1;
				table.align: 0.5 0.5;
				table.min: 1 1;
			}
			table {
				items {
#define D(x, y) \
item { \
	position: x y; \
	span: 1 1; \
	source: "e/modules/clock/calendar/day"; \
	weight: 1.0 1.0; \
	align: -1.0 -1.0; \
}
					D(0, 0) D(1, 0) D(2, 0) D(3, 0) D(4, 0) D(5, 0) D(6, 0) D(7, 0)
					D(0, 1) D(1, 1) D(2, 1) D(3, 1) D(4, 1) D(5, 1) D(6, 1) D(7, 1)
					D(0, 2) D(1, 2) D(2, 2) D(3, 2) D(4, 2) D(5, 2) D(6, 2) D(7, 2)
					D(0, 3) D(1, 3) D(2, 3) D(3, 3) D(4, 3) D(5, 3) D(6, 3) D(7, 3)
					D(0, 4) D(1, 4) D(2, 4) D(3, 4) D(4, 4) D(5, 4) D(6, 4) D(7, 4)
					D(0, 5) D(1, 5) D(2, 5) D(3, 5) D(4, 5) D(5, 5) D(6, 5) D(7, 5)
#undef D
				}
			}
		}
		image { "overlay"; nomouse;
			desc { "default";
				rel1.to: "inset";
				rel1.offset: -1 -1;
				rel2.to: "inset";
				rel2.offset: 2 0;
				image.normal: "inset_sunk.png";
				image.border: 10 10 10 10;
			}
		}
	}
}
