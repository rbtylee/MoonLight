group { "e/fileman/default/window/main";
	images.image: "dia_bg.png" COMP;
	images.image: "dia_topshad.png" COMP;
	images.image: "dia_botshad.png" COMP;
	parts {
		part { "base"; nomouse;
			desc { "default";
				color_class: "fileman_base";
				image.normal: "dia_bg.png";
				image.border: 15 15 1 1;
				fill.smooth: 0;
			}
		}
		part { "shadow"; nomouse;
			desc { "default";
				rel2.relative: 1.0 0.0;
				rel2.offset: -1 31;
				image.normal: "dia_topshad.png";
				color_class: "fileman_base";
				image.border: 15 15 1 1;
				fill.smooth: 0;
			}
		}
		swallow { "e.swallow.bg";
			//nomouse;
			desc { "default"; }
		}
		swallow { "e.swallow.favorites";
			desc { "default";
				align: 0.0 1.0;
				rel1.offset: 4 4;
				rel1.to: "region";
				rel2.offset: 4 -5;
				rel2.relative: 0.0 1.0;
				rel2.to: "region";
				fixed: 1 0;
			}
		}
		swallow { "e.swallow.content";
			desc { "default";
				rel1.offset: 4 4;
				rel1.to: "region";
				rel2.offset: -5 -5;
				rel2.to: "region";
				align: 1.0 1.0;
			}
			desc { state: "fav" 0.0; inherit;
				rel1.relative: 1.0 0.0;
				rel1.to_x: "e.swallow.favorites";
			}
		}
		swallow { "e.swallow.toolbar";
			desc { "default"; }
			desc { state: "tb_top" 0.0;
				align: 0.5 0.0;
				rel1.offset: 4 4;
				// XXX: this is a bug workaround. should be -4 4;
				rel2.offset: -9 4;
				rel2.relative: 1.0 0.0;
				fixed: 0 1;
			}
			desc { state: "tb_bottom" 0.0;
				align: 0.5 1.0;
				rel1.offset: 4 -5;
				rel1.relative: 0.0 1.0;
				// XXX: this is a bug workaround. should be -4 -5;
				rel2.offset: -9 -5;
				fixed: 0 1;
			}
		}
		spacer { "region";
			desc { "default"; }
			desc { state: "tb_top" 0.0; inherit;
				rel1.relative: 0.0 1.0;
				rel1.to_y: "e.swallow.toolbar";
			}
			desc { state: "tb_bottom" 0.0; inherit;
				rel2.relative: 1.0 0.0;
				rel2.to_y: "e.swallow.toolbar";
			}
			desc { state: "tb_left" 0.0; inherit;
				rel1.relative: 1.0 0.0;
				rel1.to_x: "e.swallow.toolbar";
			}
			desc { state: "tb_right" 0.0; inherit;
				rel2.relative: 0.0 1.0;
				rel2.to_x: "e.swallow.toolbar";
			}
		}
		part { "shadow2"; nomouse;
			desc { "default";
				rel1.relative: 0.0 1.0;
				rel1.offset: 0 -4;
				image.normal: "dia_botshad.png";
				color_class: "fileman_base";
				image.border: 15 15 1 1;
				fill.smooth: 0;
			}
		}
	}

	programs {
		program {
			signal: "e,favorites,enabled"; source: "e";
			action: STATE_SET "fav" 0.0;
			target: "e.swallow.content";
		}
		program {
			signal: "e,favorites,disabled"; source: "e";
			action: STATE_SET "default" 0.0;
			target: "e.swallow.content";
		}
		program {
			signal: "e,toolbar,left"; source: "e";
			action: STATE_SET "tb_left" 0.0;
			target: "region";
		}
		program {
			signal: "e,toolbar,right"; source: "e";
			action: STATE_SET "tb_right" 0.0;
			target: "region";
		}
		program {
			signal: "e,toolbar,top"; source: "e";
			action: STATE_SET "tb_top" 0.0;
			target: "e.swallow.toolbar";
			target: "region";
		}
		program {
			signal: "e,toolbar,bottom"; source: "e";
			action: STATE_SET "tb_bottom" 0.0;
			target: "e.swallow.toolbar";
			target: "region";
		}
		program {
			signal: "e,toolbar,disabled"; source: "e";
			action: STATE_SET "default" 0.0;
			target: "e.swallow.toolbar";
			target: "region";
		}
 }
}

group { "e/fileman/default/progress";
	min: 250 40;
	images.image: "icon_efm_file_del.png" COMP;
	parts {
		image { "bg"; nomouse;
			desc { "default";
				image.normal: "button-insensitive.png";
				image.border: 5 5 5 5;
			}
			desc { state: "need_attention" 0.0; color: 200 0 0 150; inherit; }
		}
		part { "icon"; nomouse; scale;
			desc { "default"; min: 32 32; max: 32 32;
				align: 0.01 0.5;
				rel1.to: "bg";
				rel2.to: "bg";
				image.normal: "icon_efm_dnd_ask.png";
			}
			desc { state: "copy" 0.0; inherit;
				image.normal: "icon_efm_dnd_copy.png";
			}
			desc { state: "move" 0.0; inherit;
				image.normal: "icon_efm_dnd_move.png";
			}
			desc { state: "delete" 0.0; inherit;
				image.normal: "icon_efm_file_del.png";
			}
		}
		image { "gauge_bg"; scale; nomouse;
			desc { "default";
				rel1.to: "icon";
				rel1.relative: 1.0 0.60;
				rel2.to: "bg";
				rel2.relative: 1.0 1.0;
				rel2.offset: -4 -5;
				image.normal: "inset_sunk.png";
				image.border: 6 6 6 6;
			}
		}
		rect { "gauge_confine"; scale; nomouse;
			desc { "default"; color: 0 255 0 0;
				rel1.to: "gauge_bg";
				rel1.offset: 1 1;
				rel2.to: "gauge_bg";
				rel2.offset: -2 -2;
			}
		}
		rect { "e.gauge.bar"; nomouse; scale;
			desc { "default"; min: 0 0; color: 55 55 55 100; }
			dragable {
				x: 1 1 0;
				y: 0 0 0;
				confine:"gauge_confine";
			}
		}
		text { "e.text.info"; nomouse; scale;
			desc { "default"; color: 0 0 0 255;
				rel1 {
					relative: 1.0 0.0;
					to_x: "icon";
					to_y: "bg";
				}
				rel2 {
					relative: 0.0 0.6;
					to_x: "bt_abort";
					to_y: "icon";
				}
				text {
					font: "Sans";
					size: 10;
					align: 0.0 0.5;
					text_class: "fileman_icon";
				}
			}
		}
		rect { "bt_abort"; nomouse;
			desc { "default"; min: 9 9; max: 9 9; color: 255 255 255 0;
				align: 1.0 0.5;
				aspect: 1.0 1.0;
				aspect_preference: VERTICAL;
				rel1 {
					relative: 1.0 0.0;
					to_x: "e.text.info";
					to_y: "bg";
				}
				rel2 {
					relative: 0.99 1.0;
					to_x: "bg";
					to_y: "e.text.info";
				}
			}
		}
		image { "bt_abort_bt"; nomouse;
			desc { "default"; color: 255 255 255 255; vis;
				rel1.to: "bt_abort";
				rel2.to: "bt_abort";
				image.normal: "slider.png";
			}
			desc { state: "active" 0.0; inherit; color: 255 255 255 0; hid;
				rel1.offset: 0 1;
				rel2.offset: -1 0;
			}
		}
		rect { "e.event.abort"; mouse;
			desc { "default";
				rel1.to: "bt_abort";
				rel2.to: "bt_abort";
				color: 0 0 0 0;
			}
		}
	}

	programs {
		program { name: "set_need_attention";
			signal: "e,action,set,need_attention";
			source: "e";
			action: STATE_SET "need_attention" 0.0;
			transition: SINUSOIDAL 1.0;
			target: "bg";
			after: "need_loop";
		}
		program { name: "need_loop";
			action: STATE_SET "default" 0.0;
			transition: SINUSOIDAL 1.0;
			target: "bg";
			after: "set_need_attention";
		}
		program { name: "set_normal";
			signal: "e,action,set,normal";
			source: "e";
			action: STATE_SET "default" 0.0;
			transition: SINUSOIDAL 1.0;
			target: "bg";
		}
		program { name: "set_icon_unknow";
			signal: "e,action,icon,unknow";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "icon";
		}
		program { name: "set_icon_copy";
			signal: "e,action,icon,copy";
			source: "e";
			action: STATE_SET "copy" 0.0;
			target: "icon";
		}
		program { name: "set_icon_move";
			signal: "e,action,icon,move";
			source: "e";
			action: STATE_SET "move" 0.0;
			target: "icon";
		}
		program { name: "set_icon_delete";
			signal: "e,action,icon,delete";
			source: "e";
			action: STATE_SET "delete" 0.0;
			target: "icon";
		}
		program { name: "bt_abort_down";
			signal: "mouse,down,*";
			source: "e.event.abort";
			action: STATE_SET "active" 0.0;
			target: "bt_abort_bt";
		}
		program { name: "bt_abort_up";
			signal: "mouse,up,*";
			source: "e.event.abort";
			action: STATE_SET "default" 0.0;
			target: "bt_abort_bt";
		}
		program { name: "bt_abort_click";
			signal: "mouse,clicked,*";
			source: "e.event.abort";
			action: SIGNAL_EMIT "e,fm,operation,abort" "";
		}
	}
}

group { "e/fileman/default/scrollframe";
	alias: "e/modules/everything/thumbview/main/scrollframe";
	images.image: "scrollbar_arrow_down.png" COMP;
	images.image: "scrollbar_arrow_left.png" COMP;
	images.image: "scrollbar_arrow_right.png" COMP;
	images.image: "scrollbar_arrow_up.png" COMP;
	images.image: "scrollbar-background.png" COMP;
	images.image: "slider-horiz-active.png" COMP;
	images.image: "slider-horiz.png" COMP;
	images.image: "slider-vert-active.png" COMP;
	images.image: "slider-vert.png" COMP;
	parts {
		rect { "bg";
			desc { "default"; color: 255 255 255 255; color_class: "scrollframe_base";
				rel1.to: "e.swallow.content";
				rel2.to: "e.swallow.content";
			}
	}
	swallow { "e.swallow.bg"; clip: "clipper";
		desc { "default";
			rel1.to: "bg";
			rel2.to: "bg";
		}
		}
		rect { "clipper"; nomouse;
			desc { "default"; }
		}
		swallow { "e.swallow.content"; clip: "clipper";
			desc { "default";
				rel1.offset: 1 1;
				rel2 {
					relative: 0.0  0.0;
					offset: -1	-1;
					to_x: "sb_vbar";
					to_y: "sb_hbar";
				}
			}
		}
		part { "conf_over"; nomouse;
			desc { "default";
				rel1.offset: -1 -1;
				rel2.offset: 0 0;
				image {
					normal: "inset_sunk.png";
					border: 7 7 7 7;
					middle: 0;
				}
				fill.smooth : 0;
			}
		}
		rect { "sb_vbar"; nomouse; scale;
			desc { "default"; min: 16 16;
				align: 1.0 0.0;
				rel1 {
					relative: 1.0 0.0;
					offset: -2 1;
				}
				rel2 {
					relative: 1.0 0.0;
					offset: -2 -1;
					to_y: "sb_hbar";
				}
			}
			desc { state: "hidden" 0.0; max: 0 99999; hid;
				rel1 {
					relative: 1.0 0.0;
					offset: -1 0;
				}
				rel2 {
					relative: 1.0 0.0;
					offset: -1 -1;
					to_y: "sb_hbar";
				}
			}
		}
		rect { "sb_vbar_base"; clip: "sb_vbar"; mouse;
			desc { "default"; color: 0 0 0 0;
				rel1 {
					relative: 0.0  1.0;
					offset: 0 -2;
					to: "sb_vbar_a1";
				}
				rel2 {
					relative: 1.0  0.0;
					offset: 0 1;
					to: "sb_vbar_a2";
				}
			}
		}
		part { "sb_vbar_runner"; clip: "sb_vbar"; nomouse;
			desc { "default"; max: 16 99999;
				rel1.to: "sb_vbar_base";
				rel1.offset: 0 0;
				rel2.to: "sb_vbar_base";
				image {
					normal: "scrollbar-background.png";
					border: 2 2 3 3;
				}
				fill.smooth: 0;
			}
		}
		rect { "sb_vbar_p1"; clip: "sb_vbar"; mouse;
			desc { "default"; color: 0 0 0 0;
				rel1 {
					relative: 0.0 1.0;
					to: "sb_vbar_a1";
				}
				rel2 {
					relative: 1.0 0.0;
					to: "e.dragable.vbar";
				}
			}
		}
		rect { "sb_vbar_p2"; clip: "sb_vbar"; mouse;
			desc { "default"; color: 0 0 0 0;
				rel1 {
					relative: 0.0 1.0;
					to: "e.dragable.vbar";
				}
				rel2 {
					relative: 1.0 0.0;
					to: "sb_vbar_a2";
				}
			}
		}
		part { "e.dragable.vbar"; clip: "sb_vbar"; mouse; scale;
			dragable {
				x: 0 0 0;
				y: 1 1 0;
				confine: "sb_vbar_base";
			}
			desc { "default"; min: 16 40; max: 16 99999;
				rel1 {
					relative: 0.5  0.5;
					offset: 0 0;
					to: "sb_vbar_base";
				}
				rel2 {
					relative: 0.5  0.5;
					offset: 0 0;
					to: "sb_vbar_base";
				}
				image {
					normal: "slider-vert.png";
					border: 0 0 10 10;
				}
				fill.smooth: 0;
			}
			desc { state: "clicked" 0.0; inherit;
				image.normal: "slider-vert-active.png";
			}
		}
		rect { "sb_vbar_a1"; clip: "sb_vbar"; mouse;
			desc { "default"; min: 16 16; color: 0 0 0 0;
				align: 0.5 0.0;
				aspect: 1.0 1.0;
				aspect_preference: HORIZONTAL;
				rel1 { to: "sb_vbar";
					relative: 0.0  0.0;
					offset: -1			0;
				}
				rel2 { to: "sb_vbar";
					relative: 1.0  0.0;
					offset: -1	0;
				}
			}
		}
		part { "sb_vbar_a1_arrow"; nomouse; clip: "sb_vbar";
			desc { "default"; max:16 16;
				rel1.to: "sb_vbar_a1";
				rel1.offset: 1 0;
				rel2.to: "sb_vbar_a1";
				image.normal: "scrollbar_arrow_up.png";
			}
			desc { state: "clicked" 0.0; inherit;
				rel1.offset: 0 -1;
				rel2.offset: -1 -2;
			}
		}
		rect { "sb_vbar_a2"; clip: "sb_vbar"; mouse;
			desc { "default"; min: 16 16;
				align: 0.5 1.0;
				aspect: 1.0 1.0;
				aspect_preference: HORIZONTAL;
				color: 0 0 0 0;
				rel1 {
					to: "sb_vbar";
					relative: 0.0  1.0;
					offset: -1			0;
				}
				rel2 {
					to: "sb_vbar";
					relative: 1.0  1.0;
					offset: -1	0;
				}
			}
		}
		image { "sb_vbar_a2_arrow"; nomouse; clip: "sb_vbar";
			desc { "default"; max: 16 16;
				rel1.to: "sb_vbar_a2";
				rel1.offset: 1 0;
				rel2.to: "sb_vbar_a2";
				image.normal: "scrollbar_arrow_down.png";
			}
			desc { state: "clicked" 0.0; inherit;
				rel1.offset: 0 1;
				rel2.offset: -1 0;
			}
		}
		rect { "sb_hbar"; nomouse; scale;
			desc { "default"; min: 16 16;
				align: 0.0 1.0;
				rel1 {
					relative: 0.0 1.0;
					offset: 1 -2;
				}
				rel2 {
					relative: 0.0 1.0;
					offset: -1 -2;
					to_x: "sb_vbar";
				}
			}
			desc { state: "hidden" 0.0;
				hid;
				rel1 {
					relative: 0.0 1.0;
					offset: 0 -1;
				}
				rel2 {
					relative: 0.0 1.0;
					offset: -1 -1;
					to_x: "sb_vbar";
				}
			}
		}
		rect { "sb_hbar_base"; clip: "sb_hbar"; mouse;
			desc { "default"; color: 0 0 0 0;
				rel1 {
					relative: 1.0 0.0;
					offset: -2 0;
					to: "sb_hbar_a1";
				}
				rel2 {
					relative: 0.0 1.0;
					offset: 1 0;
					to: "sb_hbar_a2";
				}
			}
		}
		part { "sb_hbar_runner"; clip: "sb_hbar"; nomouse;
			desc { "default"; max: 99999 16;
				rel1.to: "sb_hbar_base";
				rel1.offset: 0 0;
				rel2.to: "sb_hbar_base";
				image {
					normal: "scrollbar-background.png";
					border: 3 3 2 2;
				}
				fill.smooth: 0;
			}
		}
		rect { "sb_hbar_p1"; clip: "sb_hbar"; mouse;
			desc { "default"; color: 0 0 0 0;
				rel1 {
					relative: 1.0 0.0;
					to: "sb_hbar_a1";
				}
				rel2 {
					relative: 0.0 1.0;
					to: "e.dragable.hbar";
				}
			}
		}
		rect { "sb_hbar_p2"; clip: "sb_hbar"; mouse;
			desc { "default"; color: 0 0 0 0;
				rel1 {
					relative: 1.0 0.0;
					to: "e.dragable.hbar";
				}
				rel2 {
					relative: 0.0 1.0;
					to: "sb_hbar_a2";
				}
			}
		}
		part { "e.dragable.hbar"; clip: "sb_hbar"; mouse; scale;
			dragable {
				x: 1 1 0;
				y: 0 0 0;
				confine: "sb_hbar_base";
			}
			desc { "default"; min: 40 16; max: 99999 16;
				rel1 {
					relative: 0.5  0.5;
					offset: 0 0;
					to: "sb_hbar_base";
				}
				rel2 {
					relative: 0.5  0.5;
					offset: 0 0;
					to: "sb_hbar_base";
				}
				image {
					normal: "slider-horiz.png";
					border: 10 10 0 0;
				}
				fill.smooth: 0;
			}
			desc { state: "clicked" 0.0; inherit;
				image.normal: "slider-horiz-active.png";
			}
		}
		rect { "sb_hbar_a1"; clip: "sb_hbar"; mouse;
			desc { "default"; min: 16 16;
				align: 0.0 0.5;
				aspect: 1.0 1.0;
				aspect_preference: VERTICAL;
				color: 0 0 0 0;
				rel1 {
					to: "sb_hbar";
					relative: 0.0  0.0;
					offset: 0 -1;
				}
				rel2 {
					to: "sb_hbar";
					relative: 0.0  1.0;
					offset: 0 -1;
				}
			}
		}
		image { "sb_hbar_a1_arrow"; nomouse; clip: "sb_hbar";
			desc { "default"; max: 16 16;
				rel1.to: "sb_hbar_a1";
				rel1.offset: 0 1;
				rel2.to: "sb_hbar_a1";
				image.normal: "scrollbar_arrow_left.png";
			}
			desc { state: "clicked" 0.0; inherit;
				rel1.offset: -1 0;
				rel2.offset: -2 -1;
			}
		}
		rect { "sb_hbar_a2"; clip: "sb_hbar"; mouse;
			desc { "default";
				min: 16 16;
				align: 1.0 0.5;
				aspect: 1.0 1.0;
				aspect_preference: VERTICAL;
				color: 0 0 0 0;
				rel1 {
					to: "sb_hbar";
					relative: 1.0  0.0;
					offset: -1 -1;
				}
				rel2 {
					to: "sb_hbar";
					relative: 1.0  1.0;
					offset: -1	-1;
				}
			}
		}
		image { "sb_hbar_a2_arrow"; nomouse; clip: "sb_hbar";
			desc { "default"; max: 16 16;
				rel1.to: "sb_hbar_a2";
				rel1.offset: 0 1;
				rel2.to: "sb_hbar_a2";
				image.normal: "scrollbar_arrow_right.png";
			}
			desc { state: "clicked" 0.0;
				inherit;
				rel1.offset: 1 0;
				rel2.offset: 0 -1;
			}
		}
		box { "e.box.operations";
			desc { "default";
				rel2.to_x: "sb_vbar";
				rel2.to_y: "sb_hbar";
				rel2.relative: 0.0 0.0;
				box {
					layout: "vertical";
					padding: 0 0;
					align: 1.0 1.0;
				}
			}
		}
	}

	programs {
		program { name: "sb_vbar_show";
			signal: "e,action,show,vbar";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "sb_vbar";
		}
		program { name: "sb_vbar_hide";
			signal: "e,action,hide,vbar";
			source: "e";
			action: STATE_SET "hidden" 0.0;
			target: "sb_vbar";
		}
		program { name: "sb_hbar_show";
			signal: "e,action,show,hbar";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "sb_hbar";
		}
		program { name: "sb_hbar_hide";
			signal: "e,action,hide,hbar";
			source: "e";
			action: STATE_SET "hidden" 0.0;
			target: "sb_hbar";
		}
		program { name: "sb_vbar_a1_down";
			signal: "mouse,down,1";
			source: "sb_vbar_a1";
			action: STATE_SET "clicked" 0.0;
			target: "sb_vbar_a1_arrow";
		}
		program { name: "sb_vbar_a1_down2";
			signal: "mouse,down,1";
			source: "sb_vbar_a1";
			action: DRAG_VAL_STEP 0.0 -1.0;
			target: "e.dragable.vbar";
		}
		program { name: "sb_vbar_a1_up";
			signal: "mouse,up,1";
			source: "sb_vbar_a1";
			action: STATE_SET "default" 0.0;
			target: "sb_vbar_a1_arrow";
		}
		program { name: "sb_vbar_a2_down";
			signal: "mouse,down,1";
			source: "sb_vbar_a2";
			action: STATE_SET "clicked" 0.0;
			target: "sb_vbar_a2_arrow";
		}
		program { name: "sb_vbar_a2_down2";
			signal: "mouse,down,1";
			source: "sb_vbar_a2";
			action: DRAG_VAL_STEP 0.0 1.0;
			target: "e.dragable.vbar";
		}
		program { name: "sb_vbar_a2_up";
			signal: "mouse,up,1";
			source: "sb_vbar_a2";
			action: STATE_SET "default" 0.0;
			target: "sb_vbar_a2_arrow";
		}
		program { name: "sb_vbar_p1_down";
			signal: "mouse,down,1";
			source: "sb_vbar_p1";
			action: DRAG_VAL_PAGE 0.0 -1.0;
			target: "e.dragable.vbar";
		}
		program { name: "sb_vbar_p2_down";
			signal: "mouse,down,1";
			source: "sb_vbar_p2";
			action: DRAG_VAL_PAGE  0.0 1.0;
			target: "e.dragable.vbar";
		}
		program { name: "sb_vbar_down";
			signal: "mouse,down,1";
			source: "e.dragable.vbar";
			action: STATE_SET "clicked" 0.0;
			target: "e.dragable.vbar";
		}
		program { name: "sb_vbar_up";
			signal: "mouse,up,1";
			source: "e.dragable.vbar";
			action: STATE_SET "default" 0.0;
			target: "e.dragable.vbar";
		}
		program { name: "sb_hbar_a1_down";
			signal: "mouse,down,1";
			source: "sb_hbar_a1";
			action: STATE_SET "clicked" 0.0;
			target: "sb_hbar_a1_arrow";
		}
		program { name: "sb_hbar_a1_down2";
			signal: "mouse,down,1";
			source: "sb_hbar_a1";
			action: DRAG_VAL_STEP -1.0 0.0;
			target: "e.dragable.hbar";
		}
		program { name: "sb_hbar_a1_up";
			signal: "mouse,up,1";
			source: "sb_hbar_a1";
			action: STATE_SET "default" 0.0;
			target: "sb_hbar_a1_arrow";
		}
		program { name: "sb_hbar_a2_down";
			signal: "mouse,down,1";
			source: "sb_hbar_a2";
			action: STATE_SET "clicked" 0.0;
			target: "sb_hbar_a2_arrow";
		}
		program { name: "sb_hbar_a2_down2";
			signal: "mouse,down,1";
			source: "sb_hbar_a2";
			action: DRAG_VAL_STEP 1.0 0.0;
			target: "e.dragable.hbar";
		}
		program { name: "sb_hbar_a2_up";
			signal: "mouse,up,1";
			source: "sb_hbar_a2";
			action: STATE_SET "default" 0.0;
			target: "sb_hbar_a2_arrow";
		}
		program { name: "sb_hbar_p1_down";
			signal: "mouse,down,1";
			source: "sb_hbar_p1";
			action: DRAG_VAL_PAGE -1.0 0.0;
			target: "e.dragable.hbar";
		}
		program { name: "sb_hbar_p2_down";
			signal: "mouse,down,1";
			source: "sb_hbar_p2";
			action: DRAG_VAL_PAGE  1.0 0.0;
			target: "e.dragable.hbar";
		}
		program { name: "sb_hbar_down";
			signal: "mouse,down,1";
			source: "e.dragable.hbar";
			action: STATE_SET "clicked" 0.0;
			target: "e.dragable.hbar";
		}
		program { name: "sb_hbar_up";
			signal: "mouse,up,1";
			source: "e.dragable.hbar";
			action: STATE_SET "default" 0.0;
			target: "e.dragable.hbar";
		}
	}
}

group { "e/fileman/desktop/scrollframe";
	images.image: "scrollbar_arrow_down.png" COMP;
	images.image: "scrollbar_arrow_left.png" COMP;
	images.image: "scrollbar_arrow_right.png" COMP;
	images.image: "scrollbar_arrow_up.png" COMP;
	images.image: "scrollbar-background.png" COMP;
	images.image: "slider-horiz-active.png" COMP;
	images.image: "slider-horiz.png" COMP;
	images.image: "slider-vert-active.png" COMP;
	images.image: "slider-vert.png" COMP;
	images.image: "scrollbar-background.png" COMP;
	parts {
		rect { "clipper"; nomouse;
			desc { "default"; }
		}
		swallow { "e.swallow.content"; clip: "clipper";
			desc { "default";
				rel1.offset: 0 0;
				rel2 {
					relative: 0.0  0.0;
					offset: -1	-1;
					to_x: "sb_vbar";
					to_y: "sb_hbar";
				}
			}
		}
		rect { "sb_vbar"; nomouse; scale;
			desc { "default"; min: 16 16;
				align: 1.0 0.0;
				rel1 {
					relative: 1.0 0.0;
					offset: -2 1;
				}
				rel2 {
					relative: 1.0 0.0;
					offset: -2 -1;
					to_y: "sb_hbar";
				}
			}
			desc { state: "hidden" 0.0; max: 0 99999; hid; 
				rel1 {
					relative: 1.0 0.0;
					offset: -1 0;
				}
				rel2 {
					relative: 1.0 0.0;
					offset: -1 -1;
					to_y: "sb_hbar";
				}
			}
		}
		rect { "sb_vbar_base"; clip: "sb_vbar"; mouse;
			desc { "default"; color: 0 0 0 0;
				rel1 {
					relative: 0.0  1.0;
					offset: 0 -2;
					to: "sb_vbar_a1";
				}
				rel2 {
					relative: 1.0  0.0;
					offset: 0 1;
					to: "sb_vbar_a2";
				}
			}
		}
		part { "sb_vbar_runner"; clip: "sb_vbar"; nomouse;
			desc { "default"; max: 16 99999;
				rel1.to: "sb_vbar_base";
				rel1.offset: 0 0;
				rel2.to: "sb_vbar_base";
				image {
					normal: "scrollbar-background.png";
					border: 2 2 3 3;
				}
				fill.smooth: 0;
			}
		}
		rect { "sb_vbar_p1"; clip: "sb_vbar"; mouse;
			desc { "default"; color: 0 0 0 0;
				rel1 {
					relative: 0.0 1.0;
					to: "sb_vbar_a1";
				}
				rel2 {
					relative: 1.0 0.0;
					to: "e.dragable.vbar";
				}
			}
		}
		rect { "sb_vbar_p2"; clip: "sb_vbar"; mouse;
			desc { "default"; color: 0 0 0 0;
				rel1 {
					relative: 0.0 1.0;
					to: "e.dragable.vbar";
				}
				rel2 {
					relative: 1.0 0.0;
					to: "sb_vbar_a2";
				}
			}
		}
		part { "e.dragable.vbar"; clip: "sb_vbar"; mouse; scale;
			dragable {
				x: 0 0 0;
				y: 1 1 0;
				confine: "sb_vbar_base";
			}
			desc { "default"; min: 16 40; max: 16 99999;
				rel1 {
					relative: 0.5  0.5;
					offset: 0 0;
					to: "sb_vbar_base";
				}
				rel2 {
					relative: 0.5  0.5;
					offset: 0 0;
					to: "sb_vbar_base";
				}
				image {
					normal: "slider-vert.png";
					border: 0 0 10 10;
				}
				fill.smooth: 0;
			}
			desc { state: "clicked" 0.0; inherit;
				image.normal: "slider-vert-active.png";
			}
		}
		rect { "sb_vbar_a1"; clip: "sb_vbar"; mouse;
			desc { "default"; min: 16 16;
				align: 0.5 0.0;
				aspect: 1.0 1.0;
				aspect_preference: HORIZONTAL;
				color: 0 0 0 0;
				rel1 { to: "sb_vbar";
					relative: 0.0  0.0;
					offset: -1			0;
				}
				rel2 { to: "sb_vbar";
					relative: 1.0  0.0;
					offset: -1	0;
				}
			}
		}
		part { "sb_vbar_a1_arrow"; nomouse; clip: "sb_vbar";
			desc { "default";
				max:16 16;
				rel1.to: "sb_vbar_a1";
				rel1.offset: 1 0;
				rel2.to: "sb_vbar_a1";
				image.normal: "scrollbar_arrow_up.png";
			}
			desc { state: "clicked" 0.0; inherit;
				rel1.offset: 0 -1;
				rel2.offset: -1 -2;
			}
		}
		rect { "sb_vbar_a2"; clip: "sb_vbar"; mouse;
			desc { "default"; min: 16 16; color: 0 0 0 0;
				align: 0.5 1.0;
				aspect: 1.0 1.0;
				aspect_preference: HORIZONTAL;
				rel1 {
					to: "sb_vbar";
					relative: 0.0  1.0;
					offset: -1			0;
				}
				rel2 {
					to: "sb_vbar";
					relative: 1.0  1.0;
					offset: -1	0;
				}
			}
		}
		image { "sb_vbar_a2_arrow"; nomouse; clip: "sb_vbar";
			desc { "default"; max: 16 16;
				rel1.to: "sb_vbar_a2";
				rel1.offset: 1 0;
				rel2.to: "sb_vbar_a2";
				image.normal: "scrollbar_arrow_down.png";
			}
			desc { state: "clicked" 0.0; inherit;
				rel1.offset: 0 1;
				rel2.offset: -1 0;
			}
		}
		rect { "sb_hbar"; nomouse; scale;
			desc { "default"; min: 16 16;
				align: 0.0 1.0;
				rel1 {
					relative: 0.0 1.0;
					offset: 1 -2;
				}
				rel2 {
					relative: 0.0 1.0;
					offset: -1 -2;
					to_x: "sb_vbar";
				}
			}
			desc { state: "hidden" 0.0; hid;
				rel1 {
					relative: 0.0  1.0;
					offset: 0 -1;
				}
				rel2 {
					relative: 0.0 1.0;
					offset: -1 -1;
					to_x: "sb_vbar";
				}
			}
		}
		rect { "sb_hbar_base"; clip: "sb_hbar"; mouse;
			desc { "default"; color: 0 0 0 0;
				rel1 {
					relative: 1.0 0.0;
					offset: -2 0;
					to: "sb_hbar_a1";
				}
				rel2 {
					relative: 0.0 1.0;
					offset: 1 0;
					to: "sb_hbar_a2";
				}
			}
		}
		part { "sb_hbar_runner"; clip: "sb_hbar"; nomouse;
			desc { "default"; max: 99999 16;
				rel1.to: "sb_hbar_base";
				rel1.offset: 0 0;
				rel2.to: "sb_hbar_base";
				image {
					normal: "scrollbar-background.png";
					border: 3 3 2 2;
				}
				fill.smooth: 0;
			}
		}
		rect { "sb_hbar_p1"; clip: "sb_hbar"; mouse;
			desc { "default"; color: 0 0 0 0;
				rel1 {
					relative: 1.0 0.0;
					to: "sb_hbar_a1";
				}
				rel2 {
					relative: 0.0 1.0;
					to: "e.dragable.hbar";
				}
			}
		}
		rect { "sb_hbar_p2"; clip: "sb_hbar"; mouse;
			desc { "default"; color: 0 0 0 0;
				rel1 {
					relative: 1.0 0.0;
					to: "e.dragable.hbar";
				}
				rel2 {
					relative: 0.0 1.0;
					to: "sb_hbar_a2";
				}
			}
		}
		part { "e.dragable.hbar"; clip: "sb_hbar"; mouse; scale;
			dragable {
				x: 1 1 0;
				y: 0 0 0;
				confine: "sb_hbar_base";
			}
			desc { "default"; min: 40 16; max: 99999 16;
				rel1 {
					relative: 0.5  0.5;
					offset: 0 0;
					to: "sb_hbar_base";
				}
				rel2 {
					relative: 0.5  0.5;
					offset: 0 0;
					to: "sb_hbar_base";
				}
				image {
					normal: "slider-horiz.png";
					border: 10 10 0 0;
				}
				fill.smooth: 0;
			}
			desc { state: "clicked" 0.0; inherit;
				image.normal: "slider-horiz-active.png";
			}
		}
		rect { "sb_hbar_a1"; clip: "sb_hbar"; mouse;
			desc { "default"; min: 16 16;
				align: 0.0 0.5;
				aspect: 1.0 1.0;
				aspect_preference: VERTICAL;
				color: 0 0 0 0;
				rel1 {
					to: "sb_hbar";
					relative: 0.0  0.0;
					offset: 0 -1;
				}
				rel2 {
					to: "sb_hbar";
					relative: 0.0  1.0;
					offset: 0 -1;
				}
			}
		}
		image { "sb_hbar_a1_arrow"; nomouse; clip: "sb_hbar";
			desc { "default"; max: 16 16;
				rel1.to: "sb_hbar_a1";
				rel1.offset: 0 1;
				rel2.to: "sb_hbar_a1";
				image.normal: "scrollbar_arrow_left.png";
			}
			desc { state: "clicked" 0.0; inherit;
				rel1.offset: -1 0;
				rel2.offset: -2 -1;
			}
		}

		rect { "sb_hbar_a2"; clip: "sb_hbar"; mouse;
			desc { "default"; min: 16 16;
				align: 1.0 0.5;
				aspect: 1.0 1.0;
				aspect_preference: VERTICAL;
				color: 0 0 0 0;
				rel1 {
					to: "sb_hbar";
					relative: 1.0  0.0;
					offset: -1 -1;
				}
				rel2 {
					to: "sb_hbar";
					relative: 1.0  1.0;
					offset: -1	-1;
				}
			}
		}
		image { "sb_hbar_a2_arrow"; nomouse; clip: "sb_hbar";
			desc { "default"; max: 16 16;
				rel1.to: "sb_hbar_a2";
				rel1.offset: 0 1;
				rel2.to: "sb_hbar_a2";
				image.normal: "scrollbar_arrow_right.png";
			}
			desc { state: "clicked" 0.0; inherit;
				rel1.offset: 1 0;
				rel2.offset: 0 -1;
			}
		}
	}

	programs {
		program { name: "sb_vbar_show";
			signal: "e,action,show,vbar";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "sb_vbar";
		}
		program { name: "sb_vbar_hide";
			signal: "e,action,hide,vbar";
			source: "e";
			action: STATE_SET "hidden" 0.0;
			target: "sb_vbar";
		}
		program { name: "sb_hbar_show";
			signal: "e,action,show,hbar";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "sb_hbar";
		}
		program { name: "sb_hbar_hide";
			signal: "e,action,hide,hbar";
			source: "e";
			action: STATE_SET "hidden" 0.0;
			target: "sb_hbar";
		}

		program { name: "sb_vbar_a1_down";
			signal: "mouse,down,1";
			source: "sb_vbar_a1";
			action: STATE_SET "clicked" 0.0;
			target: "sb_vbar_a1_arrow";
		}
		program { name: "sb_vbar_a1_down2";
			signal: "mouse,down,1";
			source: "sb_vbar_a1";
			action: DRAG_VAL_STEP 0.0 -1.0;
			target: "e.dragable.vbar";
		}
		program { name: "sb_vbar_a1_up";
			signal: "mouse,up,1";
			source: "sb_vbar_a1";
			action: STATE_SET "default" 0.0;
			target: "sb_vbar_a1_arrow";
		}
		program { name: "sb_vbar_a2_down";
			signal: "mouse,down,1";
			source: "sb_vbar_a2";
			action: STATE_SET "clicked" 0.0;
			target: "sb_vbar_a2_arrow";
		}
		program { name: "sb_vbar_a2_down2";
			signal: "mouse,down,1";
			source: "sb_vbar_a2";
			action: DRAG_VAL_STEP 0.0 1.0;
			target: "e.dragable.vbar";
		}
		program { name: "sb_vbar_a2_up";
			signal: "mouse,up,1";
			source: "sb_vbar_a2";
			action: STATE_SET "default" 0.0;
			target: "sb_vbar_a2_arrow";
		}
		program { name: "sb_vbar_p1_down";
			signal: "mouse,down,1";
			source: "sb_vbar_p1";
			action: DRAG_VAL_PAGE 0.0 -1.0;
			target: "e.dragable.vbar";
		}
		program { name: "sb_vbar_p2_down";
			signal: "mouse,down,1";
			source: "sb_vbar_p2";
			action: DRAG_VAL_PAGE  0.0 1.0;
			target: "e.dragable.vbar";
		}
		program { name: "sb_vbar_down";
			signal: "mouse,down,1";
			source: "e.dragable.vbar";
			action: STATE_SET "clicked" 0.0;
			target: "e.dragable.vbar";
		}
		program { name: "sb_vbar_up";
			signal: "mouse,up,1";
			source: "e.dragable.vbar";
			action: STATE_SET "default" 0.0;
			target: "e.dragable.vbar";
		}
		program { name: "sb_hbar_a1_down";
			signal: "mouse,down,1";
			source: "sb_hbar_a1";
			action: STATE_SET "clicked" 0.0;
			target: "sb_hbar_a1_arrow";
		}
		program { name: "sb_hbar_a1_down2";
			signal: "mouse,down,1";
			source: "sb_hbar_a1";
			action: DRAG_VAL_STEP -1.0 0.0;
			target: "e.dragable.hbar";
		}
		program { name: "sb_hbar_a1_up";
			signal: "mouse,up,1";
			source: "sb_hbar_a1";
			action: STATE_SET "default" 0.0;
			target: "sb_hbar_a1_arrow";
		}
		program { name: "sb_hbar_a2_down";
			signal: "mouse,down,1";
			source: "sb_hbar_a2";
			action: STATE_SET "clicked" 0.0;
			target: "sb_hbar_a2_arrow";
		}
		program { name: "sb_hbar_a2_down2";
			signal: "mouse,down,1";
			source: "sb_hbar_a2";
			action: DRAG_VAL_STEP 1.0 0.0;
			target: "e.dragable.hbar";
		}
		program { name: "sb_hbar_a2_up";
			signal: "mouse,up,1";
			source: "sb_hbar_a2";
			action: STATE_SET "default" 0.0;
			target: "sb_hbar_a2_arrow";
		}
		program { name: "sb_hbar_p1_down";
			signal: "mouse,down,1";
			source: "sb_hbar_p1";
			action: DRAG_VAL_PAGE -1.0 0.0;
			target: "e.dragable.hbar";
		}
		program { name: "sb_hbar_p2_down";
			signal: "mouse,down,1";
			source: "sb_hbar_p2";
			action: DRAG_VAL_PAGE  1.0 0.0;
			target: "e.dragable.hbar";
		}
		program { name: "sb_hbar_down";
			signal: "mouse,down,1";
			source: "e.dragable.hbar";
			action: STATE_SET "clicked" 0.0;
			target: "e.dragable.hbar";
		}
		program { name: "sb_hbar_up";
			signal: "mouse,up,1";
			source: "e.dragable.hbar";
			action: STATE_SET "default" 0.0;
			target: "e.dragable.hbar";
		}
	}
}

group { "e/fileman/default/icon/variable";
	alias: "e/fileman/desktop/icon/variable";
	alias: "e/fileman/desktop/icon/fixed";
	images.image: "button-normal.png" COMP;
	images.image: "e17_mini_button_shadow2.png" COMP;
	images.image: "e17_fileman_thumb_bg.png" COMP;
	images.image: "icon_efm_dnd_copy.png" COMP;
	images.image: "icon_efm_dnd_ask.png" COMP;
	images.image: "icon_efm_dnd_move.png" COMP;
	script {
		public longpressed;
 }
	styles {
		style { "fileman_icon_name";
		base: "font=Sans font_size=10 text_class=fileman_icon align=center color=#000000ff wrap=mixed style=shadow,bottom shadow_color=#00000000 align=center ellipsis=1.0";
		}
		style { "fileman_icon_name_selected";
		base: "font=Sans font_size=10 text_class=fileman_icon align=center color=#000000ff wrap=mixed style=shadow,bottom shadow_color=#00000000 align=center ellipsis=1.0";
		}
	}
	parts {
		spacer { "label0"; scale;
		desc { "default"; min: 0 20; max: 99999 26;
			align: 0.5 1.0;
			rel1.offset: 4 -5;
			rel2.relative: 1.0 1.0;
			rel2.offset: -5 -5;
			fixed: 0 1;
		}
		}
		textblock { "label2"; nomouse; scale;
			desc { "default"; color: 0 0 0 255;
				align: 0.5 1.0;
				fixed: 1 1;
				rel1.to: "e.text.label";
				rel2.to: "e.text.label";
				text {
					style: "fileman_icon_name";
					align: 0.5 0.0;
					text_class: "fileman_icon";
					text_source: "e.text.label";
				}
			}
			desc { state: "selected" 0.0; inherit; hid; }
		}
		part { "bg";
			nomouse;
			desc { "default"; hid; color: 255 255 255 0;
				rel1 {
					relative: 0.0 0.0;
					offset: -5 -5;
				}
				rel2 {
					relative: 1.0 1.0;
					offset: 4 4;
				}
				image {
					normal: "button-normal.png";
					border: 12 12 4 12;
				}
			}
			desc { state: "selected" 0.0; inherit; color: 255 255 255 255; vis;
				rel1 {
					relative: 0.0 0.0;
					offset: -2 -2;
				}
				rel2 {
					relative: 1.0 1.0;
					offset: 1 1;
				}
			}
		}
		part { "icon_box_shadow"; nomouse;
			desc { "default"; hid;
				rel1 {
					to: "icon_box";
					relative: 0.0 0.0;
					offset: -1 -1;
				}
				rel2 {
					to: "icon_box";
					relative: 1.0 1.0;
					offset: 2 2;
				}
				image {
					normal: "e17_mini_button_shadow2.png";
					border: 6 6 6 6;
				}
			}
			desc { state: "visible" 0.0; inherit; vis; }
		}
		rect { "icon_box"; nomouse;
			desc { "default"; hid;
				align: 0.5 0.5;
				rel1 {
					to: "e.swallow.icon";
					relative: 0.0 0.0;
					offset: -1 -1;
				}
				rel2 {
					to: "e.swallow.icon";
					relative: 1.0 1.0;
					offset: 0 0;
				}
				color: 0 0 0 64;
			}
			desc { state: "visible" 0.0; inherit; vis; }
		}
		part { "icon_box_bg"; nomouse;
			desc { "default"; hid;
				rel1 {
					to: "icon_box";
					relative: 0.0 0.0;
					offset: 1 1;
				}
				rel2 {
					to: "icon_box";
					relative: 1.0 1.0;
					offset: -2 -2;
				}
				image.normal: "inv.png";
				fill {
					smooth: 0;
					size {
						relative: 0 0;
						offset: 32 32;
					}
				}
			}
			desc { state: "visible" 0.0;
				inherit;
				vis;
			}
		}
		rect { "icon0"; nomouse;
			desc { "default";
				align: 0.5 0.5;
				aspect: 1.0 1.0;
				aspect_preference: VERTICAL;
				hid;
				rel1 {
					relative: 0.0 0.0;
					offset: 2 2;
				}
				rel2 {
					to_y: "label0";
					relative: 1.0 0.0;
					offset: -3 -1;
				}
				color: 0 0 0 0;
			}
		}
		rect { "icon"; nomouse;
			desc { "default"; color: 0 0 0 0;
				align: 0.5 0.5;
				aspect: 1.0 1.0;
				aspect_preference: BOTH;
				hid;
				rel1.to: "icon0";
				rel2.to: "icon0"; 
			}
			desc { state: "min" 0.0; inherit; max: 0 0; }
			desc { state: "max" 0.0; inherit;
				rel1 {
					to: "icon0";
					relative: 0.0  0.0;
					offset: -4 -4;
				}
				rel2 {
					to: "icon0";
					relative: 1.0  1.0;
					offset: 3 3;
				}
			}
			desc { state: "max2" 0.0; inherit: "default" 0.0;
				rel1 {
					to: "icon0";
					relative: 0.0  0.0;
					offset: -2 -2;
				}
				rel2 {
					to: "icon0";
					relative: 1.0  1.0;
					offset: 1			1;
				}
			}
		}
		swallow { "e.swallow.icon";
			desc { "default";
				aspect: 1.0 1.0;
				aspect_preference: BOTH;
				align: 0.5 0.5;
				//					fixed: 1 1;
				rel1.to: "icon";
				rel2.to: "icon";
			}
		}
		textblock { "e.text.label"; effect: SOFT_SHADOW; nomouse; scale;
			desc { "default"; color: 224 224 224 255; hid;
				align: 0.5 1.0;
				fixed: 1 1;
				rel1.to: "label0";
				rel2.to: "label0";
				rel2.offset: -1 6; 
				color3: 0 0 0 64;
				text {
					style: "fileman_icon_name_selected";
					align: 0.5 0.0;
					text_class: "fileman_icon_selected";
				}
			}
			desc { state: "selected" 0.0; inherit; vis; }
		}
		rect { "event"; mouse;
			desc { "default"; color: 0 0 0 0; }
		}
		image { "dnd_action"; nomouse; norepeat;
			desc { "default"; color: 0 0 0 0; hid;
				image.normal: "icon_efm_dnd_copy.png"; 
			}
			desc { state: "visible" 0.0;
				aspect: 1.0 1.0;
				aspect_preference: BOTH;
				align: 1.0 1.0;
				min: 24 24;
				rel1.relative: 0.75 0.0;
				rel2.relative: 1.0 1.0;
				image.normal: "icon_efm_dnd_copy.png";
				vis;
			}
			desc { state: "copy" 0.0; inherit: "visible" 0.0; }
			desc { state: "ask" 0.0; inherit: "visible" 0.0;
				image.normal: "icon_efm_dnd_ask.png";
			}
			desc { state: "move" 0.0; inherit: "visible" 0.0;
				image.normal: "icon_efm_dnd_move.png";
			}
		}
		swallow { "e.swallow.entry";
			desc { "default";
				rel1.to: "label0";
				rel2.to: "label0";
			}
		}
	}

	programs {
		program {
			signal: "mouse,down,1"; source: "label_event";
			script {
						set_int(longpressed, 0);
		}
		}
		program { name: "rename1";
			signal: "mouse,down,1"; source: "label_event";
			in: 0.4 0.0;
			script {
						set_int(longpressed, 1);
			}
		}
		program { name: "rename2";
			signal: "mouse,up,1"; source: "label_event";
			script {
						if (get_int(longpressed)) {
						set_int(longpressed, 0);
						emit("e,action,label,click", "e");
						}
			}
		}
		program { name: "go_active";
			signal: "e,state,selected";
			source: "e";
			action: STATE_SET "selected" 0.0;
			target: "bg";
			target: "e.text.label";
			target: "label2";
			transition: LINEAR 0.2;
		}
		program { name: "go_passive";
			signal: "e,state,unselected";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "bg";
			target: "e.text.label";
			target: "label2";
			transition: LINEAR 0.1;
		}
		program { name: "ask";
			signal: "e,state,ask";
			source: "e";
			action: STATE_SET "ask" 0.0;
			target: "dnd_action";
		}
		program { name: "move";
			signal: "e,state,move";
			source: "e";
			action: STATE_SET "move" 0.0;
			target: "dnd_action";
		}
		program { name: "copy";
			signal: "e,state,copy";
			source: "e";
			action: STATE_SET "copy" 0.0;
			target: "dnd_action";
		}
		program { name: "thumb_gen";
			signal: "e,action,thumb,gen";
			source: "e";
			action: STATE_SET "visible" 0.0;
			target: "icon_box_shadow";
			target: "icon_box";
			target: "icon_box_bg";
			after: "thumb_gen2";
		}
		program { name: "thumb_gen-";
			signal: "e,action,thumb,gen,alpha";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "icon_box_shadow";
			target: "icon_box";
			target: "icon_box_bg";
			after: "thumb_gen2";
		}
		program { name: "thumb_gen2";
			action: STATE_SET "min" 0.0;
			target: "icon";
			after: "thumb_gen3";
		}
		program { name: "thumb_gen3";
			action: STATE_SET "max" 0.0;
			target: "icon";
			transition: DECELERATE 0.2;
			after: "thumb_gen4";
		}
		program { name: "thumb_gen4";
			action: STATE_SET "default" 0.0;
			target: "icon";
			transition: SINUSOIDAL 0.1;
			after: "thumb_gen5";
		}
		program { name: "thumb_gen5";
			action: STATE_SET "max2" 0.0;
			target: "icon";
			transition: SINUSOIDAL 0.2;
			after: "thumb_gen6";
		}
		program { name: "thumb_gen6";
			action: STATE_SET "default" 0.0;
			target: "icon";
			transition: SINUSOIDAL 0.3;
		}
	}
}

group { "e/fileman/default/icon/fixed";
	images.image: "button-normal.png" COMP;
	images.image: "e17_mini_button_shadow2.png" COMP;
	images.image: "e17_fileman_thumb_bg.png" COMP;
	images.image: "icon_efm_dnd_copy.png" COMP;
	images.image: "icon_efm_dnd_ask.png" COMP;
	images.image: "icon_efm_dnd_move.png" COMP;
	parts {
		text { "label2"; nomouse; scale;
			desc { "default"; color: 0 0 0 255;
				align: 0.5 1.0;
				fixed: 0 1;
				rel1.to: "e.text.label";
				rel2.to: "e.text.label"; 
				text {
					font: "Sans";
					text_source: "e.text.label";
					size: 10;
					min: 0 1;
					align: 0.5 0.5;
					text_class: "fileman_icon";
				}
			}
			desc { state: "selected" 0.0; inherit; hid; }
		}
		part { "bg"; nomouse;
			desc { "default"; color: 255 255 255 0; hid;
				rel1 {
					relative: 0.0 0.0;
					offset: -5 -5;
				}
				rel2 {
					relative: 1.0 1.0;
					offset: 4 4;
				}
				image {
					normal: "button-normal.png";
					border: 12 12 4 12;
				}
			}
			desc { state: "selected" 0.0; inherit; color: 255 255 255 255; vis;
				rel1 {
					relative: 0.0 0.0;
					offset: -2 -2;
				}
				rel2 {
					relative: 1.0 1.0;
					offset: 1 1;
				}
			}
		}
		part { "icon_box_shadow"; nomouse;
			desc { "default"; hid;
				rel1 {
					to: "icon_box";
					relative: 0.0 0.0;
					offset: -1 -1;
				}
				rel2 {
					to: "icon_box";
					relative: 1.0 1.0;
					offset: 2 2;
				}
				image {
					normal: "e17_mini_button_shadow2.png";
					border: 6 6 6 6;
				}
			}
			desc { state: "visible" 0.0; inherit; vis; }
		}
		rect { "icon_box"; nomouse;
			desc { "default"; color: 0 0 0 64; hid;
				align: 0.5 0.5;
				rel1 {
					to: "e.swallow.icon";
					relative: 0.0 0.0;
					offset: -1 -1;
				}
				rel2 {
					to: "e.swallow.icon";
					relative: 1.0 1.0;
					offset: 0 0;
				} 
			}
			desc { state: "visible" 0.0; inherit; vis; }
		}
		part { "icon_box_bg"; nomouse;
			desc { "default"; hid;
				rel1 {
					to: "icon_box";
					relative: 0.0 0.0;
					offset: 1 1;
				}
				rel2 {
					to: "icon_box";
					relative: 1.0 1.0;
					offset: -2 -2;
				}
				image.normal: "inv.png";
				fill {
					smooth: 0;
					size {
						relative: 0 0;
						offset: 32 32;
					}
				}
			}
			desc { state: "visible" 0.0; inherit; vis; }
		}
		rect { "icon0"; nomouse;
			desc { "default"; color: 0 0 0 0; hid;
				align: 0.5 0.5;
				aspect: 1.0 1.0;
				aspect_preference: VERTICAL; 
				rel1 {
					relative: 0.0 0.0;
					offset: 2 2;
				}
				rel2 {
					to_y: "e.text.label";
					relative: 1.0 0.0;
					offset: -3 -1;
				} 
			}
		}
		rect { "icon"; nomouse;
			desc { "default"; color: 0 0 0 0; hid;
				align: 0.5 0.5;
				aspect: 1.0 1.0;
				aspect_preference: BOTH; 
				rel1.to: "icon0";
				rel2.to: "icon0"; 
			}
			desc { state: "min" 0.0; inherit; max: 0 0; }
			desc { state: "max" 0.0; inherit;
				rel1 {
					to: "icon0";
					relative: 0.0  0.0;
					offset: -4 -4;
				}
				rel2 {
					to: "icon0";
					relative: 1.0  1.0;
					offset: 3 3;
				}
			}
			desc { state: "max2" 0.0; inherit: "default" 0.0;
				rel1 {
					to: "icon0";
					relative: 0.0  0.0;
					offset: -2 -2;
				}
				rel2 {
					to: "icon0";
					relative: 1.0  1.0;
					offset: 1			1;
				}
			}
		}
		swallow { "e.swallow.icon";
			desc { "default";
				aspect: 1.0 1.0;
				aspect_preference: BOTH;
				align: 0.5 0.5;
				//fixed: 1 1;
				rel1.to: "icon";
				rel2.to: "icon";
			}
		}
		text { "e.text.label"; effect: SOFT_SHADOW; nomouse; scale;
			desc { "default"; color: 224 224 224 255; hid;
				align: 0.5 1.0;
				fixed: 0 1;
				rel1 {
					relative: 0.0 1.0;
					offset: 2 -2;
				}
				rel2 {
					relative: 1.0 1.0;
					offset: -3 -2;
				}
				color3: 0 0 0 64;
				text {
					font: "Sans:style=Bold";
					size: 10;
					min: 0 1;
					align: 0.5 0.5;
					text_class: "fileman_icon";
				}
			}
			desc { state: "selected" 0.0; inherit; vis; }
		}
		rect { "event"; mouse;
			desc { "default"; color: 0 0 0 0; }
		}
		image { "dnd_action"; nomouse; norepeat;
			desc { "default"; color: 0 0 0 0; hid;
				image.normal: "icon_efm_dnd_copy.png"; 
			}
			desc { state: "visible" 0.0; vis;
				aspect: 1.0 1.0;
				aspect_preference: BOTH;
				align: 1.0 1.0;
				min: 24 24;
				rel1.relative: 0.75 0.0;
				rel2.relative: 1.0 1.0;
				image.normal: "icon_efm_dnd_copy.png";
			}
			desc { state: "copy" 0.0; inherit: "visible" 0.0; }
			desc { state: "ask" 0.0;
				inherit: "visible" 0.0;
				image.normal: "icon_efm_dnd_ask.png";
			}
			desc { state: "move" 0.0; inherit: "visible" 0.0;
				image.normal: "icon_efm_dnd_move.png";
			}
		}
		swallow { "e.swallow.entry";
			desc { "default";
				rel1.to: "e.text.label";
				rel2.to: "e.text.label";
			}
		}
	}

	programs {
		program { name: "go_active";
			signal: "e,state,selected";
			source: "e";
			action: STATE_SET "selected" 0.0;
			target: "bg";
			target: "e.text.label";
			target: "label2";
			transition: LINEAR 0.2;
		}
		program { name: "go_passive";
			signal: "e,state,unselected";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "bg";
			target: "e.text.label";
			target: "label2";
			transition: LINEAR 0.1;
		}
		program { name: "ask";
			signal: "e,state,ask";
			source: "e";
			action: STATE_SET "ask" 0.0;
			target: "dnd_action";
		}
		program { name: "move";
			signal: "e,state,move";
			source: "e";
			action: STATE_SET "move" 0.0;
			target: "dnd_action";
		}
		program { name: "copy";
			signal: "e,state,copy";
			source: "e";
			action: STATE_SET "copy" 0.0;
			target: "dnd_action";
		}
		program { name: "thumb_gen";
			signal: "e,action,thumb,gen";
			source: "e";
			action: STATE_SET "visible" 0.0;
			target: "icon_box_shadow";
			target: "icon_box";
			target: "icon_box_bg";
			after: "thumb_gen2";
		}
		program { name: "thumb_gen-";
			signal: "e,action,thumb,gen,alpha";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "icon_box_shadow";
			target: "icon_box";
			target: "icon_box_bg";
			after: "thumb_gen2";
		}
		program { name: "thumb_gen2";
			action: STATE_SET "min" 0.0;
			target: "icon";
			after: "thumb_gen3";
		}
		program { name: "thumb_gen3";
			action: STATE_SET "max" 0.0;
			target: "icon";
			transition: DECELERATE 0.2;
			after: "thumb_gen4";
		}
		program { name: "thumb_gen4";
			action: STATE_SET "default" 0.0;
			target: "icon";
			transition: SINUSOIDAL 0.1;
			after: "thumb_gen5";
		}
		program { name: "thumb_gen5";
			action: STATE_SET "max2" 0.0;
			target: "icon";
			transition: SINUSOIDAL 0.2;
			after: "thumb_gen6";
		}
		program { name: "thumb_gen6";
			action: STATE_SET "default" 0.0;
			target: "icon";
			transition: SINUSOIDAL 0.3;
		}
	}
}

/*	group { name: "e/fileman/desktop/icon/variable";
			REMOVED */

group { "e/fileman/default/list/variable";
	data.item: "stacking" "above";
	data.item: "selectraise" "on";
	images.image: "selected.png" COMP;
	images.image: "e17_mini_button_shadow2.png" COMP;
	images.image: "e17_fileman_thumb_bg.png" COMP;
	images.image: "icon_efm_dnd_copy.png" COMP;
	images.image: "icon_efm_dnd_ask.png" COMP;
	images.image: "icon_efm_dnd_move.png" COMP;
	parts {
		rect { "base"; nomouse;
			desc { "default"; color: 255 255 255 255; color_class: "ilist_item_base"; }
		}
		part { "selected"; nomouse;
			desc { "default"; hid; color: 255 255 255 0;
				rel1 {
					relative: 0.0 0.0;
					offset: -5 -5;
				}
				rel2 {
					relative: 1.0 1.0;
					offset: 4 4;
				}
				image {
					normal: "selected.png";
					border: 2 2 2 2;
				}
				fill.smooth: 0;
			}
			desc { state: "selected" 0.0; inherit; color: 255 255 255 255; vis; 
				rel1 {
					relative: 0.0 0.0;
					offset: -2 -2;
				}
				rel2 {
					relative: 1.0 1.0;
					offset: 1 1;
				}
			}
		}
		part { "icon_box_shadow"; nomouse;
			desc { "default"; hid;
				rel1 {
					to: "icon_box";
					relative: 0.0 0.0;
					offset: -1 -1;
				}
				rel2 {
					to: "icon_box";
					relative: 1.0 1.0;
					offset: 2 2;
				}
				image {
					normal: "e17_mini_button_shadow2.png";
					border: 6 6 6 6;
				}
			}
			desc { state: "visible" 0.0; inherit: "default" 0.0; vis; }
		}
		rect { "icon_box"; nomouse;
			desc { state: "default" 0.0; color: 0 0 0 64; hid;
				align: 0.5 0.5;
				rel1 {
					to: "e.swallow.icon";
					relative: 0.0 0.0;
					offset: -1 -1;
				}
				rel2 {
					to: "e.swallow.icon";
					relative: 1.0 1.0;
					offset: 0 0;
				}
			}
			desc { state: "visible" 0.0; inherit: "default" 0.0; vis; }
		}
		part { "icon_box_bg"; nomouse;
			desc { state: "default" 0.0; hid;
				rel1 {
					to: "icon_box";
					relative: 0.0 0.0;
					offset: 1 1;
				}
				rel2 {
					to: "icon_box";
					relative: 1.0 1.0;
					offset: -2 -2;
				}
				image {
					normal: "e17_fileman_thumb_bg.png";
				}
				fill {
					smooth: 0;
					size {
						relative: 0 0;
						offset: 32 32;
					}
				}
			}
			desc { state: "visible" 0.0; inherit: "default" 0.0; vis; }
		}
		rect { "icon0"; nomouse;
			desc { state: "default" 0.0; color: 0 0 0 0; hid;
				align: 0.0 0.5;
				aspect: 1.0 1.0;
				aspect_preference: VERTICAL; 
				rel1 {
					relative: 0.0  0.0;
					offset: 4 4;
				}
				rel2 {
					relative: 0.0  1.0;
					offset: 4 -5;
				}
			}
		}
		rect { "icon"; nomouse; 
			desc { state: "default" 0.0; color: 0 0 0 0; hid;
				align: 0.5 0.5;
				aspect: 1.0 1.0;
				aspect_preference: BOTH;
				
				rel1 {
					to: "icon0";
				}
				rel2 {
					to: "icon0";
				}
			}
			desc { state: "min" 0.0; inherit: "default" 0.0; max: 0 0; }
			desc { state: "max" 0.0; inherit: "default" 0.0;
				rel1 {
					to: "icon0";
					relative: 0.0  0.0;
					offset: -4 -4;
				}
				rel2 {
					to: "icon0";
					relative: 1.0  1.0;
					offset: 3 3;
				}
			}
			desc { state: "max2" 0.0; inherit: "default" 0.0;
				rel1 {
					to: "icon0";
					relative: 0.0  0.0;
					offset: -2 -2;
				}
				rel2 {
					to: "icon0";
					relative: 1.0  1.0;
					offset: 1			1;
				}
			}
		}
		swallow { "e.swallow.icon";
			desc { "default";
				align: 0.5 0.5;
				//					fixed: 1 1;
				rel1 {
					to: "icon";
				}
				rel2 {
					to: "icon";
				}
			}
		}
		text { "e.text.label"; effect: SOFT_SHADOW; nomouse; scale;
			desc { "default"; min: 16 16; color: 0 0 0 255;
				rel1 {
					to_x: "icon0";
					relative: 1.0  0.0;
					offset: 4 4;
				}
				rel2 {
					relative: 1.0  1.0;
					offset: -5 -5;
				}
				color3: 0 0 0 0;
				color_class: "ilist_item";
				text {
					font: "Sans";
					size: 10;
					min: 1 1;
					align: 0.0 0.5;
					text_class: "ilist_item";
				}
			}
			desc { state: "selected" 0.0; inherit; color: 224 224 224 255; 
				color3: 0 0 0 64;
				color_class: "ilist_item";
			}
		}
		image { "dnd_action"; nomouse; norepeat;
			desc { state: "default" 0.0; color: 0 0 0 0; hid;
				image {
					normal: "icon_efm_dnd_copy.png";
				} 
			}
			desc { state: "visible" 0.0; vis;
				aspect: 1.0 1.0;
				aspect_preference: BOTH;
				align: 1.0 1.0;
				rel1 {
					relative: 0.75 0.0;
				}
				rel2 {
					relative: 1.0 1.0;
				}
				image {
					normal: "icon_efm_dnd_copy.png";
				} 
			}
			desc { state: "copy" 0.0; inherit: "visible" 0.0; }
			desc { state: "ask" 0.0; inherit: "visible" 0.0;
				image {
					normal: "icon_efm_dnd_ask.png";
				}
			}
			desc { state: "move" 0.0; inherit: "visible" 0.0;
				image {
					normal: "icon_efm_dnd_move.png";
				}
			}
		}
		rect { "event";
			desc { "default"; color: 0 0 0 0; }
		}
		swallow { "e.swallow.entry";
			desc { "default";
				rel1.to: "e.text.label";
				rel2.to: "e.text.label";
			}
		}
	}

	programs {
		program { name: "go_active";
			signal: "e,state,selected";
			source: "e";
			action: STATE_SET "selected" 0.0;
			target: "selected";
			target: "e.text.label";
		}
		program { name: "go_passive";
			signal: "e,state,unselected";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "selected";
			target: "e.text.label";
			transition: LINEAR 0.1;
		}
		program { name: "ask";
			signal: "e,state,ask";
			source: "e";
			action: STATE_SET "ask" 0.0;
			target: "dnd_action";
		}
		program { name: "move";
			signal: "e,state,move";
			source: "e";
			action: STATE_SET "move" 0.0;
			target: "dnd_action";
		}
		program { name: "copy";
			signal: "e,state,copy";
			source: "e";
			action: STATE_SET "copy" 0.0;
			target: "dnd_action";
		}
		program { name: "thumb_gen";
			signal: "e,action,thumb,gen";
			source: "e";
			action: STATE_SET "visible" 0.0;
			target: "icon_box_shadow";
			target: "icon_box";
			target: "icon_box_bg";
			after: "thumb_gen2";
		}
		program { name: "thumb_gen-";
			signal: "e,action,thumb,gen,alpha";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "icon_box_shadow";
			target: "icon_box";
			target: "icon_box_bg";
			after: "thumb_gen2";
		}
		program { name: "thumb_gen2";
			action: STATE_SET "min" 0.0;
			target: "icon";
			after: "thumb_gen3";
		}
		program { name: "thumb_gen3";
			action: STATE_SET "max" 0.0;
			target: "icon";
			transition: DECELERATE 0.2;
			after: "thumb_gen4";
		}
		program { name: "thumb_gen4";
			action: STATE_SET "default" 0.0;
			target: "icon";
			transition: SINUSOIDAL 0.1;
			after: "thumb_gen5";
		}
		program { name: "thumb_gen5";
			action: STATE_SET "max2" 0.0;
			target: "icon";
			transition: SINUSOIDAL 0.2;
			after: "thumb_gen6";
		}
		program { name: "thumb_gen6";
			action: STATE_SET "default" 0.0;
			target: "icon";
			transition: SINUSOIDAL 0.3;
		}
	}
}

group { "e/fileman/default/list_odd/variable";
	data.item: "stacking" "below";
	data.item: "selectraise" "on";
	images.image: "selected.png" COMP;
	images.image: "e17_mini_button_shadow2.png" COMP;
	images.image: "e17_fileman_thumb_bg.png" COMP;
	images.image: "icon_efm_dnd_copy.png" COMP;
	images.image: "icon_efm_dnd_ask.png" COMP;
	images.image: "icon_efm_dnd_move.png" COMP;
	parts {
		rect { "base"; nomouse;
			desc { "default"; color: 255 255 255 255; color_class: "ilist_item_odd_base"; }
		}
		part { "selected"; nomouse;
			desc { "default"; color: 255 255 255 0; hid; 
				image {
					normal: "selected.png";
					border: 2 2 2 2;
				}
				fill.smooth: 0;
				rel1 {
					relative: 0.0 0.0;
					offset: -5 -5;
				}
				rel2 {
					relative: 1.0 1.0;
					offset: 4 4;
				}
			}
			desc { state: "selected" 0.0; inherit; color: 255 255 255 255; vis;
				rel1 {
					relative: 0.0 0.0;
					offset: -2 -2;
				}
				rel2 {
					relative: 1.0 1.0;
					offset: 1 1;
				}
			}
		}
		part { "icon_box_shadow"; nomouse;
			desc { "default"; hid;
				rel1 {
					to: "icon_box";
					relative: 0.0 0.0;
					offset: -1 -1;
				}
				rel2 {
					to: "icon_box";
					relative: 1.0 1.0;
					offset: 2 2;
				}
				image {
					normal: "e17_mini_button_shadow2.png";
					border: 6 6 6 6;
				}
			}
			desc { state: "visible" 0.0; inherit: "default" 0.0; vis; }
		}
		rect { "icon_box"; nomouse;
			desc { state: "default" 0.0; color: 0 0 0 64; hid;
				align: 0.5 0.5;
				rel1 {
					to: "e.swallow.icon";
					relative: 0.0 0.0;
					offset: -1 -1;
				}
				rel2 {
					to: "e.swallow.icon";
					relative: 1.0 1.0;
					offset: 0 0;
				}
			}
			desc { state: "visible" 0.0; inherit: "default" 0.0; vis; }
		}
		part { "icon_box_bg"; nomouse;
			desc { state: "default" 0.0; hid;
				rel1 {
					to: "icon_box";
					relative: 0.0 0.0;
					offset: 1 1;
				}
				rel2 {
					to: "icon_box";
					relative: 1.0 1.0;
					offset: -2 -2;
				}
				image {
					normal: "e17_fileman_thumb_bg.png";
				}
				fill {
					smooth: 0;
					size {
						relative: 0 0;
						offset: 32 32;
					}
				}
			}
			desc { state: "visible" 0.0; inherit: "default" 0.0; vis; }
		}
		rect { "icon0"; nomouse;
			desc { state: "default" 0.0; color: 0 0 0 0; hid;
				align: 0.0 0.5;
				aspect: 1.0 1.0;
				aspect_preference: VERTICAL; 
				rel1 {
					relative: 0.0  0.0;
					offset: 4 4;
				}
				rel2 {
					relative: 0.0  1.0;
					offset: 4 -5;
				} 
			}
		}
		rect { "icon"; nomouse;
			desc { state: "default" 0.0; color: 0 0 0 0; hid;
				align: 0.5 0.5;
				aspect: 1.0 1.0;
				aspect_preference: BOTH; 
				rel1 {
					to: "icon0";
				}
				rel2 {
					to: "icon0";
				} 
			}
			desc { state: "min" 0.0; inherit: "default" 0.0; max: 0 0; }
			desc { state: "max" 0.0; inherit: "default" 0.0;
				rel1 {
					to: "icon0";
					relative: 0.0  0.0;
					offset: -4 -4;
				}
				rel2 {
					to: "icon0";
					relative: 1.0  1.0;
					offset: 3 3;
				}
			}
			desc { state: "max2" 0.0; inherit: "default" 0.0;
				rel1 {
					to: "icon0";
					relative: 0.0  0.0;
					offset: -2 -2;
				}
				rel2 {
					to: "icon0";
					relative: 1.0  1.0;
					offset: 1			1;
				}
			}
		}
		swallow { "e.swallow.icon";
			desc { "default";
				align: 0.5 0.5;
				//					fixed: 1 1;
				rel1 {
					to: "icon";
				}
				rel2 {
					to: "icon";
				}
			}
		}
		text { "e.text.label"; effect: SOFT_SHADOW; nomouse; scale;
			desc { "default"; min: 16 16; color: 0 0 0 255;
				rel1 {
					to_x: "icon0";
					relative: 1.0  0.0;
					offset: 4 4;
				}
				rel2 {
					relative: 1.0  1.0;
					offset: -5 -5;
				} 
				color3: 0 0 0 0;
				color_class: "ilist_item";
				text {
					font: "Sans";
					size: 10;
					min: 1 1;
					align: 0.0 0.5;
					text_class: "ilist_item";
				}
			}
			desc { state: "selected" 0.0; inherit; color: 224 224 224 255;
				color3: 0 0 0 64;
				color_class: "ilist_item";
			}
		}
		image { "dnd_action"; nomouse; norepeat;
			desc { state: "default" 0.0; color: 0 0 0 0; hid;
				image {
					normal: "icon_efm_dnd_copy.png";
				} 
			}
			desc { state: "visible" 0.0; vis;
				aspect: 1.0 1.0;
				aspect_preference: BOTH;
				align: 1.0 1.0;
				rel1 {
					relative: 0.75 0.0;
				}
				rel2 {
					relative: 1.0 1.0;
				}
				image {
					normal: "icon_efm_dnd_copy.png";
				} 
			}
			desc { state: "copy" 0.0; inherit: "visible" 0.0; }
			desc { state: "ask" 0.0; inherit: "visible" 0.0;
				image {
					normal: "icon_efm_dnd_ask.png";
				}
			}
			desc { state: "move" 0.0; inherit: "visible" 0.0;
				image {
					normal: "icon_efm_dnd_move.png";
				}
			}
		}
		rect { "event";
			desc { "default"; color: 0 0 0 0; }
		}
		swallow { "e.swallow.entry";
			desc { "default";
				rel1.to: "e.text.label";
				rel2.to: "e.text.label";
			}
		}
	}

	programs {
		program { name: "go_active";
			signal: "e,state,selected";
			source: "e";
			action: STATE_SET "selected" 0.0;
			target: "selected";
			target: "e.text.label";
		}
		program { name: "go_passive";
			signal: "e,state,unselected";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "selected";
			target: "e.text.label";
			transition: LINEAR 0.1;
		}
		program { name: "ask";
			signal: "e,state,ask";
			source: "e";
			action: STATE_SET "ask" 0.0;
			target: "dnd_action";
		}
		program { name: "move";
			signal: "e,state,move";
			source: "e";
			action: STATE_SET "move" 0.0;
			target: "dnd_action";
		}
		program { name: "copy";
			signal: "e,state,copy";
			source: "e";
			action: STATE_SET "copy" 0.0;
			target: "dnd_action";
		}
		program { name: "thumb_gen";
			signal: "e,action,thumb,gen";
			source: "e";
			action: STATE_SET "visible" 0.0;
			target: "icon_box_shadow";
			target: "icon_box";
			target: "icon_box_bg";
			after: "thumb_gen2";
		}
		program { name: "thumb_gen-";
			signal: "e,action,thumb,gen,alpha";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "icon_box_shadow";
			target: "icon_box";
			target: "icon_box_bg";
			after: "thumb_gen2";
		}
		program { name: "thumb_gen2";
			action: STATE_SET "min" 0.0;
			target: "icon";
			after: "thumb_gen3";
		}
		program { name: "thumb_gen3";
			action: STATE_SET "max" 0.0;
			target: "icon";
			transition: DECELERATE 0.2;
			after: "thumb_gen4";
		}
		program { name: "thumb_gen4";
			action: STATE_SET "default" 0.0;
			target: "icon";
			transition: SINUSOIDAL 0.1;
			after: "thumb_gen5";
		}
		program { name: "thumb_gen5";
			action: STATE_SET "max2" 0.0;
			target: "icon";
			transition: SINUSOIDAL 0.2;
			after: "thumb_gen6";
		}
		program { name: "thumb_gen6";
			action: STATE_SET "default" 0.0;
			target: "icon";
			transition: SINUSOIDAL 0.3;
		}
	}
}

group { "e/fileman/default/list/fixed";
	alias: "e/fileman/desktop/list/fixed";
	data.item: "stacking" "above";
	data.item: "selectraise" "on";
	images.image: "selected.png" COMP;
	images.image: "e17_mini_button_shadow2.png" COMP;
	images.image: "e17_fileman_thumb_bg.png" COMP;
	images.image: "icon_efm_dnd_copy.png" COMP;
	images.image: "icon_efm_dnd_ask.png" COMP;
	images.image: "icon_efm_dnd_move.png" COMP;
	parts {
		rect { "base"; nomouse;
			desc { "default"; color: 255 255 255 255; color_class: "ilist_item_base"; }
		}
		part { "selected";
			nomouse;
			desc { "default"; color: 255 255 255 0; hid; 
				rel1 {
					relative: 0.0 0.0;
					offset: -5 -5;
				}
				rel2 {
					relative: 1.0 1.0;
					offset: 4 4;
				}
				image {
					normal: "selected.png";
					border: 2 2 2 2;
				}
				fill.smooth: 0;
			}
			desc { state: "selected" 0.0; inherit; color: 255 255 255 255; vis;
				rel1 {
					relative: 0.0 0.0;
					offset: -2 -2;
				}
				rel2 {
					relative: 1.0 1.0;
					offset: 1 1;
				}
			}
		}
		part { "icon_box_shadow"; nomouse;
			desc { "default"; hid;
				rel1 {
					to: "icon_box";
					relative: 0.0 0.0;
					offset: -1 -1;
				}
				rel2 {
					to: "icon_box";
					relative: 1.0 1.0;
					offset: 2 2;
				}
				image {
					normal: "e17_mini_button_shadow2.png";
					border: 6 6 6 6;
				}
			}
			desc { state: "visible" 0.0; inherit: "default" 0.0; vis; }
		}
		rect { "icon_box"; nomouse;
			desc { state: "default" 0.0; color: 0 0 0 64; hid;
				align: 0.5 0.5;
				rel1 {
					to: "e.swallow.icon";
					relative: 0.0 0.0;
					offset: -1 -1;
				}
				rel2 {
					to: "e.swallow.icon";
					relative: 1.0 1.0;
					offset: 0 0;
				} 
			}
			desc { state: "visible" 0.0; inherit: "default" 0.0; vis; }
		}
		part { "icon_box_bg";
			nomouse;
			desc { state: "default" 0.0; hid;
				rel1 {
					to: "icon_box";
					relative: 0.0 0.0;
					offset: 1 1;
				}
				rel2 {
					to: "icon_box";
					relative: 1.0 1.0;
					offset: -2 -2;
				}
				image {
					normal: "e17_fileman_thumb_bg.png";
				}
				fill {
					smooth: 0;
					size {
						relative: 0 0;
						offset: 32 32;
					}
				}
			}
			desc { state: "visible" 0.0; inherit: "default" 0.0; vis;
			}
		}
		rect { "icon0"; nomouse;
			desc { state: "default" 0.0; color: 0 0 0 0; hid;
				align: 0.0 0.5;
				aspect: 1.0 1.0;
				aspect_preference: VERTICAL; 
				rel1 {
					relative: 0.0  0.0;
					offset: 4 4;
				}
				rel2 {
					relative: 0.0  1.0;
					offset: 4 -5;
				} 
			}
		}
		rect { "icon"; nomouse;
			desc { state: "default" 0.0; color: 0 0 0 0; hid;
				align: 0.5 0.5;
				aspect: 1.0 1.0;
				aspect_preference: BOTH; 
				rel1 {
					to: "icon0";
				}
				rel2 {
					to: "icon0";
				} 
			}
			desc { state: "min" 0.0; inherit: "default" 0.0; max: 0 0; }
			desc { state: "max" 0.0; inherit: "default" 0.0;
				rel1 {
					to: "icon0";
					relative: 0.0  0.0;
					offset: -4 -4;
				}
				rel2 {
					to: "icon0";
					relative: 1.0  1.0;
					offset: 3 3;
				}
			}
			desc { state: "max2" 0.0; inherit: "default" 0.0;
				rel1 {
					to: "icon0";
					relative: 0.0  0.0;
					offset: -2 -2;
				}
				rel2 {
					to: "icon0";
					relative: 1.0  1.0;
					offset: 1			1;
				}
			}
		}
		swallow { "e.swallow.icon";
			desc { "default";
				align: 0.5 0.5;
				//					fixed: 1 1;
				rel1 {
					to: "icon";
				}
				rel2 {
					to: "icon";
				}
			}
		}
		text { "e.text.label"; effect: SOFT_SHADOW; nomouse; scale;
			desc { "default"; min: 16 16; color: 0 0 0 255;
				rel1 {
					to_x: "icon0";
					relative: 1.0  0.0;
					offset: 4 4;
				}
				rel2 {
					relative: 1.0  1.0;
					offset: -5 -5;
				} 
				color3: 0 0 0 0;
				color_class: "ilist_item";
				text {
					font: "Sans";
					size: 10;
					min: 0 1;
					align: 0.0 0.5;
					text_class: "ilist_item";
				}
			}
			desc { state: "selected" 0.0; inherit; color: 224 224 224 255;
				color3: 0 0 0 64;
				color_class: "ilist_item";
			}
		}
		image { "dnd_action"; nomouse; norepeat;
			desc { state: "default" 0.0; color: 0 0 0 0; hid;
				image {
					normal: "icon_efm_dnd_copy.png";
				} 
			}
			desc { state: "visible" 0.0; vis;
				aspect: 1.0 1.0;
				aspect_preference: BOTH;
				align: 1.0 1.0;
				rel1 {
					relative: 0.75 0.0;
				}
				rel2 {
					relative: 1.0 1.0;
				}
				image {
					normal: "icon_efm_dnd_copy.png";
				} 
			}
			desc { state: "copy" 0.0; inherit: "visible" 0.0;
			}
			desc { state: "ask" 0.0; inherit: "visible" 0.0;
				image.normal: "icon_efm_dnd_ask.png";
			}
			desc { state: "move" 0.0; inherit: "visible" 0.0;
				image.normal: "icon_efm_dnd_move.png"; 
			}
		}
		rect { "event";
			desc { "default"; color: 0 0 0 0; }
		}
		swallow { "e.swallow.entry";
			desc { "default";
				rel1.to: "e.text.label";
				rel2.to: "e.text.label";
			}
		}
	}

	programs {
		program { name: "go_active";
			signal: "e,state,selected";
			source: "e";
			action: STATE_SET "selected" 0.0;
			target: "selected";
			target: "e.text.label";
		}
		program { name: "go_passive";
			signal: "e,state,unselected";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "selected";
			target: "e.text.label";
			transition: LINEAR 0.1;
		}
		program { name: "ask";
			signal: "e,state,ask";
			source: "e";
			action: STATE_SET "ask" 0.0;
			target: "dnd_action";
		}
		program { name: "move";
			signal: "e,state,move";
			source: "e";
			action: STATE_SET "move" 0.0;
			target: "dnd_action";
		}
		program { name: "copy";
			signal: "e,state,copy";
			source: "e";
			action: STATE_SET "copy" 0.0;
			target: "dnd_action";
		}
		program { name: "thumb_gen";
			signal: "e,action,thumb,gen";
			source: "e";
			action: STATE_SET "visible" 0.0;
			target: "icon_box_shadow";
			target: "icon_box";
			target: "icon_box_bg";
			after: "thumb_gen2";
		}
		program { name: "thumb_gen-";
			signal: "e,action,thumb,gen,alpha";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "icon_box_shadow";
			target: "icon_box";
			target: "icon_box_bg";
			after: "thumb_gen2";
		}
		program { name: "thumb_gen2";
			action: STATE_SET "min" 0.0;
			target: "icon";
			after: "thumb_gen3";
		}
		program { name: "thumb_gen3";
			action: STATE_SET "max" 0.0;
			target: "icon";
			transition: DECELERATE 0.2;
			after: "thumb_gen4";
		}
		program { name: "thumb_gen4";
			action: STATE_SET "default" 0.0;
			target: "icon";
			transition: SINUSOIDAL 0.1;
			after: "thumb_gen5";
		}
		program { name: "thumb_gen5";
			action: STATE_SET "max2" 0.0;
			target: "icon";
			transition: SINUSOIDAL 0.2;
			after: "thumb_gen6";
		}
		program { name: "thumb_gen6";
			action: STATE_SET "default" 0.0;
			target: "icon";
			transition: SINUSOIDAL 0.3;
		}
	}
}

group { "e/fileman/default/list_odd/fixed";
	alias: "e/fileman/desktop/list_odd/fixed";
	data.item: "stacking" "below";
	data.item: "selectraise" "on";
	images.image: "selected.png" COMP;
	images.image: "e17_mini_button_shadow2.png" COMP;
	images.image: "e17_fileman_thumb_bg.png" COMP;
	images.image: "icon_efm_dnd_copy.png" COMP;
	images.image: "icon_efm_dnd_ask.png" COMP;
	images.image: "icon_efm_dnd_move.png" COMP;
	parts {
		rect { "base"; nomouse;
			desc { "default"; color: 255 255 255 255; color_class: "ilist_item_odd_base"; }
		}
		part { "selected"; nomouse;
			desc { "default"; color: 255 255 255 0; hid;
				image {
					normal: "selected.png";
					border: 2 2 2 2;
				}
				fill.smooth: 0;
				rel1 {
					relative: 0.0 0.0;
					offset: -5 -5;
				}
				rel2 {
					relative: 1.0 1.0;
					offset: 4 4;
				}
			}
			desc { state: "selected" 0.0; inherit; color: 255 255 255 255; vis;
				rel1 {
					relative: 0.0 0.0;
					offset: -2 -2;
				}
				rel2 {
					relative: 1.0 1.0;
					offset: 1 1;
				}
			}
		}
		part { "icon_box_shadow"; nomouse;
			desc { "default"; hid;
				rel1 {
					to: "icon_box";
					relative: 0.0 0.0;
					offset: -1 -1;
				}
				rel2 {
					to: "icon_box";
					relative: 1.0 1.0;
					offset: 2 2;
				}
				image {
					normal: "e17_mini_button_shadow2.png";
					border: 6 6 6 6;
				}
			}
			desc { state: "visible" 0.0; inherit: "default" 0.0; vis; }
		}
		rect { "icon_box"; nomouse;
			desc { state: "default" 0.0; color: 0 0 0 64; hid;
				align: 0.5 0.5;
				rel1 {
					to: "e.swallow.icon";
					relative: 0.0 0.0;
					offset: -1 -1;
				}
				rel2 {
					to: "e.swallow.icon";
					relative: 1.0 1.0;
					offset: 0 0;
				}
			}
			desc { state: "visible" 0.0; inherit: "default" 0.0; vis; }
		}
		part { "icon_box_bg"; nomouse;
			desc { state: "default" 0.0; hid;
				rel1 {
					to: "icon_box";
					relative: 0.0 0.0;
					offset: 1 1;
				}
				rel2 {
					to: "icon_box";
					relative: 1.0 1.0;
					offset: -2 -2;
				}
				image {
					normal: "e17_fileman_thumb_bg.png";
				}
				fill {
					smooth: 0;
					size {
						relative: 0 0;
						offset: 32 32;
					}
				}
			}
			desc { state: "visible" 0.0; inherit: "default" 0.0; vis; }
		}
		rect { "icon0"; nomouse;
			desc { state: "default" 0.0; color: 0 0 0 0; hid;
				align: 0.0 0.5;
				aspect: 1.0 1.0;
				aspect_preference: VERTICAL; 
				rel1 {
					relative: 0.0  0.0;
					offset: 4 4;
				}
				rel2 {
					relative: 0.0  1.0;
					offset: 4 -5;
				} 
			}
		}
		rect { "icon"; nomouse;
			desc { state: "default" 0.0; color: 0 0 0 0; hid;
				align: 0.5 0.5;
				aspect: 1.0 1.0;
				aspect_preference: BOTH; 
				rel1 {
					to: "icon0";
				}
				rel2 {
					to: "icon0";
				} 
			}
			desc { state: "min" 0.0; inherit: "default" 0.0; max: 0 0; }
			desc { state: "max" 0.0; inherit: "default" 0.0;
				rel1 {
					to: "icon0";
					relative: 0.0  0.0;
					offset: -4 -4;
				}
				rel2 {
					to: "icon0";
					relative: 1.0  1.0;
					offset: 3 3;
				}
			}
			desc { state: "max2" 0.0; inherit: "default" 0.0;
				rel1 {
					to: "icon0";
					relative: 0.0  0.0;
					offset: -2 -2;
				}
				rel2 {
					to: "icon0";
					relative: 1.0  1.0;
					offset: 1			1;
				}
			}
		}
		swallow { "e.swallow.icon";
			desc { "default";
				align: 0.5 0.5;
				//					fixed: 1 1;
				rel1 {
					to: "icon";
				}
				rel2 {
					to: "icon";
				}
			}
		}
		text { "e.text.label"; effect: SOFT_SHADOW; nomouse; scale;
			desc { "default"; min: 16 16; color: 0 0 0 255;
				rel1 {
					to_x: "icon0";
					relative: 1.0  0.0;
					offset: 4 4;
				}
				rel2 {
					relative: 1.0  1.0;
					offset: -5 -5;
				}
				color3: 0 0 0 0;
				color_class: "ilist_item";
				text {
					font: "Sans";
					size: 10;
					min: 0 1;
					align: 0.0 0.5;
					text_class: "ilist_item";
				}
			}
			desc { state: "selected" 0.0; inherit; color: 224 224 224 255;
				color3: 0 0 0 64;
				color_class: "ilist_item";
			}
		}
		image { "dnd_action"; nomouse; norepeat;
			desc { "default"; color: 0 0 0 0; hid;
				image.normal: "icon_efm_dnd_copy.png";
			}
			desc { state: "visible" 0.0; vis;
				aspect: 1.0 1.0;
				aspect_preference: BOTH;
				align: 1.0 1.0;
				rel1 {
					relative: 0.75 0.0;
				}
				rel2 {
					relative: 1.0 1.0;
				}
				image {
					normal: "icon_efm_dnd_copy.png";
				} 
			}
			desc { state: "copy" 0.0; inherit: "visible" 0.0; }
			desc { state: "ask" 0.0; inherit: "visible" 0.0;
				image.normal: "icon_efm_dnd_ask.png";
			}
			desc { state: "move" 0.0; inherit: "visible" 0.0;
				image.normal: "icon_efm_dnd_move.png";
			}
		}
		rect { "event";
			desc { "default"; color: 0 0 0 0; }
		}
		swallow { "e.swallow.entry";
			desc { "default";
				rel1.to: "e.text.label";
				rel2.to: "e.text.label";
			}
		}
	}

	programs {
		program { name: "go_active";
			signal: "e,state,selected";
			source: "e";
			action: STATE_SET "selected" 0.0;
			target: "selected";
			target: "e.text.label";
		}
		program { name: "go_passive";
			signal: "e,state,unselected";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "selected";
			target: "e.text.label";
			transition: LINEAR 0.1;
		}
		program { name: "ask";
			signal: "e,state,ask";
			source: "e";
			action: STATE_SET "ask" 0.0;
			target: "dnd_action";
		}
		program { name: "move";
			signal: "e,state,move";
			source: "e";
			action: STATE_SET "move" 0.0;
			target: "dnd_action";
		}
		program { name: "copy";
			signal: "e,state,copy";
			source: "e";
			action: STATE_SET "copy" 0.0;
			target: "dnd_action";
		}
		program { name: "thumb_gen";
			signal: "e,action,thumb,gen";
			source: "e";
			action: STATE_SET "visible" 0.0;
			target: "icon_box_shadow";
			target: "icon_box";
			target: "icon_box_bg";
			after: "thumb_gen2";
		}
		program { name: "thumb_gen-";
			signal: "e,action,thumb,gen,alpha";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "icon_box_shadow";
			target: "icon_box";
			target: "icon_box_bg";
			after: "thumb_gen2";
		}
		program { name: "thumb_gen2";
			action: STATE_SET "min" 0.0;
			target: "icon";
			after: "thumb_gen3";
		}
		program { name: "thumb_gen3";
			action: STATE_SET "max" 0.0;
			target: "icon";
			transition: DECELERATE 0.2;
			after: "thumb_gen4";
		}
		program { name: "thumb_gen4";
			action: STATE_SET "default" 0.0;
			target: "icon";
			transition: SINUSOIDAL 0.1;
			after: "thumb_gen5";
		}
		program { name: "thumb_gen5";
			action: STATE_SET "max2" 0.0;
			target: "icon";
			transition: SINUSOIDAL 0.2;
			after: "thumb_gen6";
		}
		program { name: "thumb_gen6";
			action: STATE_SET "default" 0.0;
			target: "icon";
			transition: SINUSOIDAL 0.3;
		}
	}
}

/*** FILE MANAGER TOOLBAR ***/
group { "e/fileman/toolbar/default/base";
	// images.image: "toolbar_top.png" COMP;
	// images.image: "toolbar_bottom.png" COMP;
	parts {
		rect { "base"; nomouse;
			desc { "default"; max: 99999 48; color: 255 255 255 0; color_class: "fileman_base";
				//image.normal: "toolbar_top.png";
				//image.border: 4 4 4 4;
				//fill.smooth: 0;
			}
			desc { state: "bottom" 0.0; inherit;
				//image.normal: "toolbar_bottom.png";
			}
		}
		swallow { "e.swallow.content";
			desc { "default";
				rel1.offset: 2 2;
				rel2.offset: -3 -3;
			}
			desc { state: "bottom" 0.0; inherit; }
		}
	}

	programs {
		program { name: "orient1";
			signal: "e,state,orientation,top";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "base";
			target: "e.swallow.content";
		}
		program { name: "orient2";
			signal: "e,state,orientation,bottom";
			source: "e";
			action: STATE_SET "bottom" 0.0;
			target: "base";
			target: "e.swallow.content";
		}
	}
}

/*** EFM POPUP ***/
group { "e/fileman/popup/default";
	inherit: "e/gadman/popup";
	/*	inherit function: it starts with another group. You can add parts
	 *	from the base with "insert_after" or editing some variables
	 *	of a part just like desc.inherit			*/
	parts {
		text { "e.text.title"; effect: OUTLINE_SHADOW; after: "e.swallow.content";
			desc { "default"; color: 255 255 255 255; color_class: "fileman_popup_title";
				rel1.relative: 0.0 0.0;
				rel1.offset: 8 3;
				rel2.relative: 1.0 0.0;
				rel2.offset: -8 3;
				align: 0.5 0.0; 
				color2: 255 255 255 255;
				color3: 255 255 255 255;
				text { font: "Sans:style=Bold"; size: 11;
					text_class: "fileman_popup_title";
					align: 0.5 0.0;
					min: 0 1;
					}
			fixed: 0 1;
			}
		}
		part { "e.swallow.content";
			desc { "default";
				rel1.relative: 0.0 1.0;
				rel1.to_y: "e.text.title";
			}
		}
	}
}
